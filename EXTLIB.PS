%!PS-Adobe
%%Title: F:\POWERGU2\DES\EXTLIB.DES
%%Creator: Presentation Manager 20.30
%%CreationDate: 16:48  10/30/1996
%%DocumentProcSets: PM_1.2
%%DocumentSuppliedProcSets: PM_1.2
%%PrinterName:  
%%PrinterRect: 18 7 592 783
%%EndComments
%%BeginProcSet: PM_1.2
% Copyright (c) 1989, 1990 IBM Corporation
% Copyright (c) 1989, 1990 Microsoft Corporation
statusdict /waittimeout 0 put
0 statusdict begin jobtimeout end
ne {statusdict begin 0 setjobtimeout end} if
statusdict begin /manualfeed false store end
letter
/dw .11 .11 dtransform pop def
/dpi 300 def 18 8 translate 72 dpi div dup scale
/mdevice matrix currentmatrix def

{mark
1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0
counttomark dup 3 add -1 roll exch
2 sub mul dup floor cvi
dup 3 1 roll sub
exch dup 
3 add index exch 2 add index dup
4 1 roll
sub mul add
counttomark 1 add 1 roll 
cleartomark
} bind
settransfer
200 dict begin
/B {bind def} bind def 
/w {setlinewidth} B /wc {dw dw idtransform pop w} B /wcx {dup dw mul exch dw mul idtransform pop w} B
/_snap { transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}B
/c {_snap curveto} B /d {setdash} B /e {eofill} B /f {fill} B
/g {setgray} B /gr {grestore} B /gs {gsave} B /j {setlinejoin} B
/l {_snap lineto} B /m {_snap moveto} B /mx {matrix} B /n {newpath} B
/r {setrgbcolor} B /s {stroke} B /sm {setmatrix} B /t {show} B
/cm {currentmatrix} B /cp {closepath} B
/cw {currentlinewidth} B /cf {currentfont} B
/sd {1 1 idtransform pop abs} B /ic {initclip} B
/SF {findfont exch scalefont setfont} B /MF {findfont exch makefont setfont} B
/ms mx B /SM {setmatrix} B /scm {/msclp mx cm def} B
/md mx cm def /setmx {md sm concat} B /st {exch def} B /AS {awidthshow} B
/box {/by2 st /bx2 st /by1 st /bx1 st bx1 by1 m bx2 by1 l bx2 by2 l bx1 by2 l cp} B
/CP {currentpoint} B /K1 {{pop pop 3 1 roll add 2 1 roll m CP} exch kshow} B
/K {K1 3 1 roll add 2 1 roll m} B
/eject {ms cm currentlinewidth showpage w 0 g sm} B
/ishow {/is ( ) def {is 0 3 -1 roll put is stringwidth pop dup
is show neg 0 rmoveto round cvi 0 rmoveto} forall} B
/u {ishow} B
/ip {/ip_inv st neg /ip_y st neg /ip_x st /ip_w st} B
/id {ip_w 1 ip_inv [1 0 0 1 ip_x ip_y] 5 -1 roll imagemask /ip_y ip_y 1 add def} B
%%EndProcSet
%%EndProlog
%%BeginSetup
wc 0 g 2 setlinejoin
0 0 0 true ip
-126 232 m
[1 0 0 1 0 0] setmx
wc
%%EndSetup
%%Page: 1 1
/SavedState0 save def
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 349 m
2085 349 l
2085 423 l
323 423 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 381 m
25 25 25 CP (771) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
100 /Times-BoldItalic SF
975 2599 m
50 50 25 39 44 28 50 50 56 67 CP (Chapter 30) K
100 /Times-Bold SF
840 2400 m
39 28 50 42 33 56 50 72 25 83 50 33 39 56 72 CP (Custom Controls) K
1123 2300 m
56 56 50 CP (and) K
1007 2201 m
39 44 44 28 56 56 50 78 CP (Handlers) K
42 /Times-Roman SF
473 1986 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
/CP850 [ 0 /space/space/space/space/space/space/space/bullet/space
  /space/space/space/space/space/space/space/space/grave/acute/circumflex
  /paragraph/section/tilde/dieresis/ring/cedilla/caron/dotlessi/space
  /space/space/space/space/exclam/quotedbl/numbersign/dollar/percent
  /ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen
  /period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
  /semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L
  /M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
  /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x
  /y/z/braceleft/bar/braceright/tilde/space/Ccedilla/udieresis/eacute
  /acircumflex/adieresis/agrave/aring/ccedilla/ecircumflex/edieresis
  /egrave/idieresis/icircumflex/igrave/Adieresis/Aring/Eacute/ae/AE
  /ocircumflex/odieresis/ograve/ucircumflex/ugrave/ydieresis/Odieresis
  /Udieresis/oslash/sterling/Oslash/multiply/florin/aacute/iacute/oacute
  /uacute/ntilde/Ntilde/ordfeminine/ordmasculine/questiondown/registered
  /logicalnot/onehalf/onequarter/exclamdown/guillemotleft/guillemotright
  /space/space/space/space/space/Aacute/Acircumflex/Agrave/copyright
  /space/space/space/space/cent/yen/space/space/space/space/space/space
  /space/atilde/Atilde/space/space/space/space/space/space/space/currency
  /eth/Eth/Ecircumflex/Edieresis/Egrave/dotlessi/Iacute/Icircumflex
  /Idieresis/space/space/space/space/brokenbar/Igrave/space/Oacute/germandbls
  /Ocircumflex/Ograve/otilde/Otilde/mu/thorn/Thorn/Uacute/Ucircumflex
  /Ugrave/yacute/Yacute/macron/acute/hyphen/plusminus/space/threequarters
  /paragraph/section/divide/cedilla/ring/dieresis/periodcentered/onesuperior
  /threesuperior/twosuperior/space/space
] def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
37 /Font300 SF
548 1986 m
18 20 12 9 20 20 18 12 20 18 9 20 12 9 16 18 16 16 18 12 18 9 14 18 12 20 20 18 20 9 20 20 18 9 12 20 14 12 20 20 18 9 31 20 12 16 20 18 9 20 29 20 9 14 20 20 20 9 18 12 18 18 14 18 9 20 12 9 29 20 20 9 16 18 20 12 14 18 16 18 29 CP (Describes how to create your own custom control and handler classes to extend the) K
548 1940 m
11 18 14 18 14 20 12 25 9 18 18 18 14 14 18 12 20 14 9 14 18 16 29 9 18 20 12 9 14 20 9 20 20 12 12 18 20 20 14 CP (function of the User Interface Library.) K
42 /Font300 SF
473 1891 m
17 CP (\007) K
37 /Font300 SF
548 1891 m
11 18 12 20 31 18 20 18 9 20 18 9 16 18 9 16 18 16 16 18 12 18 9 14 18 12 20 20 18 20 9 12 20 18 20 18 9 20 18 12 18 12 18 20 16 16 18 9 20 20 18 9 16 16 18 12 18 9 12 20 14 12 20 20 18 9 12 18 16 14 18 20 12 18 20 9 18 9 16 18 12 18 18 14 27 CP (Creates a value-set control class and associated event handler classes as an example.) K
42 /Font300 SF
473 1841 m
17 CP (\007) K
37 /Font300 SF
548 1841 m
9 11 12 18 12 20 18 20 18 9 16 12 20 12 9 20 20 12 20 18 18 14 9 18 14 20 14 18 20 9 20 9 20 20 18 9 20 9 16 14 18 12 20 18 20 27 9 20 18 18 14 9 20 12 20 20 20 16 9 20 20 25 CP (You should read Chapters 4 and 7 before reading this chapter. ) K
42 /Font300 SF
473 1791 m
17 CP (\007) K
37 /Font300 SF
548 1791 m
11 12 18 12 14 18 12 18 31 9 20 18 12 18 12 18 14 9 14 18 20 20 18 9 20 20 9 20 20 18 9 20 20 9 16 14 18 12 20 18 20 27 CP (Chapters 15 and 17 cover related material.) K
42 /Font300 SF
323 1637 m
23 32 23 16 16 23 23 23 16 23 23 14 14 14 16 32 16 23 23 16 23 16 21 16 23 14 28 16 21 21 21 16 16 21 14 23 16 16 16 21 18 32 16 21 23 14 16 23 23 21 14 23 21 16 23 21 21 17 23 23 23 17 32 23 23 17 18 21 23 14 16 21 18 21 23 17 16 21 14 23 21 23 21 17 18 14 23 28 CP (This chapter describes how you can extend the User Interface Library by writing your own) K
323 1587 m
14 23 23 23 14 10 18 18 21 21 23 16 23 10 23 14 10 18 21 18 18 21 14 21 10 16 21 14 23 23 21 23 10 23 23 14 14 14 16 32 10 23 23 10 23 23 21 10 12 18 14 23 16 14 23 23 21 11 35 23 14 18 23 21 11 21 14 21 14 23 18 23 21 21 23 21 11 23 14 11 18 21 18 18 21 14 21 11 32 23 23 23 14 32 CP (window classes to encapsulate custom controls, and by writing handler classes to process input) K
323 1537 m
12 18 32 23 23 23 14 32 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 16 23 16 10 18 14 23 21 23 21 10 23 23 14 14 21 21 14 16 14 14 23 23 10 23 23 21 CP (and notification events for your custom control windows.) K
323 1460 m
23 23 14 14 21 14 23 21 18 21 16 25 11 21 23 14 11 16 23 12 23 23 14 14 23 14 16 21 18 21 23 12 14 14 23 16 12 21 12 14 23 21 18 21 16 23 12 21 32 12 12 18 23 18 21 14 12 21 18 21 23 14 12 23 18 14 14 23 35 23 21 21 21 12 23 23 23 12 32 23 23 12 21 14 21 16 14 18 23 14 14 14 12 23 25 CP (To illustrate how you accomplish these tasks, we present a full description of the Presentation) K
323 1410 m
12 18 21 18 18 21 14 21 10 26 26 30 10 16 23 10 14 21 18 10 21 10 18 21 10 14 23 16 14 23 23 21 10 14 21 18 10 21 23 14 21 23 10 16 21 23 21 23 21 39 CP (Manager value set control as a set of C++ classes.) K
79 /Times-Bold SF
323 1252 m
31 22 39 34 26 44 39 57 20 66 39 26 31 44 57 CP (Custom Controls) K
79 /Font300 SF
42 /Font300 SF
323 1160 m
14 35 16 21 14 14 21 23 14 14 21 18 23 14 21 39 CP (We use the term ) K
42 /Times-Italic SF
18 14 23 16 14 23 23 21 14 32 23 14 18 23 21 CP (custom controls) K
42 /Font300 SF
21 23 14 23 23 16 23 13 14 21 23 14 13 18 14 23 21 23 23 23 35 23 21 13 21 21 21 16 16 21 14 23 14 13 16 21 18 23 13 14 21 21 14 23 23 21 16 23 13 23 14 14 16 21 16 21 16 14 23 14 14 CP ( to refer to graphical user interface components that provide) K
323 1110 m
12 20 14 14 14 14 23 21 23 21 21 10 14 23 23 23 14 10 16 21 18 23 10 16 23 10 21 21 23 21 16 21 21 23 23 21 10 14 23 21 16 21 16 15 14 23 10 23 14 14 21 14 23 21 35 21 23 23 23 16 10 21 35 23 18 CP (some fundamentally different appearance or user input capability.) K
323 1034 m
35 23 14 18 23 21 14 21 14 21 14 23 18 23 21 21 23 21 14 14 21 23 14 14 18 21 18 18 21 14 21 14 32 23 23 23 14 32 14 23 32 23 14 16 23 23 23 14 21 14 21 21 16 21 14 23 23 23 15 32 23 23 15 21 23 14 16 21 18 21 23 15 14 14 14 32 15 23 23 14 14 21 21 18 15 18 14 23 28 CP (This section will describe how you create your own window classes that encapsulate custom) K
323 984 m
23 16 21 16 23 14 28 12 21 21 21 16 16 21 14 23 16 12 16 21 18 32 12 21 23 14 12 23 14 12 23 21 23 23 21 12 21 23 12 14 14 14 32 13 18 21 18 18 21 14 21 13 21 18 21 23 28 12 13 12 18 14 23 16 14 23 23 21 CP (controls.  These classes will be added to the User Interface Library) K
42 /Times-Roman SF
16 CP /CP1004 [ 0 /space/space/space/space/macron/breve/dotaccent/space/ring
  /space/hungarumlaut/ogonek/caron/space/space/space/space/grave/acute
  /circumflex/space/space/tilde/dieresis/ring/cedilla/caron/dotlessi
  /space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent
  /ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen
  /period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
  /semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L
  /M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
  /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x
  /y/z/braceleft/bar/braceright/asciitilde/space/space/space/quotesinglbase
  /space/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE/space/space/space/space/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
  /guilsinglright/oe/space/space/Ydierisis/space/exclamdown/cent/sterling
  /currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft
  /logicalnot/hyphen/registered/macron/ring/plusminus/twosuperior/threesuperior
  /acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
  /guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave
  /Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
  /Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
  /Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
  /Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
  /acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
  /ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Font300 SF
12 18 CP (s ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 18 23 35 12 12 20 23 21 16 21 16 21 14 23 12 CP ( hierarchy, most) K
323 934 m
13 35 23 16 16 13 23 21 23 14 16 21 23 13 18 18 21 14 21 13 21 13 18 21 13 23 14 21 23 14 14 CP (likely as a class derived from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 21 14 14 21 14 21 21 23 18 12 21 16 23 35 12 21 12 35 23 16 16 12 21 23 14 16 21 23 12 14 14 14 32 12 23 23 23 12 12 18 21 35 14 14 21 35 23 25 12 13 12 CP (.  Sometimes, you will derive from a more specialized) K
323 884 m
10 23 14 21 21 23 21 23 10 23 23 21 16 21 16 21 14 23 10 18 18 21 14 21 10 21 23 14 10 23 14 10 14 23 21 18 21 16 23 10 23 23 21 21 16 14 21 10 18 18 21 14 21 10 14 23 16 14 23 23 21 CP (control class already present in the class hierarchy beneath ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
323 807 m
21 14 21 14 23 18 23 21 21 23 21 11 23 14 11 32 23 23 23 11 23 14 11 23 21 21 23 11 23 23 23 11 18 21 23 23 14 23 23 21 21 14 12 14 21 14 21 21 23 18 12 21 23 14 12 21 16 21 12 16 21 14 23 21 23 21 12 18 14 23 14 12 23 14 12 16 21 23 23 21 12 14 14 14 32 12 21 32 12 14 21 23 42 CP (What we will cover in this chapter are the special techniques you need to know to encapsulate) K
323 758 m
14 14 16 12 18 21 18 18 21 14 21 12 32 21 23 12 16 23 23 23 12 21 23 21 35 12 23 14 13 18 14 13 21 23 14 14 21 21 14 23 23 13 21 23 28 12 13 12 18 14 23 21 23 23 23 35 23 21 13 21 21 21 16 16 21 14 23 14 13 16 21 18 23 13 12 23 21 23 23 16 23 35 14 13 23 23 21 13 12 29 21 23 CP (new, and improved, user interface components.  The objective is to make your new classes fit) K
323 708 m
23 23 21 10 12 18 16 21 23 14 23 10 23 23 10 21 18 23 10 23 14 10 16 21 14 18 21 21 10 18 14 21 21 14 23 23 10 16 23 23 23 10 21 23 21 35 10 14 14 14 32 10 18 14 23 28 9 10 12 23 23 14 18 21 23 11 23 16 21 16 23 14 28 11 21 21 21 16 16 21 14 23 16 11 16 21 18 32 11 21 23 14 11 23 14 23 14 CP (into the User Interface Library design.  This will make your objects easier to use by others, and) K
323 658 m
12 18 21 16 23 14 21 21 16 10 23 16 21 16 23 14 28 10 21 21 21 16 16 21 14 23 16 10 16 21 18 32 10 21 23 14 10 16 23 10 14 18 21 16 10 21 23 14 10 23 14 14 32 10 21 14 21 16 23 21 14 23 14 10 23 14 10 35 21 23 14 10 21 14 23 21 23 21 CP (enable them to integrate with the rest of the User Interface Library features.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 2 2
/redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
/CP1004 [ 0 /space/space/space/space/macron/breve/dotaccent/space/ring
  /space/hungarumlaut/ogonek/caron/space/space/space/space/grave/acute
  /circumflex/space/space/tilde/dieresis/ring/cedilla/caron/dotlessi
  /space/space/space/space/space/exclam/quotedbl/numbersign/dollar/percent
  /ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen
  /period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
  /semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L
  /M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
  /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x
  /y/z/braceleft/bar/braceright/asciitilde/space/space/space/quotesinglbase
  /space/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE/space/space/space/space/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
  /guilsinglright/oe/space/space/Ydierisis/space/exclamdown/cent/sterling
  /currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft
  /logicalnot/hyphen/registered/macron/ring/plusminus/twosuperior/threesuperior
  /acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
  /guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave
  /Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
  /Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
  /Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
  /Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
  /acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
  /ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def
CP1004 /Font300 /Times-Roman redefine
/CP850 [ 0 /space/space/space/space/space/space/space/bullet/space
  /space/space/space/space/space/space/space/space/grave/acute/circumflex
  /paragraph/section/tilde/dieresis/ring/cedilla/caron/dotlessi/space
  /space/space/space/space/exclam/quotedbl/numbersign/dollar/percent
  /ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma/hyphen
  /period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
  /semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L
  /M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
  /underscore/grave/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x
  /y/z/braceleft/bar/braceright/tilde/space/Ccedilla/udieresis/eacute
  /acircumflex/adieresis/agrave/aring/ccedilla/ecircumflex/edieresis
  /egrave/idieresis/icircumflex/igrave/Adieresis/Aring/Eacute/ae/AE
  /ocircumflex/odieresis/ograve/ucircumflex/ugrave/ydieresis/Odieresis
  /Udieresis/oslash/sterling/Oslash/multiply/florin/aacute/iacute/oacute
  /uacute/ntilde/Ntilde/ordfeminine/ordmasculine/questiondown/registered
  /logicalnot/onehalf/onequarter/exclamdown/guillemotleft/guillemotright
  /space/space/space/space/space/Aacute/Acircumflex/Agrave/copyright
  /space/space/space/space/cent/yen/space/space/space/space/space/space
  /space/atilde/Atilde/space/space/space/space/space/space/space/currency
  /eth/Eth/Ecircumflex/Edieresis/Egrave/dotlessi/Iacute/Icircumflex
  /Idieresis/space/space/space/space/brokenbar/Igrave/space/Oacute/germandbls
  /Ocircumflex/Ograve/otilde/Otilde/mu/thorn/Thorn/Uacute/Ucircumflex
  /Ugrave/yacute/Yacute/macron/acute/hyphen/plusminus/space/threequarters
  /paragraph/section/divide/cedilla/ring/dieresis/periodcentered/onesuperior
  /threesuperior/twosuperior/space/space
] def
CP850 /Font300 /Times-Roman redefine
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
62 /Times-Bold SF
323 2702 m
31 34 28 27 31 28 28 17 48 15 17 31 27 21 34 31 45 24 15 28 34 21 15 34 17 15 17 31 27 21 34 31 45 15 27 34 31 38 13 31 34 17 28 31 17 38 CP (Placing Your Control in the IControl Hierarchy) K
42 /Times-Roman SF
323 2614 m
16 23 23 23 12 21 21 21 14 23 12 23 14 12 21 16 21 23 32 12 21 23 14 35 16 21 14 21 23 12 23 14 12 18 14 12 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 26 26 30 12 21 13 23 23 14 14 23 21 35 21 14 23 35 14 13 23 16 21 32 23 14 13 23 21 14 18 13 14 18 16 14 16 13 21 23 28 CP (The first step toward implementing a C++ custom control is to determine where to place your) K
323 2564 m
11 21 23 14 11 23 14 11 14 23 16 14 23 23 21 CP (control in the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
10 35 23 16 16 11 23 21 23 14 16 21 23 11 21 23 11 14 14 14 32 11 18 18 21 14 21 11 32 21 23 11 16 23 23 23 11 12 18 21 18 21 21 11 14 18 23 35 11 23 16 11 11 12 20 23 21 16 21 16 21 14 23 11 CP ( hierarchy.  In most cases, your new class will be derived from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
42 /Times-Roman SF
323 2515 m
12 18 18 21 14 21 CP (class.) K
323 2438 m
23 23 28 10 12 12 23 23 12 23 14 12 23 18 21 21 12 23 14 14 21 23 18 23 12 18 14 12 18 18 21 14 21 12 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 16 23 23 23 12 21 21 21 14 23 12 23 14 12 23 23 21 16 21 16 21 14 23 12 21 23 14 12 23 14 13 21 16 21 23 32 13 23 23 14 23 14 21 21 32 CP (Deciding where in the hierarchy to place your custom control class is usually easy to do.  You) K
323 2388 m
12 18 23 23 14 14 21 23 14 14 18 10 23 23 14 32 23 14 14 23 16 10 21 23 14 10 16 23 10 21 23 23 10 23 14 14 32 10 23 23 14 14 21 21 23 10 21 23 10 23 14 14 21 23 18 23 10 14 14 14 32 CP (will usually be dealing with one of the following situations.) K
361 2322 m
17 CP CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 2322 m
12 18 18 21 14 21 10 32 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 32 21 23 10 21 10 23 23 14 14 21 14 23 18 23 21 21 23 28 CP (Encapsulating a new Presentation Manager window class.) K
361 2266 m
17 CP (\007) K
436 2266 m
12 26 26 30 10 23 14 10 23 14 21 16 23 23 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 21 10 23 23 14 14 21 14 23 21 35 21 14 23 35 16 CP (Implementation a custom control purely in C++.) K
361 2210 m
17 CP (\007) K
436 2210 m
12 18 18 21 14 21 10 32 23 23 23 14 32 10 26 26 30 10 23 23 14 14 18 14 23 21 10 23 21 10 23 23 14 23 23 21 14 23 28 CP (Extending an existing C++ window class.) K
54 /Times-Bold SF
323 2100 m
21 21 27 15 39 13 39 27 30 30 15 53 12 23 24 27 27 30 27 51 13 30 27 15 18 27 18 30 24 21 24 23 33 13 39 24 39 CP (New Presentation Manager Window Class) K
54 /Font300 SF
42 /Font300 SF
323 2014 m
18 14 23 14 21 23 14 21 12 21 14 23 35 21 23 21 21 23 21 21 18 32 19 21 12 18 21 18 18 21 14 21 21 32 23 23 23 14 32 21 16 21 23 21 23 21 39 21 23 23 14 14 21 14 23 21 18 21 16 25 21 32 21 23 21 21 14 21 14 23 18 23 21 21 23 21 21 23 21 21 21 23 23 28 CP (You can encapsulate new Presentation Manager window classes.  As an example, in this) K
323 1964 m
18 14 23 14 19 23 14 23 14 19 18 14 14 21 16 19 23 21 14 23 32 19 12 18 18 21 14 21 19 32 23 23 23 14 32 19 14 21 18 19 21 23 14 21 23 19 21 23 14 19 16 23 16 20 16 21 23 23 21 16 32 20 21 20 23 23 14 18 23 20 21 23 20 14 14 14 32 20 21 32 20 12 14 21 14 23 21 23 21 CP (chapter, we will be using a wrapper for the value set window class, which falls into this) K
323 1915 m
10 35 23 16 16 10 21 23 14 16 21 23 10 23 14 23 23 23 18 10 23 23 23 10 12 18 14 23 14 10 18 21 10 23 21 23 18 10 18 21 18 21 21 10 23 16 10 10 12 20 16 23 23 21 14 21 21 CP (category.  In cases such as this, you should derive from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 18 21 14 21 10 CP ( class.) K
323 1838 m
16 21 23 21 23 21 39 14 23 23 14 14 21 14 23 21 18 21 16 25 14 14 21 23 14 14 18 14 23 14 21 14 23 14 14 32 14 23 23 14 14 21 21 23 14 21 16 21 14 21 32 14 14 21 23 14 14 14 21 21 16 14 21 23 14 14 35 23 16 16 15 18 32 23 14 14 23 16 15 23 23 14 18 14 21 21 23 15 18 14 23 28 CP (This decision follows from the fact that we are dealing with a distinct Presentation Manager) K
323 1788 m
14 23 21 18 21 16 25 15 16 23 15 14 21 18 15 21 35 21 18 15 21 23 14 15 16 23 16 15 14 16 23 23 23 23 18 15 21 23 14 23 23 16 23 15 23 14 15 23 14 21 23 14 14 23 23 15 18 14 16 18 18 21 14 21 16 32 23 23 23 14 32 16 18 14 23 28 15 16 12 18 18 21 14 21 16 32 23 23 23 14 32 CP (window class.  This window class is unlikely to provide support for the same set of Presen-) K
323 1738 m
21 23 23 16 23 12 23 14 23 23 32 12 14 14 12 12 14 14 23 18 21 16 12 21 12 18 32 10 12 12 18 18 21 14 21 12 32 23 23 23 14 32 12 16 21 23 14 23 23 21 13 18 21 13 12 18 23 23 14 14 21 21 14 16 14 14 23 23 13 23 23 21 13 18 14 23 21 23 21 13 16 21 23 21 23 21 39 13 23 23 14 14 21 14 CP (tation Manager events and notifications, as another window class.  As a result, it would prove) K
323 1688 m
16 23 21 21 14 14 21 14 21 21 23 18 16 21 16 35 23 16 16 16 21 23 14 16 21 23 17 23 14 17 14 14 23 21 14 16 15 14 23 CP (difficult to derive from a specialized ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
16 CP ( ) K
23 14 14 32 16 23 16 23 32 16 23 14 16 23 21 14 23 21 35 21 14 23 35 14 16 18 21 32 16 23 21 14 23 32 16 12 18 18 21 14 21 CP (class, which was implemented to work with) K
323 1638 m
12 29 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 16 23 10 21 23 23 14 10 16 21 23 14 23 10 21 35 23 18 CP (some other type of Presentation Manager window.) K
323 1562 m
18 21 18 18 21 14 21 11 14 21 21 16 14 18 23 21 11 21 23 14 11 16 23 12 21 23 23 12 16 21 23 23 23 12 18 18 21 14 21 12 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 16 23 23 23 12 21 21 21 14 23 12 23 14 12 21 18 23 23 23 21 12 23 21 35 12 23 23 23 12 12 14 21 23 21 32 23 32 CP (However, you may choose to place your custom control class under one of the abstract classes) K
323 1512 m
12 35 23 16 16 12 23 21 23 14 16 21 23 CP (derived from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 21 12 23 21 23 18 12 12 CP (, such as ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 CP (ITextControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 16 23 12 12 CP (, or ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IButton) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 23 16 14 23 23 21 11 16 23 23 23 11 16 14 11 12 18 14 23 14 11 23 23 12 23 14 23 23 32 12 23 23 28 10 12 12 CP (.  You would do this, if your control) K
323 1462 m
14 23 16 14 23 23 21 17 35 23 14 18 23 21 17 16 23 23 23 17 16 14 17 12 21 14 23 35 21 23 21 17 16 23 25 17 17 12 18 21 18 18 21 14 21 17 21 18 23 23 14 17 16 23 17 23 21 16 14 23 23 21 16 18 16 23 14 23 21 23 21 23 18 21 23 14 18 14 16 23 23 23 23 18 18 23 14 23 23 21 CP (could support the behavior required of those classes.  For example, if your custom control) K
323 1412 m
23 14 23 23 21 16 23 14 16 14 23 21 32 16 23 14 16 16 21 35 35 21 16 23 23 16 23 16 23 23 14 14 21 21 14 14 23 23 21 16 23 21 16 16 23 16 16 21 18 23 21 18 16 21 23 21 35 16 14 14 16 23 23 21 16 12 18 14 23 21 14 23 23 21 17 14 23 21 14 17 23 14 14 32 17 14 14 21 21 23 CP (dealt with text contents, and it made sense for an application programmer to want to apply) K
[37 0 0 42 0 0] /Courier MF
323 1362 m
22 22 22 22 CP (text) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 23 23 21 10 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (setText) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 35 23 16 16 10 21 23 14 16 21 23 10 23 14 23 23 21 10 23 23 23 10 23 21 23 14 10 12 18 14 21 21 14 23 23 10 16 23 23 23 10 23 14 10 18 23 23 14 14 21 23 23 16 10 CP ( functions to your objects, then you could derive from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 CP (ITextControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
54 /Times-Bold SF
323 1242 m
31 31 39 13 30 15 13 27 15 24 23 30 33 13 15 27 23 18 30 27 39 13 45 27 18 21 30 39 CP (Custom Control Purely in C++) K
54 /Font300 SF
42 /Font300 SF
323 1156 m
35 23 16 16 12 14 23 23 14 21 16 14 18 12 21 23 14 16 21 23 12 14 14 14 32 12 23 23 23 12 12 20 14 21 23 14 14 12 14 18 23 39 12 12 12 26 26 30 12 23 14 12 23 14 21 16 23 23 12 18 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 14 23 21 35 21 14 23 35 14 12 23 21 21 13 23 23 28 CP (You can implement custom controls purely in C++.  Most likely, you will derive straight from) K
[37 0 0 42 0 0] /Courier MF
323 1106 m
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 21 23 23 23 21 10 23 21 23 14 14 14 23 23 10 18 21 10 18 23 23 18 21 21 16 10 21 35 21 18 10 21 23 14 10 23 21 23 35 10 16 23 16 10 12 23 23 14 10 12 18 21 18 21 21 10 21 18 21 23 14 10 23 14 10 CP ( in these cases, too, for much the same reasons as outlined above.) K
323 1029 m
14 21 16 16 23 21 15 21 15 23 14 14 32 15 18 18 21 14 21 15 32 23 23 23 14 32 16 16 21 23 21 23 21 39 16 23 23 14 14 21 14 23 21 18 21 16 25 16 14 21 14 21 21 23 18 16 21 16 21 23 21 23 16 14 23 23 16 23 23 16 23 23 23 16 12 18 23 16 23 32 16 16 21 23 14 23 16 23 16 CP (In other words, you do not have a special Presentation Manager window class with a corre-) K
323 979 m
14 23 21 23 23 23 35 23 21 14 21 21 21 16 16 21 14 23 14 14 16 21 18 23 14 16 23 23 23 15 23 21 14 23 21 35 21 14 23 35 14 15 21 23 21 23 15 23 23 23 15 12 23 21 21 14 18 23 16 15 15 12 21 16 23 23 21 21 23 16 23 15 32 23 23 23 14 32 15 23 23 14 23 23 23 23 18 CP (sponding window procedure.  Instead, you have implemented your user interface component) K
323 930 m
21 23 28 14 15 12 18 16 21 14 23 23 21 23 15 23 21 21 14 14 21 14 21 21 23 18 16 16 23 16 14 21 18 16 21 16 23 23 21 16 12 29 23 23 23 14 32 16 16 21 23 21 23 21 39 16 23 23 14 14 21 14 23 21 18 21 16 25 16 21 14 16 21 23 21 23 16 21 16 23 35 16 21 16 23 23 14 18 23 CP (using a more generic Presentation Manager window, and a set of specialized handlers.  The) K
323 880 m
23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 14 16 21 18 32 CP (User Interface Library) K
42 /Times-Roman SF
16 CP CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Font300 SF
14 18 CP (s ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (ICanvas) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
16 23 13 23 23 14 23 13 18 14 23 14 13 16 23 13 18 21 14 23 35 21 23 21 13 23 23 23 23 13 21 16 21 13 12 18 21 23 14 14 21 23 14 16 21 23 13 18 14 14 13 23 23 21 13 12 18 18 21 14 21 13 CP ( class, and its derivatives, are good examples of this kind of) K
323 830 m
21 14 23 35 21 23 21 14 14 23 16 14 23 23 21 15 21 14 21 23 15 21 23 28 14 15 12 14 23 16 14 23 23 21 15 35 23 14 18 23 21 CP (custom control.  The date control example) K
42 /Font500 SF
44 CP (\227) K
42 /Font300 SF
18 23 23 14 14 23 23 14 23 14 23 18 14 23 14 14 32 14 18 21 23 23 21 21 14 14 14 21 21 14 14 14 23 35 14 21 14 18 21 18 23 14 23 21 14 23 32 CP (which uses a multicell canvas with spin buttons) K
42 /Font500 SF
323 780 m
44 CP (\227) K
42 /Font300 SF
20 23 14 21 23 21 23 14 23 CP (given in ) K
23 21 20 16 21 14 23 21 23 30 CP (Chapter 11) K
20 12 CP (, ) K
42 /Font500 SF
21 CP (\223) K
42 /Font300 SF
12 18 14 23 16 14 23 23 30 20 14 18 14 28 CP (List Controls,) K
42 /Font500 SF
21 CP (\224) K
42 /Font300 SF
35 23 14 18 23 21 20 16 23 20 23 23 14 23 20 18 14 23 14 20 16 23 20 21 14 23 35 21 23 21 20 16 21 23 14 23 23 21 20 18 21 23 14 23 23 16 23 20 CP ( provides another example of this kind of custom) K
323 730 m
12 14 23 16 14 23 23 21 CP (control.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (772) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 3 3
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
54 /Times-Bold SF
323 2709 m
21 21 27 15 39 13 39 27 30 30 15 53 12 31 31 39 13 27 30 15 18 21 15 27 36 13 30 27 13 27 30 15 30 30 24 18 27 36 CP (Extending an Existing C++ Window Class) K
42 /Times-Roman SF
323 2623 m
16 21 23 21 23 21 39 22 23 23 14 14 21 14 23 21 18 21 16 25 22 21 22 16 23 22 23 23 14 14 21 21 14 14 21 14 21 21 23 18 22 21 35 23 18 22 16 23 22 23 23 14 14 21 14 23 18 23 21 21 23 21 22 26 26 30 22 21 22 21 23 14 23 23 16 23 22 23 21 21 22 23 23 28 CP (You can provide a C++ encapsulation of some specialization of a Presentation Manager) K
323 2573 m
26 26 30 14 23 23 14 14 18 14 23 21 14 21 23 14 14 35 23 16 16 14 21 23 14 16 21 23 14 23 14 23 23 23 18 14 23 23 23 14 12 21 18 21 21 14 18 14 23 14 14 23 16 14 14 12 26 26 30 14 23 14 14 23 21 14 21 14 23 18 23 21 21 23 21 14 23 23 21 21 16 14 21 15 32 23 23 23 14 32 CP (window already encapsulated in C++.  In this case, you should derive from the existing C++) K
323 2523 m
12 18 18 21 14 21 CP (class.) K
323 2446 m
23 23 14 18 23 21 14 23 21 17 16 23 17 23 23 14 23 17 18 14 23 14 17 16 23 17 21 14 23 35 21 23 21 17 23 23 23 23 17 30 CP (A good example of this kind of extension) K
42 /Times-Roman SF
44 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\227) K
42 /Times-Roman SF
14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 21 16 14 23 23 16 18 14 17 23 14 14 21 21 14 23 23 21 21 14 17 14 21 23 14 CP (that technically is not a custom control) K
42 /Font500 SF
44 CP (\227) K
42 /Times-Roman SF
21 23 14 16 18 14 CP (is the) K
323 2396 m
14 18 18 21 14 21 14 23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 15 16 21 18 32 CP (User Interface Library class ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IGraphicPushButton) K
42 /Times-Roman SF
14 23 23 14 23 14 16 21 23 23 23 14 23 21 14 18 21 18 23 14 18 18 21 14 21 14 18 14 23 28 13 14 12 CP (.  This class uses an underlying ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (WC_BUTTON) K
42 /Times-Roman SF
12 CP (,) K
323 2347 m
21 21 23 14 14 21 14 18 23 14 CP (just like ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (IPushButton) K
42 /Times-Roman SF
23 21 21 14 14 21 14 21 21 23 18 20 21 20 23 23 14 23 23 14 21 23 14 16 20 23 14 14 14 21 23 23 14 14 21 23 23 16 20 26 26 30 21 14 21 23 23 14 14 14 23 23 21 21 18 21 23 14 23 23 16 23 21 14 23 23 21 12 CP (, but provides additional C++ functionality \(including a specialized) K
323 2297 m
14 21 23 14 14 21 18 23 14 23 14 14 23 23 23 14 16 23 16 14 16 21 14 18 21 21 14 14 14 15 21 23 21 35 15 23 14 15 16 16 21 14 23 23 21 23 15 32 21 16 23 15 16 21 23 32 23 CP (owner draw handler\) to make it easier for you to use the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (WC_BUTTON) K
42 /Times-Roman SF
16 23 14 23 21 21 14 18 23 14 14 18 21 14 23 23 21 16 23 14 23 14 14 32 14 CP ( with graphics instead of) K
323 2247 m
12 14 23 21 14 CP (text.) K
62 /Times-Bold SF
323 2120 m
45 31 34 34 17 61 14 17 31 27 21 34 31 45 15 52 31 21 24 34 45 15 27 34 31 38 13 31 34 17 21 28 34 28 21 24 34 31 45 CP (Constructing Your Custom Control Window) K
42 /Times-Roman SF
323 2032 m
14 23 16 14 23 23 21 18 35 23 14 18 23 21 18 16 23 23 23 18 16 23 18 14 21 21 23 18 21 18 14 18 16 14 16 18 21 23 14 18 12 20 14 14 21 16 23 14 21 32 CP (Naturally, the first aspect of your custom control) K
42 /Font500 SF
16 CP (\222) K
42 /Times-Roman SF
12 23 23 14 14 21 23 16 14 18 23 23 21 17 18 14 17 18 18 21 16 23 23 21 17 14 14 14 32 17 21 32 18 23 23 14 18 21 23 18 18 CP (s design we will address is construction.) K
323 1982 m
12 23 23 14 14 21 23 16 14 18 23 23 21 10 14 21 21 14 23 23 10 23 23 14 16 23 23 10 18 23 23 14 14 21 23 14 14 23 23 10 23 32 14 10 14 21 21 35 10 23 14 10 18 21 23 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 28 CP (Your custom control has to meet two obligations during object construction.) K
361 1905 m
17 CP CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 1905 m
21 23 14 10 23 14 10 23 21 23 21 21 14 14 21 10 23 23 21 10 23 21 14 21 21 16 21 11 18 14 11 32 23 23 23 14 32 11 16 21 23 21 23 21 39 11 23 23 14 14 21 14 23 21 18 21 16 25 11 23 23 14 23 23 23 23 18 21 16 16 23 21 11 21 11 14 21 23 14 11 21 16 23 18 23 28 CP (Ensure that a corresponding Presentation Manager window is created and attached to the) K
436 1856 m
12 14 23 16 14 23 23 21 10 21 23 14 10 23 23 14 14 23 21 18 21 16 23 21 16 10 14 21 21 14 23 23 10 26 26 30 CP (C++ object representing the control.) K
361 1779 m
17 CP (\007) K
436 1779 m
12 14 21 21 14 23 23 10 26 26 30 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 14 10 21 14 16 14 21 21 23 18 10 21 14 21 14 18 10 14 21 21 14 23 23 10 23 23 21 10 21 21 14 14 21 14 14 14 23 14 10 23 14 16 21 23 23 16 25 CP (Properly initialize any object state specific to your custom control C++ object.) K
323 1702 m
14 23 21 18 21 16 25 18 23 23 14 23 23 23 23 18 21 16 16 23 21 18 21 23 14 18 14 21 23 14 18 18 21 35 23 18 18 21 18 18 23 21 32 14 21 18 14 18 23 35 14 21 18 18 14 23 16 14 23 23 21 18 23 16 21 16 23 14 28 18 21 21 21 16 16 21 14 23 16 18 16 21 18 32 19 21 23 28 CP (The User Interface Library controls almost always assumes that the corresponding Presen-) K
323 1652 m
14 21 21 14 23 23 28 26 26 30 28 21 23 14 28 16 23 28 23 23 14 14 21 14 23 35 23 21 28 21 23 14 29 14 21 29 23 21 14 21 23 16 14 18 23 23 21 29 23 21 21 23 29 18 21 23 29 32 23 23 23 14 32 29 16 21 23 21 23 21 39 29 23 23 14 14 21 14 CP (tation Manager window has been constructed at the completion of the C++ object) K
42 /Font500 SF
16 CP (\222) K
42 /Font300 SF
18 CP (s) K
323 1602 m
23 21 14 23 21 21 23 21 17 23 14 14 21 23 18 23 17 23 23 21 17 23 21 14 14 21 21 18 21 23 18 23 21 21 18 18 23 23 14 14 21 23 23 16 18 16 21 23 35 21 35 18 16 21 23 14 23 18 14 21 23 14 18 18 21 16 23 18 23 21 18 18 14 23 28 17 18 12 14 23 14 21 23 16 14 18 23 23 21 CP (constructor.  This ensures that other member functions can be called and usually executed) K
323 1553 m
18 14 13 23 23 14 14 23 21 23 23 23 21 13 18 14 23 28 12 13 12 14 18 16 14 16 13 23 23 14 14 21 23 23 16 13 16 21 23 35 21 35 13 16 21 23 14 23 14 21 35 23 18 14 14 14 21 21 14 23 14 14 23 23 23 14 23 23 14 16 14 23 23 21 16 14 14 23 23 23 14 14 32 14 12 20 14 16 21 23 23 16 23 CP (properly, without requiring you to call some other member function first.  This convention is) K
323 1503 m
18 14 13 14 21 21 14 23 23 13 21 23 14 13 14 21 23 14 13 21 16 23 18 23 21 13 23 21 23 14 14 14 14 18 16 23 14 21 23 16 14 18 23 23 21 14 26 26 30 14 16 23 14 21 18 14 35 21 16 23 14 21 14 18 21 23 14 21 23 14 14 23 14 14 32 14 23 23 14 23 21 21 23 14 23 14 14 23 14 23 35 14 18 CP (simply in keeping with the basic premise of C++ constructors:  they ensure that the object is) K
323 1453 m
14 23 16 14 23 23 21 10 35 23 14 18 23 21 11 16 23 23 23 11 12 23 25 11 11 12 21 14 21 14 18 11 14 21 23 23 14 14 21 16 21 23 23 11 23 23 21 11 21 14 23 21 14 18 11 21 11 23 14 11 18 23 21 32 14 21 CP (always in a stable and operational state.  So, your custom control) K
42 /Font500 SF
16 CP (\222) K
42 /Font300 SF
21 16 21 21 10 21 23 21 14 10 14 18 23 35 10 18 16 23 14 21 23 16 14 18 23 23 21 10 18 CP (s constructors must take care) K
323 1403 m
12 29 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 16 21 23 23 16 23 10 21 23 14 10 23 23 14 14 21 21 16 21 10 16 23 CP (of creating the proper Presentation Manager window.) K
323 1326 m
21 16 21 14 14 21 23 14 14 18 14 21 21 14 23 23 14 16 23 23 23 14 16 23 14 18 14 21 21 23 18 21 14 21 23 14 15 23 23 14 21 14 14 21 14 14 14 23 14 15 16 23 15 21 16 21 21 15 21 23 21 14 15 23 14 15 21 23 21 23 15 14 14 14 32 15 23 18 14 21 15 23 23 23 15 12 21 18 16 23 23 21 15 16 32 CP (Of course, you also will have to take care of initializing the aspects of your objects that are) K
323 1277 m
16 23 23 23 18 16 23 18 18 16 21 23 35 21 35 18 21 14 21 23 18 21 23 14 18 23 23 14 14 21 23 16 14 18 23 23 21 18 21 23 23 14 21 23 14 18 14 14 14 32 18 18 14 23 28 17 18 12 14 23 16 14 23 23 21 18 35 23 14 18 23 21 19 16 23 23 23 19 23 14 19 21 14 16 14 21 21 23 18 CP (specific to your custom control.  This will include constructing the data members of your) K
323 1227 m
16 23 13 21 14 21 14 18 13 21 23 14 13 21 21 14 14 21 14 14 14 23 14 13 23 14 16 21 23 23 16 23 13 23 14 13 12 20 16 21 18 18 21 21 21 23 14 21 16 21 14 18 23 23 14 14 21 23 23 16 14 14 21 23 32 14 23 23 14 35 16 23 16 16 21 23 14 23 23 21 14 12 18 18 21 14 21 14 23 21 23 14 16 21 23 CP (derived class, and performing what functions are necessary, to properly initialize the state of) K
323 1177 m
12 18 14 23 21 23 23 23 35 23 21 10 18 14 14 10 23 23 21 10 14 21 21 14 23 23 10 16 23 23 23 CP (your object and its components.) K
323 1100 m
21 18 21 23 28 10 11 12 18 16 23 14 21 23 16 14 18 23 23 21 11 21 14 18 21 23 11 21 21 16 23 14 11 21 23 14 23 23 16 23 11 14 14 21 11 18 14 23 16 14 23 23 21 11 23 16 21 16 23 14 28 11 21 21 21 16 16 21 14 23 16 12 16 21 18 32 12 21 23 14 12 12 23 23 14 14 23 21 23 23 23 21 12 23 30 CP (By convention, the User Interface Library controls all provide three basic constructors.  These) K
323 1050 m
23 23 21 13 12 18 14 21 21 14 23 23 13 26 26 30 13 21 23 14 13 23 21 21 14 14 21 13 23 23 21 13 21 14 21 21 16 21 13 23 21 21 13 23 23 23 13 23 21 14 23 32 13 23 14 13 18 23 21 32 13 23 23 35 35 23 21 13 14 18 23 35 13 21 21 16 23 14 13 21 23 14 14 21 14 23 23 21 23 CP (handle the three most common ways in which you can create and attach the C++ objects, and) K
323 1001 m
12 29 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 23 23 14 23 23 23 23 18 21 16 16 23 21 10 21 23 14 CP (the corresponding Presentation Manager window.) K
54 /Times-Bold SF
323 880 m
24 24 15 30 30 27 42 13 39 27 30 30 15 53 12 30 18 15 53 12 23 27 18 24 30 24 18 21 30 27 39 CP (Constructor With Window Handler) K
54 /Font300 SF
42 /Font300 SF
323 794 m
23 14 23 23 23 18 19 12 18 32 23 23 23 14 32 19 14 23 16 14 23 23 21 19 16 21 23 21 23 21 39 19 23 23 14 14 21 14 23 21 18 21 16 25 19 23 14 19 23 23 23 23 18 21 16 16 23 21 20 23 21 14 23 32 20 12 18 14 23 16 14 23 23 21 20 35 23 14 18 23 21 20 26 26 30 CP (C++ custom controls, which correspond to Presentation Manager control windows, should) K
323 744 m
18 14 23 28 10 12 12 29 23 23 23 14 32 12 16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 12 23 23 14 14 18 14 23 21 12 23 21 12 16 23 12 21 14 23 23 21 23 12 21 23 14 12 18 21 23 21 14 12 14 21 23 14 12 16 23 14 21 23 16 14 18 23 23 21 12 21 12 21 23 14 23 23 16 23 CP (provide a constructor that takes the handle of an existing Presentation Manager window.  This) K
323 694 m
16 23 16 21 16 23 14 28 13 21 21 21 16 16 21 14 23 16 13 16 21 18 32 16 23 23 23 14 14 18 21 21 14 14 14 21 14 16 23 16 14 26 26 30 16 23 23 23 14 23 23 14 23 21 14 21 21 16 21 14 18 14 23 16 14 23 23 21 14 26 26 30 14 21 18 23 14 23 14 14 23 23 23 14 18 14 14 35 16 21 23 CP (permits you to use C++ controls created by non-C++ \(or at least non-User Interface Library\)) K
323 645 m
12 18 35 21 16 23 23 16 23 CP (programs.) K
323 568 m
23 16 21 23 23 21 14 18 21 21 35 23 18 21 23 23 14 14 21 14 23 18 23 21 21 23 21 21 23 21 23 14 21 16 21 23 14 21 16 21 12 26 26 30 22 23 14 22 23 14 21 16 14 14 23 21 22 14 23 16 14 23 23 21 22 16 23 23 23 22 14 23 21 35 21 14 23 35 14 22 23 23 23 22 16 16 CP (If you implement your control entirely in C++, rather than encapsulating some standard) K
323 518 m
18 14 12 14 16 12 12 12 14 23 14 21 23 16 14 18 23 23 21 12 18 14 23 14 12 21 23 14 23 23 16 23 12 14 23 23 12 14 14 14 32 12 23 14 23 21 23 23 16 23 12 23 23 23 12 23 21 23 14 12 12 18 18 21 14 21 12 32 23 23 23 14 32 12 16 21 23 21 23 21 39 13 23 23 14 14 21 14 23 21 18 21 16 25 CP (Presentation Manager window class, then you probably will not provide this constructor.  It is) K
323 468 m
21 10 21 23 21 23 10 23 23 21 21 16 14 21 10 23 14 23 23 32 10 18 14 23 16 14 23 23 21 10 16 23 23 23 10 16 23 10 21 23 23 10 16 23 16 10 21 14 23 23 21 23 10 32 23 23 23 14 32 10 23 23 21 10 18 21 10 12 21 18 21 21 10 14 21 23 14 10 23 14 10 12 20 16 21 18 18 21 21 21 23 11 14 23 23 CP (not necessary, in that case, as any window handle for one of your controls would already have a) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (773) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 4 4
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
23 14 14 32 13 23 21 14 21 14 21 23 18 18 21 13 18 14 21 21 14 23 23 13 26 26 30 13 23 32 14 14 21 23 21 23 14 14 23 23 23 21 21 14 23 23 23 14 12 14 21 23 35 21 35 21 30 14 14 12 14 14 14 23 14 14 32 14 23 21 14 21 14 21 23 18 18 21 14 14 21 21 14 23 23 14 26 26 30 CP (C++ object associated with it.  Remember, you cannot have two C++ objects associated with) K
323 2660 m
24 21 21 18 24 12 18 14 23 14 24 23 23 24 18 14 14 21 14 21 23 25 16 23 16 16 25 32 23 23 23 14 32 25 16 21 23 21 23 21 39 25 23 23 14 14 21 14 23 21 18 21 16 25 25 21 35 21 18 25 21 23 14 CP (the same Presentation Manager window \(for details on this, see ) K
23 24 16 21 14 23 21 23 30 CP (Chapter 4) K
24 12 CP (, ) K
42 /Times-Roman SF
21 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\223) K
42 /Times-Roman SF
12 18 32 23 23 23 14 40 CP (Windows,) K
323 2610 m
18 14 23 21 23 28 10 23 23 21 10 12 18 16 21 14 23 23 21 32 CP (Handlers, and Events) K
42 /Font500 SF
21 CP (\224) K
42 /Times-Roman SF
12 16 CP (\).) K
323 2533 m
14 23 14 23 23 23 18 10 16 23 14 21 23 16 14 18 23 23 21 10 23 16 21 23 23 21 14 18 10 18 14 23 14 10 16 23 10 23 23 14 14 21 14 23 21 35 21 14 23 35 14 10 21 23 28 CP (The implementation of this standard constructor should:) K
361 2467 m
17 CP CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 2467 m
12 21 14 23 23 21 23 10 32 23 23 23 14 32 10 14 23 23 23 14 10 21 23 14 10 21 14 21 23 14 14 21 27 CP (Validate the input window handle.) K
361 2411 m
17 CP (\007) K
436 2411 m
12 21 23 23 14 10 16 21 23 23 16 23 10 21 23 14 10 16 23 10 18 14 10 32 23 23 23 14 32 10 21 23 14 10 14 21 23 14 10 21 16 23 18 23 28 CP (Ensure that the window is of the proper type.) K
361 2355 m
17 CP (\007) K
436 2355 m
12 29 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 21 23 14 10 23 14 10 14 21 21 14 23 23 10 26 26 30 10 21 23 14 10 23 21 21 14 14 32 CP (Attach the C++ object to the Presentation Manager window.) K
361 2299 m
17 CP (\007) K
436 2299 m
12 18 21 16 14 23 23 21 16 10 14 23 16 14 23 23 21 10 16 23 23 23 10 14 21 23 14 10 18 16 21 14 23 23 21 23 10 14 21 14 21 21 23 18 10 23 23 21 10 23 21 21 14 14 32 CP (Attach any special handlers that your control requires.) K
323 2233 m
12 16 23 23 12 16 23 16 13 16 23 14 21 23 16 14 18 23 23 21 13 18 14 23 14 13 16 23 13 23 23 14 14 21 14 23 21 35 21 14 23 35 14 13 21 23 14 13 18 14 13 32 23 14 21 30 CP (Below is the implementation of this constructor for our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 12 14 23 23 12 16 23 14 21 21 16 12 21 39 11 12 12 21 14 23 35 21 23 21 12 CP ( example.  We factor out the) K
323 2183 m
16 21 23 14 23 23 21 15 14 23 21 35 21 14 23 35 14 15 23 14 15 14 14 16 21 18 23 21 16 16 23 21 21 16 21 32 16 14 21 23 14 16 23 18 16 16 23 14 21 23 16 14 18 23 23 21 16 21 23 14 16 35 23 16 16 16 21 23 23 21 16 23 23 14 14 21 21 14 14 21 14 14 14 23 14 16 14 21 23 14 21 21 CP (actual initialization code from the constructor so that we can reuse it to implement another) K
[37 0 0 42 0 0] /Courier MF
323 2134 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 14 23 14 21 23 16 14 18 23 23 21 10 CP ( constructor.) K
[37 0 0 33 0 0] /Courier MF
398 2052 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet :: ValueSet \( const IWindowHandle &hwnd \)) K
398 2018 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  : IControl\(\)) K
398 1985 m
22 22 22 CP (  {) K
398 1952 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> initialize\( hwnd \);) K
398 1919 m
22 22 22 CP (  }) K
398 1852 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (void ValueSet :: initialize \( const IWindowHandle &hwnd \)) K
398 1819 m
22 22 22 CP (  {) K
398 1786 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IASSERTPARM\( hwnd.isValid\(\) \);) K
398 1753 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 1719 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    className\( "#nn" \);) K
398 1686 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  WinQueryClassName\( hwnd, 4, className \);) K
398 1653 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IASSERTSTATE\( className == "#39" \);) K
398 1620 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> startHandlingEventsFor\( hwnd \);) K
398 1587 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> setAutoDestroyWindow\( false \);) K
398 1553 m
22 22 22 CP (  }) K
[37 0 0 33 0 0] /Font300 MF
42 /Font300 SF
323 1459 m
24 23 14 24 14 14 21 21 24 21 23 28 CP (The call to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IWindow::startHandlingEventsFor) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 24 23 14 24 14 21 21 14 23 23 24 32 23 23 23 14 32 24 26 26 30 24 18 14 23 14 24 18 21 23 21 21 14 14 21 24 CP ( attaches this C++ window object to the) K
323 1409 m
32 23 23 23 14 32 11 21 23 14 11 18 18 21 14 21 23 23 18 11 23 14 12 23 16 21 16 23 14 28 12 21 21 21 16 16 21 14 23 16 12 16 21 18 32 12 21 23 14 12 18 21 18 23 21 21 12 18 14 23 28 11 12 12 29 23 23 23 14 32 12 16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 CP (Presentation Manager window.  This causes the User Interface Library to subclass the window) K
323 1359 m
32 23 23 23 14 40 10 11 12 14 23 16 14 23 23 21 12 21 23 14 12 23 14 12 23 21 23 21 21 14 14 21 12 21 23 12 23 14 12 18 16 21 14 23 23 21 23 12 23 16 21 16 23 14 28 12 21 21 21 16 16 21 14 23 16 12 16 21 18 32 12 18 21 14 23 21 23 21 12 23 23 21 12 12 21 16 23 23 21 21 23 16 23 CP (procedure, and enables User Interface Library handlers to be attached to the control.  Window) K
323 1310 m
23 14 14 23 23 23 14 18 21 16 14 23 23 21 16 14 23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 14 16 21 18 32 14 21 23 28 13 14 12 18 16 21 14 23 23 21 23 14 21 18 23 23 14 14 23 14 14 23 21 23 21 14 21 23 18 14 23 14 21 23 14 23 21 23 14 14 14 14 14 32 14 18 14 23 21 23 21 CP (events will then be dispatched to those handlers.  The User Interface Library requires you to) K
323 1260 m
18 14 18 14 16 18 18 12 18 18 21 21 23 16 23 18 23 23 14 14 21 23 16 14 18 23 23 21 18 32 23 23 23 14 32 18 16 23 23 23 18 16 23 18 23 23 14 14 21 14 23 35 23 21 18 21 16 23 16 21 23 18 21 35 14 14 21 35 23 18 18 23 23 14 14 21 23 23 16 18 14 21 23 14 18 14 14 21 21 CP (call that function sometime before completion of your window construction process.  It is) K
323 1210 m
21 23 14 16 16 23 16 16 18 14 23 21 23 21 16 32 23 23 23 14 32 17 23 23 14 14 23 21 21 16 21 14 23 14 17 23 14 23 21 23 17 23 14 17 23 16 21 16 23 14 28 17 21 21 21 16 16 21 14 23 16 17 16 21 18 32 17 21 23 14 17 21 14 23 21 23 21 17 23 14 17 23 16 21 18 18 21 21 21 23 CP (necessary to enable the User Interface Library to begin intercepting window events for the) K
323 1160 m
23 21 21 16 15 23 21 21 15 23 23 28 13 15 12 14 23 16 14 23 23 21 15 21 23 14 15 23 14 15 23 21 23 21 21 14 14 21 15 21 23 21 23 15 23 23 23 15 18 16 21 14 23 23 21 23 15 23 23 21 15 23 14 15 18 14 23 21 23 21 16 21 14 23 23 16 16 23 14 16 23 23 21 16 12 14 23 16 14 23 23 21 CP (control, and to route events to any handlers you have attached to the control.  You can read) K
323 1110 m
10 23 14 10 35 18 14 23 21 23 21 21 35 10 21 14 18 21 23 10 18 14 23 14 10 14 23 23 23 21 10 21 16 23 35 CP (more about this basic mechanism in ) K
23 10 16 21 14 23 21 23 30 CP (Chapter 4) K
10 12 CP (, ) K
42 /Font500 SF
21 CP (\223) K
42 /Font300 SF
12 18 14 23 21 23 28 10 23 23 21 10 12 18 16 21 14 23 23 21 32 10 12 18 32 23 23 23 14 40 CP (Windows, Handlers, and Events.) K
42 /Font500 SF
21 CP (\224) K
42 /Font300 SF
323 1033 m
23 21 23 32 10 12 29 23 23 23 14 32 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 21 23 14 10 16 23 10 23 23 14 14 21 23 16 14 18 21 23 10 21 14 14 21 35 23 14 23 21 11 21 23 14 11 21 14 23 21 18 14 23 11 23 14 11 14 14 21 21 11 21 23 14 11 21 21 14 14 23 32 CP (Notice the call to disable the automatic destruction of the Presentation Manager window, when) K
323 984 m
14 21 21 14 23 23 17 21 23 14 18 12 29 23 23 23 14 32 18 21 23 14 18 21 14 21 21 16 21 18 14 23 23 18 23 14 23 18 14 21 21 14 23 23 18 26 26 30 18 21 23 14 18 21 21 23 14 25 18 18 12 23 21 14 21 23 16 14 18 21 23 18 18 14 18 14 21 21 14 23 23 18 26 26 30 18 21 23 14 CP (the C++ object is destructed.  Since the C++ object did not create the window, the object) K
323 934 m
21 16 21 21 12 21 23 21 14 12 14 14 14 32 12 14 21 23 14 12 21 23 23 21 12 26 26 30 16 23 23 23 12 23 18 14 21 12 18 14 12 21 16 21 23 14 12 23 14 21 23 14 14 12 18 14 12 14 16 13 13 12 14 14 13 23 23 16 14 18 21 23 13 23 14 14 21 21 14 14 21 35 23 14 23 21 13 14 23 23 13 23 14 23 23 23 18 CP (should not automatically destroy it.  It is likely there is also non-C++ code that will take care) K
323 884 m
18 14 23 14 10 23 14 10 23 23 14 14 21 23 16 14 18 21 23 10 32 23 23 23 14 32 10 21 14 14 21 35 23 14 23 21 10 21 23 14 10 21 14 23 21 18 14 23 10 18 23 21 32 14 21 10 23 14 23 23 23 18 11 23 23 28 9 11 12 29 23 23 23 14 32 11 21 23 14 11 23 23 14 23 23 16 14 18 21 23 11 16 23 CP (of destroying the window.  You should always disable the automatic window destruction in this) K
323 834 m
12 14 23 14 21 23 16 14 18 23 23 21 10 23 16 21 23 23 21 14 18 CP (standard constructor.) K
54 /Times-Bold SF
323 714 m
24 18 27 15 30 45 24 31 12 27 27 15 27 15 39 13 18 24 27 30 30 30 30 13 27 18 13 23 27 18 24 30 24 18 21 30 27 39 CP (Constructor to Support Dialog Template) K
54 /Font300 SF
42 /Font300 SF
323 628 m
32 23 23 23 14 32 19 16 21 23 21 23 21 39 19 23 23 14 14 21 14 23 21 18 21 16 25 19 21 14 21 14 23 18 23 21 21 23 21 19 23 21 14 23 32 20 12 18 14 23 16 14 23 23 21 20 35 23 14 18 23 21 20 14 23 21 35 21 14 23 35 14 20 14 21 23 14 20 18 21 18 18 21 14 30 CP (Classes that implement custom controls, which encapsulate Presentation Manager window) K
323 578 m
16 21 14 23 14 23 23 14 32 23 23 23 14 32 14 14 23 21 16 21 23 15 21 15 18 14 23 21 35 23 23 15 21 15 18 21 15 18 14 23 21 21 21 21 15 14 21 23 14 15 16 23 14 21 23 16 14 18 23 23 21 15 21 15 21 23 14 23 23 16 23 15 23 18 14 21 15 23 14 23 23 23 18 15 18 21 18 18 21 14 21 CP (classes should also provide a constructor that accepts as arguments a parent window pointer) K
323 528 m
14 23 21 18 21 16 25 13 21 18 21 23 14 13 16 23 13 18 21 21 23 21 14 18 23 14 13 16 21 23 23 21 16 32 13 23 14 13 16 23 14 21 23 16 14 18 23 23 21 13 18 14 23 14 13 21 18 23 13 14 14 14 32 13 18 16 21 18 32 13 13 12 14 21 14 16 14 14 23 21 23 14 13 14 23 16 14 23 23 21 14 21 14 23 23 21 CP (and a control identifier.  Users will use this constructor to wrapper instances of these Presen-) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (774) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 5 5
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
18 32 23 23 23 14 32 21 21 35 21 16 16 21 16 23 21 18 14 23 21 23 23 23 35 23 21 21 18 21 21 23 14 14 14 21 14 14 23 35 14 21 21 14 21 21 16 21 21 23 21 23 14 21 18 32 23 23 23 14 32 22 14 23 16 14 23 23 21 22 16 21 23 21 23 21 39 22 23 23 14 14 21 14 CP (tation Manager control windows they create implicitly as components of frame windows) K
323 2660 m
12 18 21 21 16 23 23 18 21 16 10 21 14 21 14 23 35 21 14 10 23 23 14 21 14 23 10 23 23 10 23 21 23 14 16 21 23 CP (defined by dialog template resources.) K
323 2583 m
14 21 23 14 14 10 18 23 23 23 14 10 14 21 23 14 10 21 14 21 14 23 35 21 14 10 23 23 14 21 14 23 10 21 10 21 14 21 21 16 21 10 23 14 10 16 23 14 14 23 21 10 23 23 23 10 23 23 14 21 14 23 10 21 23 14 10 21 18 23 10 14 23 23 14 35 10 23 23 23 10 12 21 14 23 35 21 23 21 10 16 23 25 CP (For example, you might use the dialog box editor to create a dialog template that looks like:) K
[37 0 0 33 0 0] /Courier MF
398 2501 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (DLGTEMPLATE IC_DEFAULT_FRAME_ID) K
398 2468 m
22 22 22 22 22 22 22 CP (  BEGIN) K
398 2435 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    DIALOG "MyDialog", 1, 10, 10, 200, 200) K
398 2401 m
22 22 22 22 22 22 22 22 22 22 22 CP (      BEGIN) K
398 2368 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        VALUESET VALUESET_ID, 10, 10, 100, 100, VS_ICON) K
398 2335 m
22 22 22 22 22 22 22 22 22 CP (      END) K
398 2302 m
22 22 22 22 22 CP (  END) K
42 /Times-Roman SF
323 2207 m
14 21 23 14 14 10 23 23 23 14 10 23 21 23 14 10 23 14 23 23 32 10 14 21 18 10 21 23 14 21 23 10 21 23 14 10 23 21 18 18 21 21 21 21 10 23 23 21 10 23 23 14 21 14 23 10 18 14 23 14 10 18 23 21 23 14 10 14 21 23 14 10 21 23 23 21 10 26 26 30 10 21 23 28 CP (The C++ code that loads this dialog and accessed the value set would then look like:) K
[37 0 0 33 0 0] /Courier MF
398 2125 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IFrameWindow  dialog\( IC_DEFAULT_FRAME_ID \);) K
398 2092 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet  valueSet = ValueSet\( &dialog, VALUESET_ID \);) K
42 /Times-Roman SF
323 1998 m
23 21 14 23 32 20 12 14 23 14 21 23 16 14 18 23 23 21 20 21 23 14 20 16 23 16 20 18 21 21 21 35 21 18 21 21 23 14 21 21 16 21 21 16 23 14 21 23 16 14 18 23 23 21 21 23 16 21 23 23 21 14 18 21 18 14 23 14 21 16 23 21 18 14 23 21 35 21 16 14 23 23 21 16 21 21 23 28 CP (The requirements of this standard constructor are the same as for the constructor, which) K
323 1948 m
11 23 23 14 14 21 23 23 16 12 16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 12 21 23 14 12 21 18 23 12 23 21 21 12 21 39 11 12 12 21 14 23 23 21 23 12 32 23 23 23 14 32 12 21 12 18 14 23 21 21 21 21 CP (accepts a window handle.  We can use the Presentation Manager function ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (WinWindowFromID) K
42 /Times-Roman SF
23 14 11 CP ( to) K
323 1898 m
23 23 14 16 23 14 21 23 16 14 18 23 23 21 14 18 14 23 14 15 14 23 21 35 21 14 23 35 14 15 23 14 15 23 18 21 21 15 18 14 15 14 16 15 15 12 29 23 23 23 14 32 15 14 23 21 35 23 23 15 21 15 21 23 14 15 16 23 15 21 14 23 23 21 23 15 32 23 23 23 14 32 15 21 23 14 15 14 21 23 CP (get the window handle of the argument window.  It is easy to implement this constructor by) K
323 1848 m
12 23 23 14 14 21 23 23 16 10 14 21 23 14 10 35 23 16 16 10 23 21 23 14 21 14 23 23 10 21 14 23 23 21 23 10 32 23 23 23 14 32 10 21 23 14 10 23 23 14 18 18 21 23 10 12 23 23 14 14 21 23 23 16 10 21 21 14 14 21 14 14 14 23 14 10 21 35 21 18 10 21 23 14 10 23 23 14 14 14 21 21 CP (calling the same initialize function, passing the window handle obtained from that function.) K
[37 0 0 33 0 0] /Courier MF
398 1766 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet :: ValueSet \( IWindow *parent, unsigned long id \)) K
398 1733 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  : IControl\(\)) K
398 1700 m
22 22 22 CP (  {) K
398 1667 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    this -> initialize\( WinWindowFromID) K
398 1633 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                          \( parent->handle\(\), id \) \);) K
398 1600 m
22 22 22 CP (  }) K
42 /Times-Roman SF
323 1506 m
21 23 21 18 23 16 21 14 23 21 23 21 16 23 14 16 23 23 21 16 21 21 23 21 14 23 21 23 23 23 21 16 21 16 18 21 16 23 14 23 14 21 35 16 16 23 14 21 23 16 14 18 23 23 21 16 18 14 23 14 16 21 23 14 23 23 16 23 16 16 23 23 23 16 12 21 21 18 16 23 21 21 16 23 23 23 17 18 32 CP (As you can see, your provide this constructor mainly as a convenience and to enable usage) K
323 1456 m
12 18 14 23 16 14 23 23 21 10 23 16 21 16 23 14 28 10 21 21 21 16 16 21 14 23 16 10 16 21 18 32 10 23 14 16 14 14 14 23 23 10 21 23 14 10 23 14 14 32 10 14 23 21 14 18 14 18 23 23 21 CP (consistent with the built-in User Interface Library controls.) K
54 /Times-Bold SF
323 1335 m
21 24 18 30 30 15 24 18 18 39 10 39 27 30 30 15 53 12 45 27 23 33 13 23 27 18 24 30 24 18 21 30 27 39 CP (Constructor From Window Attributes) K
42 /Times-Roman SF
323 1249 m
17 14 14 21 17 16 23 14 21 23 16 14 18 23 23 21 17 23 16 21 23 23 21 14 18 17 23 16 14 23 14 17 21 23 28 CP (The third standard constructor all ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
42 /Times-Roman SF
16 23 16 14 21 18 16 14 14 23 16 16 21 23 14 16 18 21 23 21 14 16 14 21 23 14 16 21 23 23 16 18 14 16 21 23 14 23 23 16 23 16 18 21 18 18 21 14 21 17 CP ( classes provide is one that takes the full set of) K
323 1200 m
12 18 21 14 23 23 14 16 14 14 21 10 14 23 16 14 23 23 21 10 23 16 21 23 23 21 14 18 CP (standard control attributes.) K
361 1133 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 1133 m
16 21 14 16 14 14 23 21 23 14 10 14 23 16 14 23 23 30 CP (Control identifier) K
361 1077 m
17 CP (\007) K
436 1077 m
32 23 23 23 14 32 10 14 23 21 16 21 25 CP (Parent window) K
361 1022 m
17 CP (\007) K
436 1022 m
32 23 23 23 14 32 10 16 21 23 32 32 CP (Owner window) K
361 966 m
17 CP (\007) K
436 966 m
23 23 14 14 14 18 23 23 10 23 23 21 10 21 21 14 18 10 14 21 14 14 14 23 16 CP (Initial size and position) K
361 910 m
17 CP (\007) K
436 910 m
21 14 23 14 25 CP (Style) K
323 844 m
23 21 23 14 14 16 21 23 14 21 16 14 12 29 23 23 23 14 32 14 16 21 23 21 23 21 39 14 23 23 14 14 21 14 23 21 18 21 16 25 14 21 15 18 21 14 21 21 16 21 15 23 14 14 21 23 14 21 21 15 14 21 23 14 15 21 23 23 15 21 23 14 15 18 14 15 16 23 14 21 23 16 14 18 23 23 21 15 18 14 23 28 CP (This constructor is the one that actually creates a Presentation Manager window, rather than) K
323 794 m
23 23 14 14 21 35 16 23 16 23 14 21 21 23 14 21 21 23 14 23 23 16 23 22 18 14 23 21 35 23 23 15 21 22 21 23 28 21 22 12 21 23 23 22 23 23 14 14 18 14 23 21 22 23 21 22 23 14 22 14 21 21 14 23 23 22 26 26 30 22 21 22 23 21 21 14 14 21 22 23 14 23 35 14 18 CP (simply attach a C++ object to an existing one.  The arguments provide the information) K
323 744 m
12 29 23 23 23 14 32 10 14 21 23 14 10 16 23 10 23 23 14 14 21 21 16 21 10 16 23 16 10 23 21 16 14 23 23 21 16 CP (required for creation of that window.) K
323 667 m
14 23 16 14 23 23 21 17 30 15 17 12 18 21 23 14 21 23 17 14 14 23 21 16 21 23 18 21 23 21 23 18 18 14 23 21 35 23 23 15 21 18 23 32 14 18 14 18 21 14 18 21 23 14 18 12 21 21 23 21 14 23 21 23 23 23 21 18 16 23 25 CP (For convenience, the last two arguments have default values.  A control) K
42 /Times-Roman SF
16 CP CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Font300 SF
23 23 21 17 21 21 14 18 17 14 14 23 21 16 21 23 17 18 CP (s default size and) K
323 618 m
21 23 14 17 18 14 17 21 14 23 14 18 17 14 14 23 21 16 21 23 17 21 23 28 16 17 12 16 23 12 23 16 17 21 21 14 18 17 23 14 14 32 17 16 23 12 23 16 17 14 21 17 23 21 23 23 14 14 14 18 23 23 17 14 21 14 23 23 21 14 21 21 16 17 14 14 23 21 16 21 23 18 21 18 18 14 18 23 23 14 14 14 18 23 23 CP (position is a default rectangle: positioned at \(0,0\) with size \(0,0\).  The default style is the) K
323 568 m
21 23 14 17 23 14 17 16 21 14 23 21 23 21 17 18 14 23 14 18 23 14 18 16 21 14 21 14 18 21 14 23 23 14 18 18 14 23 14 18 16 21 23 23 21 18 21 39 17 18 12 18 18 21 14 21 18 14 23 16 14 23 23 21 18 35 23 14 18 23 21 18 21 23 14 18 16 23 16 18 21 14 23 14 18 18 14 14 23 21 16 21 23 CP (default style for the custom control class.  We cover this topic later in this chapter in the) K
323 518 m
10 23 23 10 23 23 14 14 21 21 18 CP (section on ) K
42 /Font500 SF
21 CP (\223) K
42 /Font300 SF
12 18 21 14 23 14 25 10 14 23 16 14 23 23 30 10 35 23 14 18 23 30 CP (Custom Control Styles.) K
42 /Font500 SF
21 CP (\224) K
42 /Font300 SF
323 441 m
10 16 23 23 10 16 23 16 10 16 23 14 21 23 16 14 18 23 23 21 10 18 14 23 14 10 16 23 10 23 23 14 14 21 14 23 21 35 21 14 23 35 14 10 21 23 14 10 18 14 10 32 23 14 21 30 CP (Below is the implementation of this constructor for our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 21 14 23 35 21 23 21 10 CP ( example.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (775) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 6 6
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2691 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet :: ValueSet \( unsigned long     id,) K
398 2658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       IWindow          *parent,) K
398 2624 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       IWindow          *owner,) K
398 2591 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       const IRectangle &initial,) K
398 2558 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       const Style      &style \)) K
398 2525 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  : IControl\(\)) K
398 2492 m
22 22 22 CP (  {) K
398 2458 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> initialize \( ISize\(0,0\),) K
398 2425 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       id,) K
398 2392 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       parent,) K
398 2359 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       owner,) K
398 2326 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       initial,) K
398 2292 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       style \);) K
398 2259 m
22 22 22 CP (  }) K
398 2193 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (void ValueSet :: initialize \( const ISize      &size,) K
398 2160 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                              unsigned long     id,) K
398 2126 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                              IWindow          *parent,) K
398 2093 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                              IWindow          *owner,) K
398 2060 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                              const IRectangle &initial,) K
398 2027 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                              const Style      &style \)) K
398 1993 m
22 22 22 CP (  {) K
398 1960 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 1927 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ctlData = ValueSet::controlData\( size \);) K
398 1894 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IWindowHandle) K
398 1861 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    hwnd = this -> create\( id,) K
398 1827 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           0,) K
398 1794 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           style.asUnsignedLong\(\),) K
398 1761 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           WC_VALUESET,) K
398 1728 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           parent->handle\(\),) K
398 1695 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           owner ? owner->handle\(\)) K
398 1661 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                 : IWindowHandle\(0\),) K
398 1628 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           initial,) K
398 1595 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           \(char*\)ctlData,) K
398 1562 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           0 \);) K
398 1529 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> startHandlingEventsFor\( hwnd \);) K
398 1495 m
22 22 22 CP (  }) K
398 1429 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IString ValueSet :: controlData \( const ISize &size \)) K
398 1396 m
22 22 22 CP (  {) K
398 1363 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 1329 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    result\( 0, sizeof\( VSCDATA \) \);) K
398 1296 m
22 22 22 22 22 22 22 22 22 CP (  VSCDATA) K
398 1263 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (   *p = \(VSCDATA*\)\(char*\)result;) K
398 1230 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  p->cbSize = sizeof\( VSCDATA \);) K
398 1196 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  p->usRowCount = size.height\(\);) K
398 1163 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  p->usColumnCount = size.width\(\);) K
398 1130 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return result;) K
398 1097 m
22 22 22 CP (  }) K
42 /Times-Roman SF
323 1002 m
18 21 23 18 18 14 10 21 35 21 18 10 21 23 14 10 23 14 14 32 10 14 21 21 23 10 23 14 10 21 23 21 23 10 14 14 14 32 10 23 23 28 8 10 12 21 14 23 23 10 23 14 23 23 23 18 10 23 23 23 10 21 23 23 21 10 18 14 23 14 10 23 14 10 18 14 14 21 14 21 23 10 32 21 16 11 21 11 21 16 21 11 21 16 21 23 28 CP (There are a few details in this code you should note.  You will have to deal with the same issues) K
323 953 m
12 18 21 18 18 21 14 21 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 23 32 23 10 16 23 23 23 10 23 23 14 14 23 21 35 21 14 23 35 14 10 23 21 23 32 CP (when implementing your own custom control classes.) K
323 876 m
21 14 23 23 14 10 23 23 14 14 21 23 16 14 18 23 23 21 10 21 23 14 10 23 21 14 21 16 21 23 21 18 10 21 23 21 23 10 21 32 11 12 20 14 18 23 23 14 23 21 16 23 11 23 21 18 18 23 21 18 14 23 11 18 16 23 14 21 23 16 14 18 23 23 21 11 21 23 14 11 23 14 14 32 11 23 14 23 11 21 32 11 18 32 CP (As we did with the constructors discussed previously, we have separated the construction logic) K
323 826 m
18 21 23 14 18 16 23 18 23 23 14 18 16 21 23 18 23 21 23 21 23 14 16 21 23 23 18 16 21 23 14 23 23 21 18 23 14 18 14 14 18 23 21 21 21 14 23 18 21 23 21 23 18 21 39 17 18 12 14 23 14 21 23 16 14 18 23 23 21 19 21 23 14 19 35 23 16 16 CP (from the constructor.  We have placed it in another overloaded version of the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 CP (initialize) K
42 /Times-Roman SF
323 776 m
22 16 23 22 23 23 14 18 16 21 23 22 18 14 23 28 22 23 12 23 23 14 14 21 23 23 16 23 16 21 23 35 21 35 CP (member function.  This version of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 CP (initialize) K
42 /Times-Roman SF
22 23 21 22 18 14 23 21 21 21 21 22 23 23 14 14 21 23 23 16 22 CP ( function accepts an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (ISize) K
42 /Times-Roman SF
14 21 23 14 22 14 23 21 35 23 23 15 21 22 CP ( argument that) K
323 726 m
18 21 14 21 21 16 21 13 16 23 14 21 23 16 14 18 23 23 21 13 23 16 21 23 23 21 14 18 13 18 14 23 28 12 13 12 14 21 18 13 21 23 14 21 23 14 21 23 14 14 23 14 14 18 23 35 23 14 23 21 14 23 23 21 14 18 32 23 16 14 16 23 14 16 21 23 35 23 23 14 21 23 14 14 18 21 23 14 23 23 16 23 CP (provides the number of rows and columns in the value set.  This standard constructor creates) K
323 677 m
23 23 10 21 35 23 21 10 23 14 10 21 23 21 23 10 14 14 14 32 10 23 23 23 10 12 18 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 16 10 10 12 18 23 35 23 14 23 21 10 23 16 21 21 10 23 23 21 10 18 32 23 16 11 23 16 21 21 11 23 14 14 32 11 18 14 21 18 11 21 23 14 21 23 CP (value sets with zero rows and zero columns.  In your custom controls, you will have to come up) K
323 627 m
14 23 16 14 23 23 21 14 16 23 23 23 14 16 23 16 14 18 21 23 14 21 23 14 14 14 23 21 16 21 23 14 16 21 14 14 35 14 18 14 23 14 14 32 CP (with similar default values for your control) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
21 23 14 13 14 21 14 13 23 14 13 21 18 23 21 18 13 18 21 23 21 35 13 14 14 13 18 21 35 14 14 21 35 23 25 13 13 12 18 21 14 23 23 14 16 14 14 21 13 18 CP (s attributes.  Sometimes it makes sense to let the) K
323 577 m
16 23 23 23 14 16 23 14 18 16 21 23 35 21 35 14 21 14 21 23 14 21 14 14 21 14 18 14 18 21 14 35 21 23 14 14 23 23 14 23 14 21 14 23 14 21 35 14 23 23 14 18 14 14 23 21 16 21 23 14 21 18 21 23 14 14 14 23 16 14 23 23 21 14 18 18 21 14 21 14 16 23 23 23 14 16 23 15 16 21 18 23 CP (user of your class control these defaults by maintaining them as static data members of your) K
323 527 m
14 23 23 10 18 14 10 18 14 23 14 10 12 14 21 23 21 32 23 32 10 10 12 14 14 23 21 16 21 23 10 21 23 14 10 14 21 18 11 23 14 11 23 23 14 14 21 23 23 16 11 16 21 23 35 21 35 11 21 14 14 21 14 18 11 21 11 21 23 14 23 23 16 23 11 23 14 23 23 32 11 23 18 14 21 11 23 23 28 9 11 12 18 18 21 14 21 CP (class.  You also would provide a static member function to set the default.  However, this is not) K
323 477 m
21 23 21 23 10 14 14 14 32 10 18 18 21 14 21 11 18 14 23 14 11 16 23 11 16 21 18 23 11 21 23 14 11 23 14 21 23 14 14 11 14 23 23 11 18 14 11 14 16 11 11 12 18 14 21 18 11 21 23 14 21 23 11 16 23 11 21 14 14 18 14 16 21 14 21 21 16 21 23 21 11 18 14 23 14 11 16 23 16 11 14 23 16 21 18 23 11 23 14 14 21 21 16 CP (really useful for this characteristic of value sets.  It is not likely the user of this class will have) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (776) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 7 7
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
16 23 14 21 23 16 14 18 23 23 21 11 14 21 14 21 21 23 18 11 21 11 21 23 14 23 23 16 23 11 21 32 11 12 23 21 21 14 18 23 16 11 11 12 18 14 21 18 11 21 23 14 21 23 11 16 14 21 23 14 11 14 14 21 11 16 23 16 11 14 23 21 32 11 23 21 23 14 11 21 21 14 18 11 23 16 21 23 23 21 14 18 11 21 35 23 18 CP (some standard size they want for all their value sets.  Instead, we provide a special constructor) K
323 2660 m
12 29 23 14 21 23 10 21 23 14 16 21 18 21 23 10 21 32 CP (we describe below.) K
323 2583 m
12 21 35 14 14 15 23 23 14 14 21 21 16 21 15 14 21 15 21 14 21 23 15 14 23 16 14 23 23 21 15 23 14 21 14 16 21 21 16 18 18 21 23 16 23 23 23 16 21 16 14 23 23 21 16 16 18 32 23 23 23 14 32 16 16 21 23 21 23 21 39 16 23 23 14 14 21 14 23 21 18 21 16 25 16 21 35 23 25 CP (Some Presentation Manager windows require you pass certain control data at creation time.) K
323 2533 m
15 23 14 14 40 CP (With ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (WC_VALUESET) K
42 /Times-Roman SF
15 21 15 23 21 21 23 15 21 32 15 12 CP (, we need a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (VSCDATA) K
42 /Times-Roman SF
21 23 28 13 14 12 18 23 35 23 14 23 21 14 23 23 21 14 18 32 23 16 14 16 23 14 16 21 23 35 23 23 15 21 23 14 15 23 14 14 32 15 21 16 23 14 21 23 16 14 18 15 CP ( structure with the number of rows and columns.  The) K
323 2483 m
15 23 23 14 14 21 23 23 16 15 16 21 23 35 21 35 15 21 14 14 21 14 18 CP (static member function ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (controlData) K
42 /Times-Roman SF
15 23 21 15 18 21 15 14 14 15 18 23 16 23 14 21 16 15 23 23 21 15 21 16 23 14 21 23 16 14 18 15 18 14 23 14 15 18 21 14 21 21 16 21 15 CP ( creates this structure and returns it as an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IString) K
42 /Times-Roman SF
21 39 14 15 12 CP (.  We) K
323 2433 m
10 23 14 10 14 14 21 21 10 21 23 14 10 23 23 10 21 16 23 14 21 23 16 14 18 10 18 14 23 14 10 16 23 10 18 18 21 16 23 23 21 10 21 23 14 10 18 18 21 23 CP (pass the address of this structure on the call to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IWindow::create) K
42 /Times-Roman SF
12 CP (.) K
323 2357 m
21 21 23 14 21 23 23 14 14 14 21 21 22 23 23 22 32 23 23 23 14 32 22 16 21 23 21 23 21 39 22 23 23 14 14 21 14 23 21 18 21 16 25 22 23 23 21 22 26 26 30 22 21 23 14 22 14 21 21 23 23 23 21 22 21 39 CP (We connect the C++ and Presentation Manager window by calling the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
23 23 14 14 21 23 23 16 21 CP ( function) K
[37 0 0 42 0 0] /Courier MF
323 2307 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (startHandlingEventsFor) K
42 /Times-Roman SF
12 29 23 23 23 14 32 10 23 21 14 21 21 16 21 10 23 14 32 21 23 10 21 23 14 10 16 23 10 21 14 23 23 21 23 10 21 23 14 10 23 23 14 18 18 21 23 10 12 CP (, passing the handle of the newly created window.) K
54 /Times-Bold SF
323 2186 m
21 24 27 18 24 30 24 18 21 30 27 39 13 23 24 30 18 42 CP (Other Constructors) K
42 /Times-Roman SF
323 2100 m
16 21 23 21 14 21 23 32 15 21 23 14 23 23 16 23 15 23 14 23 23 23 18 16 18 18 21 14 21 16 14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 16 23 23 23 16 12 18 16 23 14 21 23 16 14 18 23 23 21 16 23 16 21 23 23 21 14 18 16 21 23 14 16 23 14 16 23 23 14 14 14 23 23 21 16 23 16 CP (In addition to the standard constructors, your custom control class should provide whatever) K
323 2051 m
18 14 21 21 14 23 23 12 21 23 14 12 21 14 21 21 16 21 12 23 14 14 18 21 21 12 23 14 12 23 14 14 14 14 23 21 12 21 23 14 13 18 18 21 14 21 13 16 23 23 23 13 16 23 13 18 16 21 18 23 13 21 23 14 23 13 23 14 13 12 23 21 21 23 13 23 23 23 13 18 16 23 14 21 23 16 14 18 23 23 21 13 16 21 23 14 23 CP (other constructors you need, to give users of your class the ability to easily create the objects) K
323 2001 m
12 23 21 14 16 23 10 14 18 23 35 10 23 23 14 18 23 10 21 23 10 14 14 14 32 10 23 21 23 14 10 18 18 21 14 21 10 16 23 23 23 10 16 23 CP (of your class they will be using most often.) K
323 1924 m
14 23 16 14 23 23 21 11 35 23 14 18 23 21 11 16 23 23 23 11 16 23 11 21 16 23 14 21 23 11 21 23 14 12 23 23 12 23 23 21 23 21 23 12 14 14 14 32 12 18 16 23 14 21 23 16 14 18 23 23 21 12 21 18 23 23 14 12 16 23 12 21 16 23 14 21 23 12 23 23 21 12 16 21 23 35 23 23 12 21 23 28 CP (The number and nature of those constructors will depend on the nature of your custom control) K
323 1874 m
21 14 21 23 16 21 23 14 16 23 14 16 18 18 21 23 16 18 18 21 14 21 16 16 23 23 23 16 16 23 16 18 16 21 18 23 16 14 21 14 16 14 21 23 14 16 18 16 23 14 21 23 16 14 18 23 23 21 17 21 23 14 23 23 16 23 17 14 14 14 32 17 23 23 23 17 12 20 14 14 21 16 21 23 21 32 17 17 12 18 18 21 14 21 CP (class.  Generally, you will provide constructors that let users of your class pass in the data) K
323 1824 m
12 18 21 16 14 23 23 21 16 11 16 23 12 12 18 14 23 21 21 21 21 12 18 18 21 14 21 12 32 23 23 23 14 32 12 16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 12 21 23 14 12 23 23 14 14 21 35 16 23 16 23 14 12 21 23 14 12 23 14 12 23 23 14 23 23 23 23 18 21 16 16 23 21 CP (corresponding to the information the Presentation Manager window class accepts, or requires,) K
323 1775 m
16 21 23 14 16 23 23 16 14 23 21 35 23 23 15 21 16 21 14 21 23 16 14 23 16 14 23 23 21 16 21 23 14 16 23 14 CP (in the control data argument on the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (WinCreateWindow) K
42 /Times-Roman SF
16 14 15 16 23 15 12 21 14 21 23 15 14 23 16 14 23 23 21 15 23 23 15 18 14 15 21 16 21 23 14 15 16 16 16 16 12 14 14 21 21 16 CP ( call.  If there is no control data, or if) K
323 1725 m
14 21 23 23 14 14 14 23 23 21 10 23 23 21 10 23 21 21 23 10 14 23 23 10 14 14 14 32 10 23 23 23 10 23 21 23 14 11 12 21 23 14 23 23 16 23 11 18 23 21 32 14 21 11 23 21 21 11 23 23 23 11 14 14 23 21 16 21 23 11 21 14 23 21 23 23 18 21 21 16 11 21 35 23 18 11 18 14 11 21 16 21 23 14 CP (there is some reasonable default you can always provide, then you will not need any additional) K
323 1675 m
12 18 16 23 14 21 23 16 14 18 23 23 21 CP (constructors.) K
323 1598 m
19 16 23 19 21 18 21 21 19 21 23 14 19 23 16 CP (In the case of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
19 21 23 14 19 21 21 18 19 21 32 19 12 CP (, we see the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (WC_VALUESET) K
42 /Times-Roman SF
21 23 14 19 16 23 16 19 18 23 14 21 14 16 19 18 21 23 19 21 16 23 14 21 23 16 14 18 19 21 14 21 23 19 14 23 16 14 23 23 21 19 CP ( control data structure has fields for the) K
323 1548 m
12 14 23 14 21 23 16 14 18 23 23 21 21 23 16 21 23 23 21 14 18 21 21 23 14 21 23 16 21 22 12 14 21 18 22 21 23 14 21 23 22 21 23 14 22 23 14 22 12 18 23 35 23 14 23 21 22 16 23 22 16 21 23 35 23 23 22 23 23 21 22 12 18 32 23 16 22 16 23 22 16 21 23 35 23 23 CP (number of rows, and number of columns, in the value set.  In the standard constructor,) K
323 1498 m
14 21 18 11 21 23 14 21 23 11 21 11 12 21 18 16 23 23 21 11 16 32 11 11 12 18 16 21 23 35 23 23 11 21 18 21 23 14 11 16 23 16 11 18 21 23 14 21 23 11 14 14 23 21 16 21 23 11 21 23 14 11 18 21 11 23 11 23 21 23 14 23 23 16 23 11 21 32 11 12 21 23 23 23 21 12 23 21 23 14 16 21 18 21 23 CP (described above, we provided 0 as the default values for these numbers.  Of course, a value set) K
323 1449 m
21 20 21 23 14 23 23 16 23 20 23 14 20 23 23 14 14 21 23 14 14 23 23 21 23 21 21 21 23 21 23 21 21 32 21 23 18 21 12 14 23 16 21 18 23 21 23 16 21 23 21 14 23 23 21 18 14 21 18 23 35 23 14 23 21 21 23 23 21 23 23 21 21 18 32 23 16 21 23 23 21 23 14 14 32 CP (with no rows and no columns is not very useful, so we have an obligation to provide a) K
323 1399 m
18 23 35 23 14 23 21 13 23 23 21 13 18 32 23 16 13 16 23 13 16 21 23 35 23 23 14 14 21 23 14 21 21 14 21 23 14 14 21 23 14 23 23 16 23 14 18 18 21 14 21 14 16 23 23 14 16 23 14 18 16 21 18 23 14 21 23 14 14 18 14 21 14 14 23 21 14 23 32 14 12 14 23 14 21 23 16 14 18 23 23 21 CP (constructor, which lets the users of our class provide the actual number of rows and columns) K
323 1349 m
12 23 21 21 23 10 23 21 23 14 CP (they need.) K
323 1272 m
16 23 21 16 21 18 23 16 21 39 CP (We use an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (ISize) K
42 /Times-Roman SF
21 23 14 15 18 21 23 14 23 23 16 23 15 14 14 15 21 21 23 14 18 15 14 14 21 32 15 18 23 16 23 32 15 18 14 23 28 14 15 12 21 21 14 18 15 14 21 18 15 21 23 14 21 23 15 21 23 14 16 18 18 21 23 16 23 14 16 14 23 21 35 23 23 15 21 16 CP ( argument to pass the value set size.  This works well since it provides the) K
323 1222 m
12 14 23 23 14 16 CP (right ) K
42 /Times-Roman SF
21 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\223) K
42 /Times-Roman SF
21 21 14 18 CP (size) K
42 /Font500 SF
21 CP (\224) K
42 /Times-Roman SF
11 18 14 23 14 11 14 16 21 18 23 14 12 21 39 11 12 12 20 14 14 18 21 21 12 23 21 18 18 21 23 12 21 23 12 23 14 12 23 23 14 14 21 35 16 23 16 23 14 12 21 23 14 12 18 14 14 35 16 21 23 12 23 23 21 12 23 23 14 14 21 14 23 23 23 23 21 12 CP ( connotation and permits the information to be passed easily.  We insert this ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (ISize) K
42 /Times-Roman SF
323 1173 m
21 18 23 23 14 17 23 23 17 23 14 21 16 17 14 14 14 14 18 17 23 21 21 17 16 21 18 23 17 21 23 14 17 23 18 17 12 18 21 23 14 21 23 17 14 14 23 21 16 21 23 17 21 23 21 23 17 14 21 23 14 17 18 14 23 21 35 23 23 15 21 18 21 23 14 18 21 16 23 16 21 23 18 14 23 21 35 23 23 15 21 CP (argument before the arguments that have default values, so the user can still rely on those) K
323 1123 m
17 23 23 14 32 23 14 14 23 16 17 21 23 14 17 18 23 14 21 14 23 17 18 14 23 28 16 17 12 21 21 14 18 17 14 14 21 14 14 23 23 21 17 23 21 17 21 23 14 23 23 16 23 17 23 14 17 14 23 21 32 18 23 21 23 14 18 16 14 18 23 21 23 21 18 18 14 14 23 21 16 21 23 CP (defaults even if they want to provide an explicit size.  This yields the following ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
323 1073 m
18 14 23 14 17 14 23 21 35 21 14 23 35 14 17 23 14 17 12 21 23 23 23 21 17 23 21 18 18 23 21 18 14 23 17 21 32 17 23 23 14 14 21 23 23 16 17 16 21 23 35 21 35 17 21 21 14 14 21 14 14 14 23 14 17 21 23 14 17 21 18 23 17 21 39 17 18 12 14 23 14 21 23 16 14 18 23 23 21 CP (constructor.  We use the initialize member function we discussed above, to implement this) K
323 1023 m
14 16 23 14 21 23 16 14 18 23 23 21 CP (constructor:) K
[37 0 0 33 0 0] /Courier MF
398 941 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet :: ValueSet \( unsigned long     id,) K
398 908 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       IWindow          *parent,) K
398 875 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       IWindow          *owner,) K
398 842 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       const ISize      &rowsAndColumns,) K
398 808 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       const IRectangle &initial,) K
398 775 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       const Style      &style \)) K
398 742 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  : IControl\(\)) K
398 709 m
22 22 22 CP (  {) K
398 676 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> initialize\( rowsAndColumns,) K
398 642 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                      id,) K
398 609 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                      parent,) K
398 576 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                      owner,) K
398 543 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                      initial,) K
398 509 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                      style \);) K
398 476 m
22 22 22 CP (  }) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (777) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 8 8
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
62 /Times-Bold SF
323 2702 m
24 28 28 17 34 34 31 48 15 31 34 17 34 28 31 21 21 45 CP (Attaching Handlers) K
42 /Times-Roman SF
323 2614 m
10 21 23 14 10 23 21 23 23 23 23 14 10 18 21 23 10 16 23 14 21 23 16 14 18 23 23 21 11 16 23 23 23 11 21 21 23 32 CP (Once your constructor has invoked the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (startHandlingEventsFor) K
42 /Times-Roman SF
10 16 23 10 23 23 14 14 21 23 23 16 10 16 21 23 35 21 35 10 CP ( member function of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
12 CP (,) K
323 2564 m
23 23 21 18 23 23 21 18 14 23 23 18 18 21 23 23 18 21 14 23 35 21 23 21 18 14 21 18 18 21 23 14 21 23 18 16 23 32 18 18 12 14 23 16 14 23 23 21 18 35 23 14 18 23 21 18 16 23 23 23 18 23 14 18 18 16 21 14 23 23 21 23 19 23 21 21 14 14 21 19 23 21 21 19 23 23 23 CP (you can attach handlers to your custom control.  Our value set example does not add any) K
323 2515 m
16 23 23 23 21 14 23 21 35 21 14 23 35 14 22 23 14 22 18 16 21 14 23 23 21 23 22 23 21 21 14 14 21 22 23 14 22 21 23 21 23 22 23 21 35 22 23 23 23 22 18 21 35 14 14 21 35 23 25 22 22 12 20 14 14 21 21 14 14 21 35 23 14 23 21 22 18 16 21 14 23 23 21 23 CP (handlers automatically.  Sometimes you may have to attach handlers to implement your) K
323 2465 m
14 23 21 18 21 16 25 12 35 23 14 18 23 21 12 23 23 12 23 14 14 32 12 12 26 26 30 13 23 23 14 18 23 13 23 14 14 21 14 16 14 18 13 23 21 14 23 21 35 21 14 23 35 14 13 14 23 16 14 23 23 21 13 35 23 14 18 23 21 13 23 23 32 11 13 12 14 23 16 14 23 23 21 13 35 23 14 18 23 21 CP (custom control.  Any custom control implemented strictly using C++, with no custom Presen-) K
323 2415 m
23 16 21 23 23 21 14 18 21 21 23 14 21 21 21 14 35 23 14 18 23 21 21 23 14 21 16 21 14 23 23 21 23 21 21 21 23 21 21 14 14 21 21 23 14 22 21 23 21 23 22 23 14 23 23 32 22 12 18 18 21 14 21 22 32 23 23 23 14 32 22 16 21 23 21 23 21 39 22 23 23 14 14 21 14 CP (tation Manager window class, would have to attach a handler to customize the standard) K
323 2365 m
14 21 14 23 35 21 23 21 10 16 23 25 10 10 12 23 23 23 23 10 14 14 10 14 14 14 23 23 10 23 23 23 10 32 23 23 23 14 32 CP (window you built it upon.  For example:) K
361 2288 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 2288 m
23 23 32 CP (An ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IGraphicPushButton) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 18 21 23 23 21 23 14 23 23 14 23 18 16 21 14 23 23 21 23 23 18 21 23 21 21 14 14 21 23 CP ( attaches handlers to the base ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (IPushButton) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 22 21 23 21 23 21 35 22 23 14 23 CP ( to manage the) K
436 2239 m
12 18 21 14 23 23 21 16 23 10 23 23 14 14 23 23 10 21 23 14 10 16 23 10 23 23 14 32 21 16 23 CP (drawing of the button graphics.) K
361 2162 m
17 CP (\007) K
436 2162 m
25 23 32 CP (An ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (ICanvas) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
24 23 23 14 23 14 16 21 23 23 23 24 18 14 14 24 23 14 25 16 21 14 23 23 21 23 25 21 25 18 21 23 21 21 14 14 21 25 CP ( attaches a handler to its underlying ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (WC_STATIC) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
16 21 23 21 23 21 39 24 23 23 14 14 21 14 23 21 18 21 16 25 24 CP ( Presentation Manager) K
436 2112 m
12 18 32 23 23 23 14 32 10 23 14 14 23 21 10 16 23 10 14 23 23 23 21 14 10 21 23 14 10 21 23 21 23 21 35 10 23 14 10 32 23 23 23 14 32 CP (window to manage the layout of child windows.) K
323 2035 m
23 23 14 23 23 14 18 21 23 14 23 14 14 23 23 23 14 21 23 14 23 23 14 14 14 14 32 14 23 23 14 18 18 23 21 18 14 23 14 14 21 23 28 14 15 12 14 21 14 23 21 23 21 15 18 14 23 14 15 23 14 15 16 21 14 21 14 15 18 16 21 14 23 23 21 23 15 35 23 14 18 23 21 15 16 21 23 23 21 15 21 39 CP (We cover custom handlers later in this chapter.  That discussion will guide you in designing) K
323 1985 m
23 23 28 14 17 12 14 23 16 14 23 23 21 17 35 23 14 18 23 21 17 16 23 23 23 17 14 23 21 35 21 14 23 35 14 17 23 14 17 23 21 21 23 17 23 21 35 17 23 23 23 17 14 21 23 14 17 18 16 21 14 23 23 21 23 17 21 23 14 17 23 23 14 14 23 21 35 21 14 23 35 14 17 23 23 21 CP (and implementing the handlers that you may need to implement your custom control.  You) K
323 1936 m
23 15 40 14 15 22 22 40 21 24 15 40 16 22 15 17 22 40 23 15 22 15 22 15 24 22 36 36 15 40 18 17 24 15 22 24 17 15 19 24 24 22 40 16 24 24 24 40 23 15 40 16 22 15 24 24 22 24 41 21 24 15 41 23 22 22 15 15 22 41 23 15 24 24 33 CP (would attach the handler in your constructors immediately after the call to) K
[37 0 0 42 0 0] /Courier MF
323 1886 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (startHandlingEventsFor) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
62 /Times-Bold SF
323 1759 m
24 28 17 31 21 34 15 17 31 27 21 34 31 45 15 52 31 21 24 34 45 CP (Custom Control Styles) K
62 /Font300 SF
42 /Font300 SF
323 1671 m
21 16 21 19 23 23 23 19 23 21 23 42 18 19 12 14 23 14 23 21 23 21 23 19 23 23 21 19 21 21 23 21 16 21 21 23 23 21 19 16 23 20 18 21 14 23 14 18 20 16 23 20 23 14 21 14 16 21 23 20 21 20 16 23 16 20 21 23 14 23 23 16 23 20 18 14 23 16 14 23 23 21 20 14 18 23 39 CP (Most controls provide for a variety of styles of appearance and behavior.  When you are) K
323 1621 m
23 16 14 21 21 23 18 15 23 14 15 18 18 21 14 21 15 16 23 23 23 15 23 23 14 18 23 15 18 16 21 35 35 21 16 23 23 16 23 15 21 14 23 21 23 21 15 23 14 23 23 23 18 15 23 23 23 16 12 18 14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 16 23 23 23 16 23 23 14 23 23 14 18 21 23 CP (designing your custom controls, you should enable programmers using your class to specify) K
323 1571 m
14 14 35 16 21 23 12 23 14 12 18 23 23 14 14 21 23 23 16 12 21 23 14 23 23 16 23 12 23 18 14 21 12 23 14 23 23 23 18 12 23 23 28 10 12 12 21 35 14 14 12 23 23 14 14 21 23 16 14 18 23 23 21 12 14 21 12 14 23 16 14 23 23 21 12 16 23 12 21 14 23 14 18 12 21 14 16 14 21 21 23 18 12 21 23 14 CP (the specific style of control at construction time.  You should also provide functions to permit) K
323 1521 m
12 23 23 14 14 21 21 16 21 10 16 21 14 16 21 10 21 14 23 14 18 10 14 23 16 14 23 23 21 10 21 23 14 10 21 23 23 21 23 21 10 23 14 10 35 21 23 14 CP (them to change the control style after creation.) K
323 1445 m
21 23 14 35 16 21 14 21 23 11 23 14 14 21 23 18 23 11 23 21 21 11 23 23 23 12 12 18 18 21 14 21 12 32 23 23 23 14 32 12 16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 12 21 12 23 23 14 14 21 14 23 18 23 21 21 23 21 12 21 16 21 12 23 23 23 12 23 21 23 42 CP (When you are encapsulating a Presentation Manager window class, you can usually determine) K
323 1395 m
21 14 23 14 18 22 21 23 14 22 21 14 23 22 12 14 23 23 23 14 22 23 14 14 21 23 22 18 21 23 23 21 14 23 21 35 23 21 23 23 23 18 21 23 14 21 23 23 21 23 14 23 23 23 14 23 14 35 21 23 21 23 23 23 23 18 21 14 23 14 18 23 14 23 16 14 23 23 21 23 21 23 14 23 14 14 21 CP (all the control styles by examining the values documented as valid input, via the style) K
323 1345 m
12 21 23 14 12 23 23 12 14 23 21 35 23 23 15 21 CP (argument on the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (WinCreateWindow) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 14 14 32 12 12 21 14 23 35 21 23 21 12 16 23 25 12 12 12 14 14 21 21 12 CP ( call.  For example, with) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 24 CP ( WC_VALUESET) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 14 11 21 16 21 11 21 16 21 23 14 11 21 21 18 12 21 32 12 12 CP (, we see there are ten) K
[37 0 0 42 0 0] /Courier MF
323 1295 m
22 22 22 22 CP (VS_*) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 21 23 23 14 21 23 14 10 21 18 21 23 28 9 10 12 23 21 23 14 16 21 23 10 18 14 23 21 14 18 23 23 21 11 21 14 23 14 18 11 CP ( style constants defined.  These include ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (VS_BITMAP) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 12 CP (, ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (VS_ICON) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 12 CP (, ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (VS_BORDER) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 12 CP (, ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VS_RIGHTTOLEFT) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (,) K
323 1245 m
12 23 14 16 23 16 10 23 18 10 23 23 21 CP (and so forth.) K
323 1169 m
12 23 21 14 18 21 23 12 21 12 21 23 14 16 21 23 12 23 14 23 23 23 18 12 23 23 28 CP (You should define a nested ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (Style) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 14 11 23 23 14 23 23 23 23 18 21 16 16 23 21 11 18 16 21 23 35 21 35 11 21 14 14 21 14 18 12 16 23 12 14 21 18 12 21 12 23 23 21 12 12 18 18 21 14 21 12 23 18 21 35 12 14 14 23 12 CP ( bit mask class, and a set of static members corresponding to) K
323 1119 m
16 23 21 14 18 21 23 16 21 23 14 16 21 14 21 16 21 23 21 23 16 23 23 28 14 16 12 18 18 21 14 21 16 14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 16 23 23 23 16 16 23 16 21 14 23 23 14 16 14 14 21 17 21 14 23 14 18 17 23 21 14 16 23 23 23 23 18 17 23 21 21 21 CP (each supported style attribute of your custom control class.  You generate the nested ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (Style) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
323 1069 m
20 21 23 14 20 23 23 14 18 23 20 23 23 14 14 21 16 21 14 21 21 23 20 18 18 21 14 21 CP (class declaration using the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IBitFlag) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
19 23 14 19 23 21 23 14 16 21 23 19 18 23 16 21 21 35 19 21 23 14 19 23 23 21 20 18 18 21 14 21 20 CP ( class and the macros defined in ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 CP (IBITFLAG.HPP) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 21 25 19 19 12 CP (.  See) K
323 1019 m
23 23 10 16 21 14 23 21 23 30 CP (Chapter 26) K
10 12 CP (, ) K
42 /Times-Roman SF
21 CP CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\223) K
42 /Font300 SF
12 18 21 23 23 25 9 21 14 21 32 CP (Data Types,) K
42 /Font500 SF
21 CP (\224) K
42 /Font300 SF
12 18 23 16 21 21 35 10 21 18 21 23 14 10 16 23 10 21 18 23 10 21 23 14 10 16 23 10 23 23 14 14 23 14 16 21 18 21 23 10 23 21 14 14 21 14 21 23 10 21 10 16 23 16 10 CP ( for a detailed description of the use of these macros.) K
323 942 m
18 16 23 23 18 23 16 CP (In our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
18 23 21 14 18 21 23 18 16 23 23 18 16 23 18 23 23 14 14 21 16 21 14 21 21 23 18 21 23 14 18 21 14 21 16 21 23 21 23 18 21 32 18 12 21 14 23 35 21 23 21 18 CP ( example, we generate the declaration of our nested ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (Style) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 18 23 23 14 18 23 18 18 18 21 14 21 18 CP ( class using the) K
323 893 m
14 23 23 14 14 21 21 23 23 23 14 10 23 16 21 21 35 CP (macro invocation:) K
[37 0 0 33 0 0] /Courier MF
398 844 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (INESTEDBITFLAGCLASSDEF2\( Style, ValueSet, IWindow, IControl\);) K
[37 0 0 33 0 0] /Font300 MF
42 /Font300 SF
323 783 m
21 18 21 23 11 16 23 23 11 16 23 16 11 23 21 23 14 16 21 23 11 21 18 23 23 14 11 23 14 14 32 11 18 21 14 23 14 18 11 16 23 23 11 23 14 35 11 23 14 11 23 18 14 32 11 21 32 12 14 21 23 14 12 21 16 21 14 21 21 23 12 23 18 14 21 12 21 32 12 12 21 14 23 35 21 23 21 12 18 14 23 14 12 23 16 CP (In this example, we also declare that we wish to mix our styles with those defined for our base) K
323 733 m
23 18 21 18 18 21 14 21 CP (classes ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 23 23 21 23 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
22 21 23 14 22 21 18 23 23 23 18 14 21 23 23 21 21 23 23 23 23 23 23 18 23 18 14 23 18 14 23 28 22 23 12 CP (.  This is so you can also use the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IWindow::visible) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 23 21 22 CP ( and) K
[37 0 0 42 0 0] /Courier MF
323 683 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IControl::tabStop) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 23 14 14 32 10 18 21 14 23 14 18 10 CP ( styles with ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 14 21 21 14 23 23 10 CP ( objects.) K
323 606 m
14 21 14 16 23 14 18 21 14 23 23 14 16 14 14 21 14 21 14 23 14 18 15 14 21 23 23 14 23 14 23 23 14 15 16 23 15 14 21 18 15 21 23 14 15 21 23 14 16 21 23 15 21 39 CP (We define the set of individual style attributes of a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 23 14 14 16 23 14 18 16 21 23 35 21 35 14 21 14 21 23 14 21 14 14 21 14 18 14 18 21 14 CP ( as static data members of type) K
[37 0 0 42 0 0] /Courier MF
323 556 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::Style) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (778) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 9 9
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (static const Style) K
398 2691 m
22 22 22 22 22 22 22 22 22 CP (  border,) K
398 2658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  itemBorder,) K
398 2624 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  rightToLeft,) K
398 2591 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  scaleBitmaps,) K
398 2558 m
22 22 22 22 22 22 22 22 22 22 22 CP (  drawItem,) K
398 2525 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  classDefaultStyle;) K
42 /Times-Roman SF
323 2430 m
12 23 14 12 23 23 14 23 23 23 23 18 21 16 16 23 21 12 18 21 14 23 14 18 12 23 23 14 23 14 16 21 23 12 16 21 23 14 23 23 12 14 23 23 12 23 23 12 21 39 CP (We do not bother defining styles corresponding to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (VS_BITMAP) K
42 /Times-Roman SF
11 12 CP (, ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (VS_ICON) K
42 /Times-Roman SF
23 23 18 21 21 16 11 21 23 28 10 11 12 23 23 11 23 18 11 23 23 21 11 12 CP (, and so on.  The reason) K
323 2381 m
14 21 18 13 21 23 14 21 23 13 14 21 23 23 14 23 14 23 23 14 13 21 23 28 12 13 12 14 21 18 13 21 23 14 21 23 13 21 23 14 13 23 23 14 14 21 21 16 21 13 23 21 23 32 13 14 23 21 23 21 14 21 16 16 14 13 23 14 14 21 21 16 13 21 16 21 13 18 21 14 23 14 18 13 21 18 21 23 14 13 14 21 23 14 14 18 14 CP (is that these styles are really irrelevant when creating the value set.  The individual value set) K
323 2331 m
23 14 10 21 14 23 23 14 16 14 14 21 10 18 14 23 14 11 21 14 23 23 21 23 11 23 14 23 35 14 18 11 21 32 11 23 18 11 12 21 14 23 14 18 11 14 21 18 11 21 23 14 21 23 11 21 23 14 11 16 23 11 18 18 21 14 23 16 21 23 21 16 11 12 21 23 23 14 11 23 23 21 11 16 23 11 21 23 11 23 21 21 11 18 35 21 14 14 CP (items can be of any type, regardless of the value set style, so we simply handle this attribute in) K
323 2281 m
10 16 23 23 CP (our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::Item) K
42 /Times-Roman SF
12 16 32 23 14 21 23 10 21 23 14 16 21 18 21 23 10 21 32 10 23 21 14 23 32 16 10 18 18 21 14 21 10 CP ( class \(which we describe below\).) K
323 2204 m
17 23 21 35 21 23 17 21 23 14 21 23 17 21 14 23 14 18 17 21 17 23 18 14 21 18 18 14 18 21 16 21 23 28 CP (There is also a style value named ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (classDefaultStyle) K
42 /Times-Roman SF
21 23 14 17 18 21 23 14 16 21 18 21 23 17 14 21 23 14 17 21 14 23 14 18 17 21 23 14 17 18 14 17 18 14 23 28 16 17 12 CP (.  This is the style that describes the) K
323 2154 m
13 21 13 16 23 13 18 21 14 14 18 14 16 21 14 21 21 16 21 23 21 13 14 14 23 21 16 21 23 CP (default characteristics of a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
14 14 21 14 14 23 23 21 13 23 21 13 21 23 14 23 23 16 23 13 23 23 23 13 18 18 21 14 23 23 13 12 21 18 23 13 14 14 14 32 13 18 16 23 14 21 23 16 14 18 23 23 21 13 21 23 14 13 CP ( the constructors will use, unless you provide an explicit) K
323 2105 m
16 16 12 14 21 21 14 23 23 16 14 21 18 16 21 23 14 21 23 16 21 23 14 16 21 14 21 21 16 21 16 23 23 23 16 23 21 23 32 16 21 14 23 14 18 CP (style when you create the value set object.  ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
21 14 23 14 18 16 21 23 14 16 16 23 16 21 23 23 23 16 14 23 16 18 14 16 21 14 23 14 18 16 14 14 23 21 16 21 23 16 18 CP (s default style is 0; none of the style) K
323 2055 m
12 18 16 21 23 35 21 35 10 21 14 14 21 14 18 10 21 18 21 23 14 10 16 23 10 23 23 14 14 14 23 14 16 21 23 10 21 23 14 10 18 14 10 21 16 21 32 10 10 12 14 21 18 10 18 14 10 18 21 14 23 23 14 16 14 14 21 CP (attributes is set.  Here is the definition of these static members.) K
[37 0 0 33 0 0] /Courier MF
398 1973 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (const ValueSet::Style) K
398 1940 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::border            = VS_BORDER,) K
398 1906 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::itemBorder        = VS_ITEMBORDER,) K
398 1873 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::rightToLeft       = VS_RIGHTTOLEFT,) K
398 1840 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::scaleBitmaps      = VS_SCALEBITMAPS,) K
398 1807 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::drawItem          = VS_OWNERDRAW,) K
398 1773 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSet::classDefaultStyle = WS_VISIBLE;) K
42 /Times-Roman SF
323 1679 m
14 14 21 23 21 32 14 21 23 14 14 35 23 16 16 14 14 23 21 14 18 23 23 21 14 23 23 14 23 23 23 23 18 21 16 16 23 21 14 21 23 14 14 23 14 14 18 21 23 14 21 23 14 21 14 23 14 18 14 16 23 23 14 21 21 14 14 21 14 14 14 23 14 14 21 32 14 12 21 14 23 35 21 23 21 15 18 14 23 14 15 23 16 CP (In this example, we initialize our style values to the corresponding constant from the Devel-) K
323 1629 m
16 21 23 23 CP (oper) K
42 /Font500 SF
16 CP (\222) K
42 /Times-Roman SF
15 16 23 15 23 23 14 14 21 14 23 21 35 21 14 23 35 14 15 21 23 14 15 18 21 14 16 14 14 23 35 14 18 16 18 14 23 28 15 16 12 23 14 25 32 16 16 23 16 16 14 14 23 14 23 23 25 15 18 CP (s Toolkit for OS/2.  This simplifies the implementation of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
23 23 23 15 21 32 15 21 18 23 21 21 21 23 15 12 CP (, because we don) K
42 /Font500 SF
16 CP (\222) K
42 /Times-Roman SF
14 CP (t) K
323 1579 m
13 14 16 21 23 23 23 21 13 23 14 13 21 23 21 23 CP (have to convert ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::Style) K
42 /Times-Roman SF
12 14 23 21 14 21 23 14 23 23 21 12 21 23 14 13 23 14 13 18 21 23 14 21 23 13 CP ( values to the equivalent ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (unsigned) K
42 /Times-Roman SF
12 CP ( ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (long) K
42 /Times-Roman SF
23 23 14 18 18 21 23 12 23 21 23 32 12 21 23 14 21 23 12 CP ( value when passing) K
323 1530 m
21 23 14 17 23 14 17 23 21 18 18 21 23 17 21 14 23 14 18 17 14 23 21 35 23 23 15 21 17 21 23 14 17 18 18 21 23 17 21 32 17 12 21 14 23 35 21 23 21 17 16 23 25 17 17 12 14 21 23 21 23 21 39 18 23 23 14 14 21 14 23 21 18 21 16 25 18 21 23 14 18 23 14 18 35 21 23 14 CP (them to the Presentation Manager.  For example, we pass the argument style passed to the) K
[37 0 0 42 0 0] /Courier MF
323 1480 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
10 23 21 10 18 21 10 23 23 23 23 16 23 14 10 14 23 23 14 21 16 14 18 10 18 16 23 14 21 23 16 14 18 23 23 21 10 CP ( constructors straight through as an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (unsigned) K
42 /Times-Roman SF
10 CP ( ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (long) K
42 /Times-Roman SF
10 23 14 10 CP ( to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IWindow::create) K
42 /Times-Roman SF
12 CP (.) K
323 1403 m
23 14 14 32 11 14 23 21 14 18 14 18 23 23 21 11 21 23 11 23 25 10 11 12 18 21 14 23 14 18 11 14 14 23 21 16 21 23 11 23 23 14 23 16 21 23 21 16 11 23 14 14 14 14 23 14 23 21 14 16 12 18 21 23 14 23 23 16 23 12 23 16 21 16 23 14 28 12 21 21 21 16 16 21 14 23 16 12 16 21 18 32 12 21 23 28 CP (The User Interface Library provides flexibility regarding default styles.  To be consistent with) K
323 1353 m
14 21 23 13 23 14 13 18 18 21 14 21 13 14 23 16 14 23 23 21 13 35 23 14 18 23 21 13 16 23 23 23 13 23 14 13 18 23 23 14 14 21 23 23 16 13 21 14 14 21 14 18 13 21 23 14 23 23 16 23 13 23 14 23 23 23 18 13 23 23 23 14 12 20 16 21 16 23 14 14 14 21 23 14 14 16 23 14 14 18 21 16 14 21 23 14 CP (the rest of the library, you should provide static functions in your custom control class to get) K
323 1303 m
16 21 18 23 15 21 23 14 15 14 21 18 15 23 23 21 CP (and set the user) K
42 /Font500 SF
16 CP (\222) K
42 /Times-Roman SF
23 14 14 21 23 18 23 14 18 23 23 14 14 21 23 23 16 14 21 18 21 23 28 13 14 12 21 23 14 23 14 14 21 21 16 14 23 14 23 23 23 18 14 21 14 23 14 18 14 14 14 23 21 16 21 23 14 21 23 14 15 14 21 23 32 15 16 23 15 21 21 14 23 23 21 15 18 CP (s choice of what the default style should really be.  These functions usually) K
323 1254 m
12 23 23 14 32 23 14 14 23 16 10 21 23 14 10 21 23 14 14 10 23 23 23 14 CP (look like the following.) K
[37 0 0 33 0 0] /Courier MF
398 1205 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (static Style) K
398 1172 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  defaultStyle\(\);) K
398 1138 m
22 22 22 22 22 22 22 22 22 22 22 CP (static void) K
398 1105 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  setDefaultStyle\( const Style &style \);) K
42 /Times-Roman SF
323 1044 m
12 23 23 14 32 23 14 14 23 16 10 21 23 14 10 23 23 10 23 14 10 23 21 21 23 10 23 14 23 35 14 18 10 23 23 23 10 12 14 16 23 23 23 23 18 10 21 14 23 14 18 10 14 14 23 21 16 21 23 10 18 14 23 14 10 14 23 21 35 21 14 23 35 14 10 23 25 CP (To implement this default style support, you simply need to do the following.) K
361 967 m
17 CP CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 967 m
16 21 18 23 10 21 23 14 10 23 14 23 23 10 23 14 10 16 21 23 35 21 35 10 21 14 21 23 10 21 14 14 21 14 18 10 21 14 21 23 14 16 23 10 21 10 21 23 14 16 21 32 CP (Define a private static data member to hold the user) K
42 /Font500 SF
16 CP (\222) K
42 /Font300 SF
12 21 14 23 14 18 10 14 14 23 21 16 21 23 10 16 23 16 10 21 21 14 23 23 21 10 18 CP (s choice for default style.) K
[37 0 0 33 0 0] /Courier MF
398 918 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (    private:) K
398 885 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    static Style) K
398 852 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (       dfltStyle;) K
[37 0 0 33 0 0] /Font300 MF
42 /Font300 SF
361 791 m
17 CP (\007) K
436 791 m
10 21 23 14 10 23 23 10 23 21 23 14 16 21 23 10 21 23 14 21 23 10 21 23 14 10 23 14 10 18 14 23 14 10 21 21 14 14 21 14 14 14 23 16 CP (Initialize this to the value defined by the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (classDefaultStyle) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 14 21 23 35 21 35 10 21 14 21 23 10 CP ( data member.) K
[37 0 0 33 0 0] /Courier MF
398 742 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ValueSet::Style) K
398 709 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      ValueSet::dfltStyle = WS_VISIBLE;) K
[37 0 0 33 0 0] /Font300 MF
42 /Font300 SF
361 647 m
17 CP (\007) K
436 647 m
12 14 21 23 35 21 35 10 21 14 21 23 10 21 14 14 21 14 18 10 18 14 23 14 10 14 21 18 10 23 23 21 10 14 21 23 10 23 14 10 18 23 23 14 14 21 23 23 16 10 21 14 14 21 14 18 10 21 23 14 10 14 23 21 35 21 14 23 35 16 CP (Implement the static functions to get and set this static data member.) K
[37 0 0 33 0 0] /Courier MF
398 599 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ValueSet::Style ValueSet :: defaultStyle \( \)) K
398 566 m
22 22 22 22 22 CP (    {) K
398 532 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      return ValueSet::dfltStyle;) K
398 499 m
22 22 22 22 22 CP (    }) K
398 466 m
22 22 22 22 CP (    ) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (779) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 10 10
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    void ValueSet :: setDefaultStyle \( const Style &style \)) K
398 2691 m
22 22 22 22 22 CP (    {) K
398 2658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      ValueSet::dfltStyle = style;) K
398 2624 m
22 22 22 22 22 CP (    }) K
42 /Times-Roman SF
323 2563 m
21 14 23 14 18 12 23 21 21 21 12 14 18 21 14 12 23 14 12 23 23 14 14 21 23 23 16 12 16 21 23 35 21 35 12 21 12 21 23 14 23 23 16 23 12 23 14 12 23 21 21 23 12 14 14 14 32 12 18 18 21 14 21 12 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 16 23 23 23 12 12 20 14 14 21 21 14 23 23 25 CP (Typically, your custom control class will need to provide a member function to test each style) K
323 2513 m
21 23 14 16 12 21 14 23 35 21 23 21 16 16 23 25 16 16 12 16 15 23 16 23 23 21 16 23 23 16 21 14 23 23 14 16 14 14 21 16 23 21 23 14 23 16 21 16 23 16 23 14 16 23 14 16 18 23 23 14 14 21 23 23 16 17 16 21 23 35 21 35 17 23 32 14 17 23 23 21 17 12 21 14 23 23 14 16 14 14 21 CP (attribute, and two member functions to turn a given attribute on and off.  For example, the) K
[37 0 0 42 0 0] /Courier MF
323 2464 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
10 21 23 14 10 21 23 21 23 21 35 10 23 14 10 18 23 23 14 14 21 23 23 16 10 21 18 21 23 14 10 18 21 23 14 23 23 16 23 10 18 18 21 14 21 10 CP ( class provides these functions to manage the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (VS_BORDER) K
42 /Times-Roman SF
12 21 14 23 14 18 10 CP ( style.) K
[37 0 0 33 0 0] /Courier MF
398 2382 m
22 22 22 22 22 22 22 CP (Boolean) K
398 2348 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  hasBorder \( \) const;) K
398 2282 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
398 2249 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &enableBorder  \( Boolean flag = true \),) K
398 2216 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &disableBorder \( \);) K
42 /Times-Roman SF
323 2121 m
23 21 21 21 21 16 23 16 21 18 23 23 14 14 21 23 23 16 21 23 23 14 14 14 21 18 16 21 14 23 14 18 21 23 32 14 21 21 23 14 23 23 16 23 21 23 14 21 18 14 21 23 23 14 14 23 21 23 23 23 21 22 23 16 21 16 23 14 28 22 21 21 21 16 16 21 14 23 16 22 16 21 18 32 22 21 23 28 CP (The User Interface Library convention is to provide two style-setting functions for each) K
323 2071 m
23 23 14 21 14 23 23 14 16 14 14 21 14 21 23 14 14 23 16 23 14 14 23 14 14 21 23 23 14 12 21 14 23 23 14 16 14 14 21 CP (attribute, one to turn the attribute on) K
42 /Times-Roman SF
44 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\227) K
42 /Times-Roman SF
14 14 21 23 23 14 14 23 23 14 23 21 14 23 23 14 14 23 21 21 21 21 14 14 23 23 CP (but accepting an optional ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (Boolean) K
42 /Times-Roman SF
14 14 13 23 16 23 14 13 23 14 13 14 23 21 35 23 23 15 21 14 CP ( argument to turn it) K
323 2021 m
16 15 23 CP (off) K
42 /Font500 SF
44 CP (\227) K
42 /Times-Roman SF
14 21 21 21 14 23 21 16 10 23 14 10 23 23 23 10 18 14 14 35 16 21 23 10 18 14 23 28 9 10 12 16 15 23 10 14 14 10 23 16 23 14 10 23 14 10 21 23 23 10 23 23 21 CP (and one to turn it off.  This permits you to replace:) K
[37 0 0 33 0 0] /Courier MF
398 1973 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (if \( needsBorder \)) K
398 1940 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  aValueSet.enableBorder\(\);) K
398 1906 m
22 22 22 22 CP (else) K
398 1873 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  aValueSet.disableBorder\(\);) K
42 /Times-Roman SF
323 1825 m
14 23 23 14 18 16 21 23 10 16 21 14 23 35 14 18 10 21 10 23 14 14 32 CP (with a simpler version:) K
[37 0 0 33 0 0] /Courier MF
398 1777 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (aValueSet.enableBorder\( needsBorder \);) K
42 /Times-Roman SF
323 1715 m
10 21 21 16 23 14 10 21 23 14 10 16 23 10 23 23 14 14 21 14 23 21 35 21 14 23 35 14 10 21 23 14 10 18 14 10 32 23 14 21 30 CP (Below is the implementation of the three ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::border) K
42 /Times-Roman SF
12 18 23 23 14 14 21 23 23 16 10 23 23 14 14 21 14 23 23 14 23 21 35 10 21 14 23 14 18 10 CP ( style manipulation functions.) K
[37 0 0 33 0 0] /Courier MF
398 1633 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (Boolean ValueSet :: hasBorder \( \) const) K
398 1600 m
22 22 22 CP (  {) K
398 1567 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return this->style\(\) & VS_BORDER;) K
398 1534 m
22 22 22 CP (  }) K
398 1467 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet &ValueSet :: enableBorder \( Boolean flag \)) K
398 1434 m
22 22 22 CP (  {) K
398 1401 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( flag \)) K
398 1368 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    this->setStyle\( this->style\(\) | VS_BORDER \);) K
398 1334 m
22 22 22 22 22 22 CP (  else) K
398 1301 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    this->setStyle\( this->style\(\) & ~VS_BORDER \);) K
398 1268 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 1235 m
22 22 22 CP (  }) K
398 1168 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet &ValueSet :: disableBorder \( \)) K
398 1135 m
22 22 22 CP (  {) K
398 1102 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return this->enableBorder\( false \);) K
398 1069 m
22 22 22 CP (  }) K
62 /Times-Bold SF
323 958 m
24 34 31 17 21 28 34 34 38 15 27 28 34 52 28 59 15 34 28 31 34 34 31 21 34 CP (Standard Member Functions) K
42 /Times-Roman SF
323 870 m
12 16 23 16 12 23 21 23 14 16 21 23 12 18 23 23 14 14 21 23 23 16 12 14 21 23 14 16 14 23 13 21 23 14 13 16 23 13 14 18 23 35 13 14 21 23 14 13 18 23 21 23 23 21 23 13 14 16 CP (It happens that most of the virtual functions defined for ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
42 /Times-Roman SF
12 23 23 21 12 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
21 23 12 23 21 21 12 18 14 21 21 14 23 23 12 CP ( objects can be) K
323 820 m
14 23 23 12 23 23 13 23 14 14 21 23 18 23 13 23 23 23 13 12 14 14 23 18 21 16 13 21 13 18 32 11 13 12 20 14 14 23 21 14 16 15 14 23 13 23 23 21 13 14 23 23 23 14 14 32 13 18 18 21 14 21 13 23 21 23 14 16 21 23 13 23 23 21 13 16 23 13 18 14 21 21 14 23 23 13 23 14 13 23 21 14 14 23 23 21 CP (applied to objects of any derived class without any difficulty.  As a result, you usually do not) K
323 770 m
10 23 23 21 10 21 23 14 16 16 21 23 23 10 23 14 10 23 21 21 23 CP (need to override any ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
10 16 23 10 CP ( or ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
42 /Times-Roman SF
12 18 21 18 18 21 14 21 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 14 10 18 23 23 14 14 21 23 23 16 10 14 21 23 14 16 14 23 10 CP ( virtual functions in your custom control classes.) K
323 693 m
16 23 23 23 15 18 14 23 21 35 21 16 14 23 23 21 16 15 21 14 23 35 14 18 15 16 23 15 16 21 23 35 23 23 15 14 14 21 35 18 15 21 15 21 18 23 23 35 14 15 18 21 23 23 15 23 23 14 18 21 23 15 23 16 21 16 23 14 28 15 21 21 21 16 16 21 14 23 16 15 16 21 18 32 15 21 23 28 CP (The User Interface Library design does impose a small number of simple requirements your) K
323 643 m
21 15 16 23 15 16 21 23 23 14 18 21 23 15 21 23 14 15 18 32 14 16 12 20 16 21 16 23 14 14 16 21 23 14 16 23 14 23 14 16 23 21 14 21 16 23 21 14 23 14 16 23 14 14 23 16 16 21 23 16 23 14 16 14 21 21 35 16 14 18 23 35 16 18 18 21 14 21 16 14 23 16 14 23 23 21 16 35 23 14 18 23 21 CP (custom control class must meet to be fully integrated into the library.  As the designer of a) K
323 594 m
21 23 14 13 21 23 14 23 23 16 23 14 23 23 21 14 18 21 23 18 18 14 14 21 18 21 23 14 14 16 23 14 23 21 21 21 14 18 18 21 16 23 23 21 14 23 23 23 14 21 16 23 18 14 21 23 21 35 14 23 14 23 23 23 18 14 23 23 23 14 12 18 18 21 14 21 14 14 23 16 14 23 23 21 14 35 23 14 18 23 21 CP (custom control class, you should make sure you address each of these issues and provide the) K
323 544 m
12 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 14 10 14 16 23 23 23 23 18 10 16 23 10 14 21 23 21 14 10 21 14 21 14 16 23 23 16 23 23 21 CP (appropriate level of support in your custom control.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (780) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 11 11
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 1363 m
2085 1363 l
2085 2166 l
323 2166 l cp
clip n msbeforeclp SM
n
827 2006 m
827 2006 2081 2096 box
cp
0.89801 g
e
0 g
n
323 2006 m
323 2006 829 2096 box
cp
0.89801 g
e
0 g
42 /Times-Bold SF
323 2128 m
18 23 21 20 32 8 20 23 14 23 32 10 16 21 25 10 21 25 14 23 28 9 10 12 23 16 23 23 10 21 14 25 23 26 CP (Table 30-1.  Value Set Color Areas) K
46 /Times-Bold SF
338 2037 m
25 22 21 35 8 21 25 15 25 35 CP (Color Area) K
841 2037 m
28 25 15 17 28 15 22 22 20 22 35 CP (Description) K
[37 0 0 42 0 0] /Courier MF
338 1957 m
22 22 22 22 22 22 22 CP (borders) K
37 /Times-Roman SF
841 1961 m
18 20 12 9 20 12 9 16 20 20 20 20 16 18 14 14 20 18 9 12 14 9 9 11 16 14 18 20 14 20 20 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 12 20 12 18 20 9 20 12 9 20 18 16 20 9 14 20 12 20 18 9 18 20 12 9 16 12 9 16 12 20 25 CP (This is the color used to paint the value set borders.  It corresponds to the) K
841 1912 m
9 18 20 20 18 9 20 12 12 29 9 14 18 12 18 31 18 14 18 20 9 20 20 12 12 18 12 20 18 16 18 14 20 CP (presentation parameter with code ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (PP_BORDERCOLOR) K
37 /Times-Roman SF
11 CP (.) K
[37 0 0 42 0 0] /Courier MF
338 1835 m
22 22 22 22 22 22 22 22 22 22 CP (foreground) K
37 /Times-Roman SF
841 1839 m
16 20 20 20 20 16 18 14 14 20 18 9 12 14 9 9 11 16 31 18 12 12 9 12 20 18 12 9 14 20 14 9 20 20 20 20 14 20 18 14 20 14 9 18 20 12 9 12 20 12 18 20 9 20 12 9 20 18 16 20 9 14 20 12 20 18 9 18 20 12 9 16 12 9 16 12 20 25 CP (This is the color used to paint the foreground for text items.  It corresponds) K
841 1790 m
9 18 20 20 18 9 20 12 12 29 9 14 18 12 18 31 18 14 18 20 9 20 20 12 12 18 12 20 18 16 18 14 20 9 18 20 12 9 20 12 CP (to the presentation parameter with code ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (PP_FOREGROUNDCOLOR) K
37 /Times-Roman SF
11 CP (.) K
[37 0 0 42 0 0] /Courier MF
338 1713 m
22 22 22 22 22 22 22 22 22 22 CP (background) K
37 /Times-Roman SF
841 1717 m
20 20 18 9 11 20 20 18 12 9 11 12 20 18 12 9 14 20 14 9 20 20 20 20 14 20 20 18 18 20 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 12 20 12 18 20 9 20 12 9 20 18 16 20 9 14 20 12 20 18 9 18 20 12 9 16 12 9 16 12 20 25 CP (This is the color used to paint the value set background for text, icon, and) K
841 1671 m
18 20 20 18 9 20 12 12 29 9 14 18 12 18 31 18 14 18 20 9 20 20 12 12 18 12 20 18 16 18 14 20 9 18 20 12 9 20 12 9 16 20 20 20 20 16 18 14 14 20 18 9 12 14 9 9 11 16 31 18 12 12 9 20 12 20 31 18 CP (empty items.  It corresponds to the presentation parameter with code) K
[37 0 0 42 0 0] /Courier MF
841 1623 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (PP_BACKGROUNDCOLOR) K
37 /Times-Roman SF
11 CP (.) K
[37 0 0 42 0 0] /Courier MF
338 1542 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (highlightBackground) K
37 /Times-Roman SF
841 1546 m
20 18 12 18 18 12 18 16 9 18 20 12 9 20 20 20 20 14 18 9 16 12 16 18 20 20 31 18 9 20 20 12 12 18 18 12 18 16 9 18 20 12 9 12 20 12 18 20 9 20 12 9 20 18 16 20 9 14 20 12 20 18 9 18 20 12 9 16 12 9 16 12 20 25 CP (This is the color used to paint the selection emphasis around the selected) K
841 1500 m
18 20 20 18 9 20 12 12 29 9 14 18 12 18 31 18 14 18 20 9 20 20 12 12 18 12 20 18 16 18 14 20 9 18 20 12 9 20 12 9 16 20 20 20 20 16 18 14 14 20 18 9 12 14 9 9 11 31 18 12 12 9 12 18 16 9 18 20 12 18 20 CP (value set item.  It corresponds to the presentation parameter with code) K
[37 0 0 42 0 0] /Courier MF
841 1451 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (PP_HILITEBACKGROUNDCOLOR) K
37 /Times-Roman SF
11 CP (.) K
n
323 1420 m
323 1420 2080 1423 box
cp
e
n
323 1591 m
323 1591 2080 1594 box
cp
e
n
323 1762 m
323 1762 2080 1765 box
cp
e
n
323 1884 m
323 1884 2080 1887 box
cp
e
n
2077 1420 m
2077 1420 2080 2096 box
cp
e
n
323 2006 m
323 2006 2080 2009 box
cp
e
n
323 2097 m
323 2097 2080 2100 box
cp
e
n
827 1420 m
827 1420 830 2096 box
cp
e
n
323 1420 m
323 1420 326 2096 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 1362 l
323 1362 l cp
323 2167 m
2085 2167 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
54 /Times-Bold SF
323 2709 m
18 24 27 30 30 30 30 13 23 27 15 27 39 CP (Color Support) K
42 /Times-Roman SF
323 2623 m
14 23 21 18 21 16 25 17 21 23 14 17 14 21 23 14 17 18 16 23 14 23 21 17 21 23 14 17 23 23 14 14 14 23 16 14 23 23 21 17 16 23 16 17 14 16 23 23 23 23 18 17 14 14 23 16 17 18 21 23 14 23 23 16 23 17 23 16 21 16 23 14 28 17 21 21 21 16 16 21 14 23 16 17 16 21 18 32 18 21 23 28 CP (The User Interface Library provides full support for controlling the colors that the Presen-) K
323 2573 m
16 23 23 23 14 23 14 14 14 16 23 23 23 23 18 14 16 23 14 14 21 23 21 14 14 21 35 21 18 14 21 23 14 14 21 23 14 23 23 16 23 14 23 14 23 23 23 18 14 23 23 28 13 15 12 18 14 23 16 14 23 23 21 15 32 21 16 23 15 23 14 15 18 21 18 23 15 16 21 23 21 23 21 39 15 23 23 14 14 21 14 CP (tation Manager uses to draw controls.  You should provide the same level of support in your) K
323 2523 m
12 18 21 18 18 21 14 21 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 CP (custom control classes.) K
323 2446 m
21 11 23 23 14 18 23 11 12 18 21 21 16 21 11 16 23 14 23 21 12 16 23 12 14 21 18 12 21 23 14 12 21 23 14 16 21 23 12 23 14 12 18 14 12 18 16 23 14 23 21 12 32 23 23 23 14 32 12 23 23 14 14 21 14 23 23 14 23 21 35 12 16 23 16 12 23 23 21 14 21 16 14 18 12 23 23 14 18 21 23 12 21 23 28 CP (The design strategy for manipulating window colors is to define the set of color areas, using a) K
[37 0 0 42 0 0] /Courier MF
323 2396 m
22 22 22 22 22 22 22 22 22 CP (ColorArea) K
42 /Times-Roman SF
12 20 16 21 23 23 14 23 14 14 18 23 23 14 14 21 23 23 16 14 16 21 23 35 21 35 14 21 23 14 15 21 23 14 16 21 23 15 23 23 21 15 12 18 14 16 23 23 23 23 18 15 14 23 16 14 23 23 21 15 21 23 14 15 14 21 23 14 15 23 23 14 14 21 16 21 35 23 23 21 15 CP ( enumeration that the control supports, and define the member functions to query,) K
323 2347 m
14 21 23 18 14 23 18 21 23 23 14 23 23 18 21 23 14 18 21 16 21 18 18 21 21 16 21 18 16 23 14 23 21 18 21 23 28 18 19 12 18 21 21 16 21 19 21 18 21 23 14 19 32 21 16 23 19 23 14 19 23 21 18 23 19 21 23 19 23 14 19 18 16 23 14 23 21 19 21 23 14 19 12 14 21 18 19 23 23 21 CP (and set, the colors to be used to draw these areas.  The color areas are the unique visual) K
323 2297 m
16 21 23 14 16 12 18 14 23 16 14 23 23 21 16 14 21 18 16 21 23 14 21 23 16 21 23 14 16 16 23 25 16 16 12 14 23 16 14 23 23 21 17 21 23 14 17 16 23 17 18 14 23 21 35 21 14 21 CP (elements of the control.  For the value set controls, the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (WC_VALUESET) K
42 /Times-Roman SF
18 21 14 21 14 21 14 23 16 18 18 21 14 21 16 32 23 23 23 14 32 16 CP ( window class dictates) K
323 2247 m
10 23 14 10 23 23 23 23 16 10 18 21 21 16 21 10 16 23 14 23 21 10 21 18 21 23 14 CP (these color areas found in ) K
23 16 23 23 10 21 14 23 21 25 CP (Table 30-1) K
12 CP (.) K
323 1287 m
10 21 23 14 10 16 23 10 23 23 14 14 21 16 21 14 21 21 23 10 21 23 28 CP (The declaration of the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::ColorArea) K
42 /Times-Roman SF
12 18 32 23 14 14 23 16 10 18 21 10 18 14 10 23 23 14 14 21 16 21 35 23 23 21 10 CP ( enumeration is as follows.) K
[37 0 0 33 0 0] /Courier MF
398 1238 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (enum ColorArea) K
398 1205 m
22 22 22 CP (  {) K
398 1171 m
22 22 22 22 22 22 22 22 22 22 CP (  borders,) K
398 1138 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  foreground,) K
398 1105 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  background,) K
398 1072 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  hightlightBackground) K
398 1039 m
22 22 22 22 CP (  };) K
42 /Times-Roman SF
323 977 m
14 23 16 14 23 23 21 12 16 23 23 23 12 23 21 23 14 16 21 23 12 21 23 21 23 12 23 23 23 13 21 21 23 32 CP (Once you have defined your control) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
23 16 21 23 23 12 23 14 12 18 23 23 14 14 21 23 23 16 12 16 21 23 35 21 35 12 21 23 14 12 23 23 21 12 23 21 21 12 23 23 23 12 12 18 21 21 16 21 12 16 23 14 23 21 12 18 CP (s color areas, you can add the member functions to query) K
323 928 m
23 14 13 21 35 21 18 13 21 23 14 13 23 14 14 21 14 14 23 21 18 18 21 13 21 16 21 13 18 23 23 14 14 21 23 23 16 13 21 18 21 23 28 12 13 12 18 21 21 16 21 13 21 18 21 23 14 13 32 21 16 23 13 23 14 13 23 21 18 23 13 21 23 13 23 14 13 18 16 23 14 23 21 13 21 23 14 13 14 21 18 14 23 23 21 CP (and set the colors to be used to draw these areas.  These functions are essentially the same in) K
323 878 m
12 21 23 14 12 21 18 23 13 23 14 23 35 14 18 13 23 21 23 14 13 14 18 18 21 14 21 13 14 23 16 14 23 23 21 13 23 21 21 21 CP (each control class; they simply use the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (ColorArea) K
42 /Times-Roman SF
21 16 21 32 12 12 12 18 18 21 14 21 12 21 23 14 12 23 14 12 21 14 21 14 16 23 23 16 23 23 21 12 23 23 14 14 21 16 21 35 23 23 21 12 CP ( enumeration appropriate to the class.  Here) K
323 828 m
10 16 23 16 10 18 23 23 14 14 21 23 23 16 10 21 18 21 23 14 10 16 23 10 18 23 23 14 14 21 16 21 14 21 21 23 10 21 23 14 10 21 16 21 CP (are the declarations of these functions for ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
12 CP (.) K
[37 0 0 33 0 0] /Courier MF
398 746 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (virtual IColor) K
398 713 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  color \( ColorArea area \) const;) K
398 646 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (virtual ValueSet) K
398 613 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &setColor \( ColorArea area,) K
398 580 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (             const IColor &color \);) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (781) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 12 12
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
13 21 14 21 14 16 23 23 16 23 23 21 13 21 23 14 13 23 14 13 18 21 23 14 21 23 13 23 23 14 14 21 16 21 35 23 23 21 13 21 23 14 13 23 23 14 14 21 14 18 23 21 16 14 13 23 23 14 18 23 23 14 14 21 23 23 16 14 21 18 21 23 14 14 14 23 21 35 21 14 23 35 14 14 23 23 28 CP (You implement these functions by translating the enumeration values to the appropriate ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (PP_*) K
42 /Times-Roman SF
323 2660 m
14 21 18 21 23 14 21 23 14 14 23 23 14 14 14 21 21 14 23 21 23 14 14 23 23 21 14 12 23 21 23 23 14 CP (index, and then calling the base ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
42 /Times-Roman SF
23 16 14 14 12 14 23 21 35 23 23 15 21 14 18 21 14 18 21 21 14 23 23 14 14 21 18 21 23 14 14 18 14 23 21 21 21 21 14 14 21 23 14 14 23 23 14 14 21 23 23 16 14 CP ( function that accepts these indices as argument.  In) K
323 2610 m
11 21 18 16 23 23 21 11 16 23 11 21 16 21 11 21 16 21 23 14 11 12 21 14 23 35 21 23 21 11 18 14 23 14 CP (this example, there are of course ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (PP_*) K
42 /Times-Roman SF
35 23 14 18 23 21 10 16 23 23 23 10 16 16 10 11 12 21 21 16 21 11 16 23 14 23 21 11 23 21 21 21 11 23 14 11 23 23 14 23 23 23 23 18 21 16 16 23 21 11 18 21 23 14 21 23 11 CP ( values corresponding to each color area.  If your custom) K
323 2560 m
13 21 13 21 18 23 21 16 13 23 14 23 23 32 13 23 23 23 13 23 21 23 14 13 12 18 21 21 16 21 13 16 23 14 23 21 13 21 23 23 14 23 23 13 18 21 23 13 14 23 16 14 23 23 21 CP (control has unique color areas, then you would reuse a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (PP_*) K
42 /Times-Roman SF
14 14 14 23 23 21 12 21 18 14 32 16 21 23 14 23 12 14 23 23 12 18 14 12 14 21 23 14 12 23 21 23 23 14 12 CP ( index that is not otherwise appli-) K
323 2510 m
12 14 23 16 14 23 23 21 10 16 23 23 23 10 23 14 10 21 14 23 21 21 CP (cable to your control.) K
[37 0 0 33 0 0] /Courier MF
398 2462 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IColor ValueSet :: color \( ColorArea area \) const) K
398 2428 m
22 22 22 CP (  {) K
398 2395 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  unsigned long) K
398 2362 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    colorArea;) K
398 2329 m
22 22 22 22 22 22 22 22 22 22 22 CP (  IGUIColor) K
398 2295 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    defaultColor\( IGUIColor::windowBgnd \);) K
398 2262 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  switch \( area \)) K
398 2229 m
22 22 22 22 22 CP (    {) K
398 2196 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case borders:) K
398 2163 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_BORDERCOLOR;) K
398 2129 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      defaultColor = IGUIColor::frameBorder;) K
398 2096 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 2063 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case foreground:) K
398 2030 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_FOREGROUNDCOLOR;) K
398 1997 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      defaultColor = IGUIColor::windowText;) K
398 1963 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1930 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case background:) K
398 1897 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_BACKGROUNDCOLOR;) K
398 1864 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      defaultColor = IGUIColor::windowBgnd;) K
398 1831 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1797 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case highlightBackground:) K
398 1764 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_HILITEBACKGROUNDCOLOR;) K
398 1731 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      defaultColor = IGUIColor::hiliteBgnd;) K
398 1698 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1665 m
22 22 22 22 22 CP (    }) K
398 1631 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return IWindow::color\( colorArea, defaultColor \);) K
398 1598 m
22 22 22 CP (  }) K
398 1532 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet &ValueSet :: setColor \( ColorArea     area,) K
398 1498 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                 const IColor &color \)) K
398 1465 m
22 22 22 CP (  {) K
398 1432 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  unsigned long) K
398 1399 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    colorArea;) K
398 1366 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  switch \( area \)) K
398 1332 m
22 22 22 22 22 CP (    {) K
398 1299 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case borders:) K
398 1266 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_BORDERCOLOR;) K
398 1233 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1200 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case foreground:) K
398 1166 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_FOREGROUNDCOLOR;) K
398 1133 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1100 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case background:) K
398 1067 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_BACKGROUNDCOLOR;) K
398 1034 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1000 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case highlightBackground:) K
398 967 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      colorArea    = PP_HILITEBACKGROUNDCOLOR;) K
398 934 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 901 m
22 22 22 22 22 CP (    }) K
398 867 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IWindow::setColor\( colorArea, color \);) K
398 834 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 801 m
22 22 22 CP (  }) K
54 /Times-Bold SF
323 696 m
24 24 15 30 13 45 30 45 15 30 15 51 13 27 30 15 18 27 15 30 24 15 27 39 CP (Calculating Minimum Size) K
42 /Times-Roman SF
323 610 m
18 21 18 18 21 14 21 19 18 21 23 23 21 21 19 23 16 21 16 23 14 28 19 21 21 21 16 16 21 14 23 16 19 16 21 18 32 19 21 23 28 CP (The User Interface Library canvas classes) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
21 23 14 18 14 23 23 23 21 18 23 23 14 14 21 35 16 23 16 23 14 18 21 16 14 23 23 21 16 18 18 21 14 23 21 14 21 16 14 18 18 14 23 23 23 21 14 19 CP ( layout strategies require information about the) K
323 560 m
23 14 14 32 15 23 14 21 23 14 14 21 21 16 15 21 15 23 16 23 32 15 23 14 15 18 21 18 18 21 23 23 21 21 15 21 18 21 23 14 16 14 23 21 32 16 23 23 23 16 16 16 16 16 12 18 14 23 16 14 23 23 21 16 23 14 14 23 21 16 16 14 21 23 14 16 16 23 16 21 21 14 18 16 35 23 35 14 23 14 35 CP (minimum size of their child controls.  If you want these canvasses to work effectively with) K
323 511 m
10 21 23 14 10 21 23 14 16 16 21 23 23 10 14 18 23 35 11 23 23 23 11 23 21 23 14 11 12 18 14 23 16 14 23 23 21 11 35 23 14 18 23 21 11 16 23 23 23 CP (your custom controls, then you must override the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
42 /Times-Roman SF
23 14 10 23 23 14 14 21 23 23 16 10 16 21 23 35 21 35 10 14 21 23 14 16 14 23 10 CP ( virtual member function in) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (782) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 13 13
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
13 23 21 13 18 23 16 23 14 21 16 13 23 23 14 14 21 23 23 16 13 18 14 23 28 12 13 12 18 18 21 14 21 13 14 23 16 14 23 23 21 14 35 23 14 18 23 21 14 16 23 23 23 CP (your custom control class.  This function returns an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (ISize) K
42 /Times-Roman SF
21 21 14 35 14 23 14 35 13 21 23 14 13 18 21 23 14 16 21 18 21 23 13 14 21 23 14 13 14 21 21 14 23 23 13 CP ( object that describes the minimize) K
323 2660 m
12 18 14 23 21 14 23 23 21 10 18 14 14 10 23 21 14 23 18 14 23 10 23 14 21 23 14 14 21 21 16 15 21 10 23 14 10 21 23 21 23 21 35 10 14 14 14 14 18 10 23 21 21 10 14 23 16 14 23 23 21 10 16 23 23 23 10 23 21 14 23 32 10 14 21 10 21 21 14 18 CP (size at which your control can still manage to effectively display its contents.) K
323 2583 m
18 16 23 23 23 18 12 20 14 21 14 21 23 23 14 16 23 25 CP (Fortunately, your ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
42 /Times-Roman SF
30 15 17 12 14 21 32 18 23 21 17 21 18 14 21 21 16 23 17 21 17 21 23 14 23 23 16 23 17 23 14 18 21 23 21 23 18 14 23 23 18 18 21 23 23 18 23 23 14 14 21 23 23 16 18 CP ( function does not have to provide a precise answer.  A) K
323 2533 m
21 12 14 21 23 12 23 21 21 12 23 23 28 10 12 12 23 23 23 23 23 21 12 23 23 23 23 12 23 14 14 21 16 21 23 21 23 12 18 14 12 12 21 23 14 18 12 21 23 14 14 21 23 16 21 18 23 23 21 13 21 23 14 13 23 23 13 23 23 14 16 16 21 13 12 21 14 21 35 14 14 18 21 13 21 14 23 21 23 23 18 21 21 16 CP (reasonable estimate, erring on the conservative side, is generally good enough.  You can get a) K
323 2483 m
14 21 14 23 35 14 16 21 23 14 16 14 21 16 23 23 14 23 23 23 14 16 23 23 16 12 18 14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 16 23 23 23 16 16 23 16 16 12 23 23 14 14 21 23 23 16 16 18 14 23 14 16 14 23 21 35 21 14 23 35 14 16 23 14 16 32 23 23 17 16 23 16 17 14 21 21 16 CP (feel for how to implement this function, for your custom controls, by looking at the imple-) K
323 2433 m
10 16 23 10 23 23 14 14 21 14 23 21 35 CP (mentation of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::calcMinimumSize) K
42 /Times-Roman SF
12 CP (.) K
[37 0 0 33 0 0] /Courier MF
398 2385 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ISize ValueSet :: calcMinimumSize \( \) const) K
398 2352 m
22 22 22 CP (  {) K
398 2318 m
22 22 22 22 22 22 22 CP (  ISize) K
398 2285 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    dim = dimensions\(\);) K
398 2252 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // Find widest and tallest items...) K
398 2219 m
22 22 22 22 22 22 22 22 22 22 CP (  unsigned) K
398 2185 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    widest  = 0,) K
398 2152 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    tallest = 0;) K
398 2119 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  for \( unsigned row = 0; row < dim.height\(\); row++ \)) K
398 2086 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    for \( unsigned col = 0; col < dim.width\(\); col++ \)) K
398 2053 m
22 22 22 22 22 22 22 CP (      {) K
398 2019 m
22 22 22 22 22 22 22 22 22 22 CP (      Item) K
398 1986 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        cell = item\( row+1, col+1 \);) K
398 1953 m
22 22 22 22 22 22 22 22 22 22 22 CP (      ISize) K
398 1920 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        size;) K
398 1887 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      switch \( cell.itemType \)) K
398 1853 m
22 22 22 22 22 22 22 22 22 CP (        {) K
398 1820 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        case ValueSet::Item::emptyItem:) K
398 1787 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          // Empty items must be at least 2x2.) K
398 1754 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          size = ISize\( 2, 2 \);) K
398 1721 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          break;) K
398 1687 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        case ValueSet::Item::colorItem:) K
398 1654 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font600 /Courier redefine
[37 0 0 33 0 0] /Font600 MF
(          // We\047ll make color items at least 5x5.) K
398 1621 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          size = ISize\( 5, 5 \);) K
398 1588 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          break;) K
398 1555 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        case ValueSet::Item::bitmapItem:) K
398 1521 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          // We\047ll make bitmap items at least 50x50.) K
398 1488 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          size = ISize\( 50, 50 \);) K
398 1455 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          break;) K
398 1422 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        case ValueSet::Item::iconItem:) K
398 1388 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          // We\047ll make icon items at least 32x32.) K
398 1355 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          size = ISize\( 32, 32 \);) K
398 1322 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          break;) K
398 1289 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        case ValueSet::Item::textItem:) K
398 1256 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          // We\047ll make text items avg char size * text length.) K
398 1222 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          size = \(\(ValueSet*\)this\)->characterSize\(\)) K
398 1189 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                   .scaledBy\( cell.text\(\).length\(\), 1 \);) K
398 1156 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (          break;) K
398 1123 m
22 22 22 22 22 22 22 22 22 CP (        }) K
398 1090 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      // Update maximums if this item is bigger...) K
398 1056 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      if \( size.width\(\) > widest \)) K
398 1023 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        widest = size.width\(\);) K
398 990 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      if \( size.height\(\) > tallest \)) K
398 957 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (        tallest = size.height\(\);) K
398 924 m
22 22 22 22 22 22 22 CP (      }) K
398 890 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // Calculate size that will hold all items + 12 for border.) K
398 857 m
22 22 22 22 22 22 22 CP (  ISize) K
398 824 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    min = ISize\( widest  * dim.width\(\) + 12,) K
398 791 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                 tallest * dim.height\(\) + 12 \);) K
398 757 m
22 22 22 22 22 22 22 CP (  ISize) K
398 724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    space = itemSpacing\(\);) K
398 691 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // Add horizontal space, including 7 for border/highlighting.) K
398 658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( dim.width\(\) > 1 \)) K
398 625 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    min.setWidth\( min.width\(\)) K
398 591 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  +) K
398 558 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  \(dim.width\(\)-1\)*\( space.width\(\) + 7 \) \);) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (783) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 14 14
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // Add vertical space, including 7 for border/highlighting.) K
398 2691 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( dim.height\(\) > 1 \)) K
398 2658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    min.setHeight\( min.height\(\)) K
398 2624 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                   +) K
398 2591 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                   \(dim.height\(\)-1\)*\( space.height\(\) + 7 \) \);) K
398 2558 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return min;) K
398 2525 m
22 22 22 CP (  }) K
42 /Times-Roman SF
323 2430 m
16 23 16 13 23 23 23 23 23 21 14 23 14 23 14 21 21 14 18 14 35 21 14 14 14 21 23 14 14 21 23 21 35 14 21 32 14 12 21 21 14 18 14 21 35 21 18 14 21 23 14 14 21 23 14 14 18 23 35 14 14 21 18 14 21 23 14 21 23 14 21 23 14 14 23 14 14 18 35 21 14 14 14 14 14 21 14 21 21 23 14 25 CP (Since all items in the value set must be the same size, we make the item size big enough for) K
323 2381 m
21 23 14 21 23 16 21 16 14 14 23 21 16 21 23 14 16 16 23 16 16 21 21 14 18 16 35 23 35 14 23 14 35 16 21 23 14 16 21 14 21 14 23 21 14 21 21 16 23 21 23 14 16 21 39 15 16 12 18 35 21 14 14 16 14 18 21 14 14 21 14 16 23 23 21 16 14 18 21 23 14 32 17 21 23 14 17 23 14 23 23 CP (both the widest and tallest items.  We then calculate the minimum size for the entire value) K
323 2331 m
16 21 23 16 23 23 10 21 23 14 10 16 23 16 10 35 23 23 16 10 21 35 23 18 10 23 23 21 10 18 35 21 14 14 10 23 21 21 32 14 21 23 10 23 23 14 21 21 23 18 10 21 23 14 10 16 23 16 10 32 23 14 14 21 10 23 18 14 21 10 21 39 9 10 12 21 21 14 18 11 35 21 14 14 11 14 21 23 14 11 35 23 16 16 CP (from that item size.  We also allow for the spacing between items and some room for the border) K
323 2281 m
12 14 21 18 10 21 23 14 21 23 10 21 23 14 10 16 23 10 21 23 14 18 14 23 23 10 21 23 14 10 23 23 23 23 16 21 CP (around the outside of the value set.) K
323 2204 m
18 35 21 14 14 10 23 21 35 14 14 23 10 14 21 14 10 21 39 9 10 12 23 23 14 14 21 14 23 21 14 21 21 10 21 21 14 18 16 35 23 35 14 23 14 35 10 18 14 23 14 10 23 14 10 23 14 14 23 14 14 21 21 14 23 23 18 10 16 23 16 11 35 23 23 16 11 16 23 11 23 14 23 21 14 23 11 18 14 11 21 16 21 23 28 CP (There is plenty of room for subjectivity in this minimum-size calculation.  We let bitmap items) K
323 2154 m
14 14 16 10 23 21 21 10 18 23 23 21 14 10 14 14 21 10 21 35 23 18 21 16 23 10 23 18 14 21 10 21 39 9 10 12 18 23 21 35 14 14 23 10 14 18 23 35 10 23 21 23 14 10 16 21 14 14 21 35 18 10 23 21 23 35 10 18 14 10 23 21 14 23 32 10 16 23 23 12 23 23 16 11 23 14 11 23 21 21 14 18 11 21 23 CP (be sized to \(50,50\) which is much smaller than most bitmaps.  We also presume all icons can fit) K
323 2105 m
16 23 10 21 21 14 18 10 21 23 14 10 23 23 14 18 23 10 18 35 21 14 14 10 14 23 21 14 10 16 23 10 21 21 14 18 11 21 23 14 11 18 21 14 21 14 23 21 14 21 21 11 23 23 14 14 21 23 23 16 11 18 14 23 28 10 11 12 16 23 23 12 23 23 16 11 14 21 11 23 21 21 14 18 11 35 21 14 14 11 23 21 11 23 14 23 14 14 32 CP (within an item sized at \(32,32\).  This function calculates the size of text items using the size of) K
323 2055 m
16 23 13 23 14 23 15 21 35 13 21 23 14 13 12 14 21 23 21 32 23 32 13 13 12 14 23 21 14 13 35 21 14 14 13 21 23 14 13 23 14 13 18 16 21 14 21 21 16 21 23 21 13 14 21 23 14 21 21 14 21 23 14 14 23 21 23 14 14 16 21 23 14 21 16 14 18 16 21 14 21 21 16 21 23 21 14 21 23 21 16 21 23 21 CP (average characters rather than the actual characters in the item text.  However, the margin of) K
323 2005 m
21 14 14 14 14 14 14 18 21 14 14 18 21 23 23 14 14 23 14 23 23 14 23 14 23 23 23 18 14 23 23 28 12 14 12 21 14 23 14 23 14 14 23 21 23 14 18 14 14 12 18 23 23 14 14 21 35 14 23 23 16 23 23 21 14 21 18 21 23 14 15 14 14 21 15 35 23 16 16 15 23 23 14 14 14 23 18 21 16 15 12 14 23 16 16 21 CP (error, resulting from all these approximations, is negligible.  You should only invest as little) K
323 1955 m
13 16 23 23 23 13 16 23 13 23 23 14 18 21 23 13 21 23 14 13 23 14 23 14 13 23 23 15 21 23 21 14 23 23 21 14 21 35 14 14 CP (time and energy into the design of your ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
42 /Times-Roman SF
21 23 14 13 14 21 23 13 23 14 13 23 16 21 18 18 21 21 21 23 13 18 14 13 18 21 13 18 23 23 14 14 21 23 23 16 13 CP ( functions as is necessary to get the) K
323 1905 m
23 23 14 14 21 21 14 14 23 23 21 10 16 23 23 23 10 16 23 16 10 23 21 16 14 23 23 21 16 10 23 23 14 18 14 21 21 16 23 CP (precision required for your application) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
12 18 23 21 21 23 10 18 CP (s needs.) K
323 1828 m
10 14 14 21 21 10 18 23 21 32 14 21 10 23 21 21 10 23 23 23 10 23 21 23 14 10 12 23 23 23 16 32 10 18 14 10 23 23 14 14 21 23 23 16 10 18 14 23 14 10 23 23 10 23 21 14 21 14 23 21 14 21 21 10 21 21 14 18 10 21 23 14 11 16 16 CP (If the size calculated by this function is wrong, then you can always call ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setMinimumSize) K
42 /Times-Roman SF
14 21 18 10 23 14 10 CP ( to set) K
323 1779 m
11 11 12 21 23 14 21 23 11 21 14 16 14 21 21 23 18 11 21 35 23 18 11 23 14 11 14 23 16 14 23 23 21 11 21 23 14 11 16 23 11 21 21 14 18 11 35 23 35 14 23 14 35 11 21 23 14 CP (the minimum size of the control to some specific value.  ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
42 /Times-Roman SF
16 14 10 23 21 14 14 21 21 10 21 23 10 14 23 23 11 14 14 14 32 11 CP ( will not be called if) K
323 1729 m
17 23 23 14 14 14 21 21 17 23 23 17 21 21 14 18 17 14 14 21 14 14 23 23 21 17 23 21 17 14 21 18 17 21 23 21 23 17 23 23 23 CP (you have set an explicit size by calling ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setMinimumSize) K
42 /Times-Roman SF
17 21 21 25 17 17 12 CP (.  See ) K
23 23 17 16 21 14 23 21 23 30 CP (Chapter 15) K
17 12 CP (, ) K
42 /Font500 SF
21 CP (\223) K
42 /Times-Roman SF
12 18 21 18 21 23 23 21 30 CP (Canvases,) K
42 /Font500 SF
21 CP (\224) K
42 /Times-Roman SF
16 23 16 17 CP ( for) K
323 1679 m
12 14 23 23 23 21 14 10 18 21 23 23 21 21 10 14 23 23 23 21 10 23 23 14 14 21 35 16 23 16 23 14 10 21 16 23 35 CP (more information about canvas layout.) K
54 /Times-Bold SF
323 1558 m
21 24 27 30 27 30 39 13 24 24 15 30 13 45 30 45 15 30 15 51 13 30 24 30 54 12 21 24 21 27 27 30 27 39 13 27 30 15 27 18 15 18 27 39 CP (Notifying Canvases When Minimum Size Changes) K
42 /Times-Roman SF
323 1473 m
20 21 14 21 14 16 23 23 16 23 23 21 20 23 21 20 23 23 14 23 14 23 23 23 25 CP (Supplying an appropriate ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
42 /Times-Roman SF
18 14 14 19 14 23 23 19 23 21 14 19 23 14 16 21 23 23 16 23 20 23 21 21 20 18 21 23 23 21 21 20 21 20 23 18 20 12 23 23 14 14 21 23 23 16 20 CP ( function, so a canvas can properly lay out its) K
323 1423 m
23 14 14 23 21 21 23 14 23 23 28 13 15 12 21 14 14 14 21 23 15 21 23 14 15 16 14 21 23 15 23 14 23 23 15 18 14 15 12 18 14 23 16 14 23 23 21 15 35 23 14 18 23 21 15 16 23 23 23 15 16 23 15 21 23 23 15 18 14 15 35 21 23 14 15 16 23 15 21 23 23 15 16 14 15 12 23 21 16 23 14 14 23 21 CP (children, if one of them is one of your custom controls, is only half the battle.  You need to) K
323 1373 m
35 23 14 18 23 21 12 16 23 23 23 13 16 23 13 21 21 14 18 13 35 23 35 14 23 14 35 13 21 23 14 13 23 21 23 32 13 12 23 21 16 23 14 14 23 21 13 18 14 14 13 16 23 13 14 23 23 23 21 14 13 21 23 14 13 21 14 21 23 23 23 13 23 14 13 18 21 23 23 21 21 13 21 23 14 13 23 16 14 14 23 23 CP (notify the canvas to update the layout of its children, when the minimum size of your custom) K
323 1323 m
26 21 23 14 26 23 23 14 14 14 21 21 26 23 23 26 23 18 26 23 23 26 23 23 28 24 26 12 23 21 23 23 21 23 21 26 18 21 23 26 14 23 16 14 23 23 21 CP (control has changed.  You do so by calling the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setLayoutDistored) K
42 /Times-Roman SF
21 23 14 25 23 14 14 32 25 23 23 14 14 21 23 23 16 25 CP ( function with the) K
[37 0 0 42 0 0] /Courier MF
323 1273 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (minimumSizeChanged) K
42 /Times-Roman SF
21 14 23 35 21 18 16 21 23 14 16 16 23 16 23 23 14 14 21 14 23 21 35 21 14 23 35 14 16 21 23 14 16 35 23 16 16 17 21 14 23 35 21 23 21 17 21 23 23 17 18 14 17 21 16 21 32 17 17 12 23 23 17 23 21 14 16 17 CP ( flag on.  Here is one example from the implementation of the sample) K
[37 0 0 42 0 0] /Courier MF
323 1223 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
12 14 23 16 14 23 23 21 10 CP ( control.) K
[37 0 0 33 0 0] /Courier MF
398 1175 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet &ValueSet :: setDimensions \( const ISize &dimensions \)) K
398 1141 m
22 22 22 CP (  {) K
398 1108 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 1075 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ctlData = ValueSet::controlData\( dimensions \);) K
398 1042 m
22 22 22 22 22 22 22 22 22 22 22 CP (  WNDPARAMS) K
398 1009 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    parms = { WPM_CTLDATA,) K
398 975 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 942 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 909 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 876 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 843 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 809 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              \(char*\)ctlData };) K
398 776 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( sendEvent\( WM_SETWINDOWPARAMS, &parms \) == 0 \)) K
398 743 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ITHROWGUIERROR\( "WM_SETWINDOWPARAMS" \);) K
398 710 m
22 22 22 22 22 22 CP (  else) K
398 677 m
22 22 22 22 CP (    ) K
[37 0 0 33 0 0] /Courier-Bold MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setLayoutDistorted\( minimumSizeChanged, 0 \);) K
[37 0 0 33 0 0] /Courier MF
398 643 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 610 m
22 22 22 CP (  }) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (784) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 15 15
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 429 m
2085 429 l
2085 1697 l
323 1697 l cp
clip n msbeforeclp SM
n
965 1513 m
965 1513 2083 1603 box
cp
0.89801 g
e
0 g
n
323 1513 m
323 1513 967 1603 box
cp
0.89801 g
e
0 g
42 /Times-Bold SF
338 1635 m
18 25 23 14 16 21 25 25 28 10 16 21 25 10 21 25 14 23 28 9 10 12 23 16 23 23 10 21 14 25 23 26 CP (Table 30-2.  Value Set Functions) K
46 /Times-Bold SF
338 1544 m
22 25 25 20 20 22 45 CP (Message) K
979 1544 m
20 28 25 15 17 22 28 28 30 11 21 22 28 40 22 45 CP (Member Functions) K
37 /Times-Bold SF
338 1465 m
23 20 12 16 23 18 33 12 29 9 14 18 23 9 18 23 12 20 26 CP (Value Set Dimension) K
[37 0 0 33 0 0] /Courier MF
338 1412 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (WM_QUERYWINDOWPARAMS) K
979 1412 m
22 22 22 22 22 22 22 22 22 22 CP (dimensions) K
979 1378 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (numberOfRows) K
979 1345 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (numberOfColumns) K
338 1301 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (WM_SETWINDOWPARAMS) K
979 1301 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setDimensions) K
338 1257 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_QUERYMETRICS) K
979 1257 m
22 22 22 22 22 22 22 22 CP (itemSize) K
979 1223 m
22 22 22 22 22 22 22 22 22 22 22 CP (itemSpacing) K
338 1179 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_SETMETRICS) K
979 1179 m
22 22 22 22 22 22 22 22 22 22 22 CP (setItemSize) K
979 1146 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setItemSpacing) K
37 /Times-Bold SF
338 1082 m
23 20 12 14 18 18 12 18 23 9 14 18 23 9 18 23 12 20 26 CP (Value Set Selection) K
[37 0 0 33 0 0] /Courier MF
338 1029 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_QUERYSELECTED) K
979 1029 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (hasSelection) K
979 995 m
22 22 22 22 22 22 22 22 22 CP (selection) K
979 962 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (selectedItem) K
979 929 m
22 22 22 22 22 22 22 22 22 22 22 CP (selectedRow) K
979 896 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (selectedColumn) K
338 851 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_SELECTITEM) K
979 851 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (setSelection) K
37 /Times-Bold SF
338 787 m
23 20 12 14 20 12 23 23 12 23 20 37 9 33 18 14 16 9 14 18 23 9 18 23 12 20 26 CP (Value Set Item Manipulation) K
[37 0 0 33 0 0] /Courier MF
338 734 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_QUERYITEM) K
979 734 m
22 22 22 22 CP (item) K
338 690 m
22 22 22 22 22 22 22 22 22 22 CP (VM_SETITEM) K
979 690 m
22 22 22 22 22 22 22 CP (setItem) K
979 657 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setItemContents) K
338 612 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_QUERYITEMATTR) K
979 612 m
22 22 22 22 CP (item) K
338 568 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (VM_SETITEMATTR) K
979 568 m
22 22 22 22 22 22 22 CP (setItem) K
979 535 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setItemContents) K
979 502 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (setItemStyle) K
n
323 485 m
323 485 2082 488 box
cp
e
n
323 596 m
323 596 2082 599 box
cp
e
n
323 640 m
323 640 2082 643 box
cp
e
n
323 718 m
323 718 2082 721 box
cp
e
n
965 485 m
965 485 968 761 box
cp
e
n
323 762 m
323 762 2082 765 box
cp
e
n
323 835 m
323 835 2082 838 box
cp
e
n
323 879 m
323 879 2082 882 box
cp
e
n
965 835 m
965 835 968 1056 box
cp
e
n
323 1057 m
323 1057 2082 1060 box
cp
e
n
323 1130 m
323 1130 2082 1133 box
cp
e
n
323 1207 m
323 1207 2082 1210 box
cp
e
n
323 1285 m
323 1285 2082 1288 box
cp
e
n
323 1329 m
323 1329 2082 1332 box
cp
e
n
965 1130 m
965 1130 968 1439 box
cp
e
n
323 1440 m
323 1440 2082 1443 box
cp
e
n
2079 485 m
2079 485 2082 1603 box
cp
e
n
323 1513 m
323 1513 2082 1516 box
cp
e
n
965 1513 m
965 1513 968 1603 box
cp
e
n
323 485 m
323 485 326 1603 box
cp
e
n
323 1604 m
323 1604 2082 1607 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 428 l
323 428 l cp
323 1698 m
2085 1698 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
62 /Times-Bold SF
323 2702 m
24 34 31 17 21 28 34 34 38 15 17 31 27 21 34 31 45 15 52 31 21 24 34 45 CP (Custom Control Functions) K
42 /Times-Roman SF
323 2614 m
23 14 21 23 14 14 10 14 14 14 32 10 18 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 12 21 23 14 23 23 16 23 10 14 18 23 35 10 18 14 23 16 14 23 23 21 10 14 14 21 10 18 23 23 14 14 21 23 23 16 10 23 16 21 23 23 21 14 18 10 21 23 14 10 23 14 10 23 23 14 14 14 23 23 21 10 23 16 CP (In addition to the standard functions all controls must provide, your custom controls will likely) K
323 2564 m
14 23 23 10 14 14 14 32 10 21 39 9 10 12 14 23 16 14 23 23 21 10 16 23 23 23 10 23 14 10 21 23 23 14 23 23 10 18 21 21 14 23 16 21 18 10 21 23 14 23 23 16 23 10 14 21 23 14 10 18 23 23 14 14 21 23 23 16 10 16 21 23 35 21 35 10 16 23 10 14 21 18 10 16 21 23 14 23 23 21 11 21 23 21 23 CP (have another set of member functions that provide services unique to your control.  We will not) K
323 2515 m
16 23 23 23 15 23 21 23 23 14 18 21 23 15 21 23 21 23 15 23 23 23 15 21 35 23 18 21 16 23 15 21 32 15 12 23 21 21 14 18 23 16 15 15 12 18 14 23 16 14 23 23 21 15 35 23 14 18 23 21 15 23 23 14 18 21 23 15 23 14 15 32 23 23 15 23 23 23 15 14 14 21 14 15 23 14 15 23 16 14 CP (try to tell you how to design custom controls.  Instead, we presume you have designed your) K
323 2465 m
14 14 14 32 13 21 39 13 14 12 21 16 23 23 21 21 23 16 23 14 32 23 23 23 14 32 14 16 21 23 21 23 21 39 14 23 23 14 14 21 14 23 21 18 21 16 25 14 21 14 21 14 23 14 23 21 14 23 21 35 21 14 23 35 14 14 18 14 14 14 14 14 23 18 14 14 23 16 14 23 23 21 14 35 23 14 18 23 21 CP (custom control so it is implemented via a Presentation Manager window procedure.  We will) K
323 2415 m
14 23 16 14 23 23 21 11 35 23 14 18 23 21 11 16 23 23 23 12 23 14 12 18 32 23 23 23 14 32 12 21 18 23 23 14 12 23 23 12 23 21 14 16 23 23 23 23 18 12 18 23 23 14 14 21 23 23 16 12 21 23 14 12 21 14 21 14 23 18 23 21 21 23 21 12 23 14 12 32 23 23 12 21 23 14 16 21 18 21 23 CP (describe how to encapsulate the functions supported by those windows in your custom control) K
323 2365 m
12 18 18 21 14 21 10 26 26 30 CP (C++ class.) K
323 2288 m
21 23 14 35 16 21 14 21 23 13 23 25 12 13 12 23 18 21 14 13 18 14 23 14 13 23 18 14 14 23 35 23 21 21 21 13 23 14 13 32 23 23 13 16 23 13 21 14 23 35 21 23 21 13 23 23 23 23 13 21 13 18 21 23 14 23 23 16 23 13 14 23 16 14 23 23 21 14 14 21 18 14 21 23 14 21 23 14 21 23 28 CP (The value set control provides a good example of how to accomplish this task.  To determine) K
323 2239 m
21 16 23 23 21 18 23 23 14 14 21 23 23 16 21 16 21 23 35 21 35 21 14 21 23 32 CP (what member functions our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
16 23 20 14 21 18 20 21 23 14 20 14 21 20 23 23 23 14 21 23 14 23 35 14 18 21 21 32 21 12 21 23 14 23 23 16 23 21 23 14 23 23 23 18 21 18 18 21 14 21 21 CP ( class should provide, we simply look at the set of) K
323 2189 m
23 21 23 18 14 23 21 23 21 23 16 21 23 21 23 21 39 23 23 23 14 14 21 14 23 21 18 21 16 25 CP (Presentation Manager events a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (WC_VALUESET) K
42 /Times-Roman SF
16 23 22 14 14 23 23 21 14 14 14 14 14 23 21 23 14 18 23 14 23 16 21 14 16 32 21 23 12 18 14 16 23 23 23 23 18 23 32 23 23 23 14 32 23 CP ( window supports.  After just a little bit of) K
323 2139 m
18 21 14 16 23 23 21 14 21 21 13 21 21 16 23 14 13 23 14 23 14 13 23 23 23 16 23 13 21 32 13 23 21 14 23 32 13 12 18 23 23 14 14 21 23 23 16 14 23 23 14 32 23 14 14 23 16 14 21 23 14 14 23 14 14 32 14 23 23 14 21 35 23 21 14 23 21 21 14 21 32 14 12 18 14 18 23 14 21 23 21 CP (analysis, we can come up with the following functions, which we group into three categories) K
323 2089 m
12 23 14 12 23 23 23 23 16 CP (found in ) K
23 16 23 23 11 21 14 23 21 25 CP (Table 30-2) K
16 23 23 11 16 23 11 18 23 23 14 14 21 23 23 16 11 16 21 23 35 21 35 11 21 16 23 35 11 16 23 11 21 23 23 11 21 23 14 16 21 23 11 21 32 11 12 18 14 23 21 23 21 11 21 18 21 23 14 11 16 23 11 23 21 21 21 11 16 23 25 11 11 12 CP (.  For each of these events, we define one or more member functions of our) K
[37 0 0 42 0 0] /Courier MF
323 2039 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
12 26 26 30 10 35 23 16 16 10 21 21 14 23 16 21 18 10 21 23 14 10 23 14 10 18 18 21 21 21 21 10 23 23 23 10 21 23 14 23 23 16 23 10 23 14 10 18 18 21 14 21 10 CP ( class to provide you access to the service from C++.) K
323 1963 m
12 23 16 21 32 16 23 16 14 23 23 14 21 16 14 18 12 18 14 12 18 21 14 16 23 23 21 14 21 21 13 23 32 14 13 14 18 16 14 16 13 21 23 14 13 23 14 13 18 23 23 14 14 21 23 23 16 13 21 23 14 13 16 23 13 23 23 14 14 21 14 23 21 35 21 14 23 35 14 13 23 23 21 13 23 23 14 18 21 23 13 21 23 28 CP (The design and implementation of the functions in the first two categories is straightforward.) K
323 1913 m
14 23 21 18 21 16 25 11 23 21 14 21 14 21 23 18 18 21 11 21 23 14 12 23 23 12 18 16 21 14 21 35 21 16 21 23 12 14 23 21 23 21 12 21 23 14 12 23 14 12 23 23 23 23 18 21 16 16 23 21 12 23 23 14 14 21 23 23 16 12 23 21 21 21 12 16 23 16 12 18 14 23 21 35 23 23 15 21 12 21 23 28 CP (The arguments for each function correspond to the event parameters on the associated Presen-) K
323 1863 m
14 23 21 23 21 12 21 23 14 12 18 21 23 21 14 21 35 12 23 23 14 14 21 23 23 16 12 16 21 23 35 21 35 12 21 23 14 12 35 23 16 16 12 21 23 14 21 23 12 23 16 23 14 21 16 13 21 23 28 12 13 12 14 23 21 23 21 13 32 23 23 23 14 32 13 16 21 23 21 23 21 39 13 23 23 14 14 21 14 CP (tation Manager window event.  The return value from the member function matches the event) K
323 1813 m
21 23 14 21 16 23 21 23 23 14 14 21 14 23 21 35 21 14 23 35 14 21 21 23 14 21 18 21 23 14 23 21 14 16 21 21 12 23 23 14 23 23 21 35 21 18 14 23 14 21 18 32 23 23 18 21 21 14 23 35 21 23 21 22 23 23 14 32 23 14 14 23 16 22 21 23 28 21 22 12 14 14 23 18 21 16 CP (result.  The following example shows this mapping.  It gives the implementation of the) K
[37 0 0 42 0 0] /Courier MF
323 1763 m
22 22 22 22 22 22 22 22 22 22 CP (dimensions) K
42 /Times-Roman SF
10 23 23 21 10 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (setDimensions) K
42 /Times-Roman SF
10 16 23 10 18 23 23 14 14 21 23 23 16 10 16 21 23 35 21 35 10 CP ( member functions of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
12 CP (.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (785) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 16 16
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ISize ValueSet :: dimensions \( \) const) K
398 2691 m
22 22 22 CP (  {) K
398 2658 m
22 22 22 22 22 22 22 CP (  ISize) K
398 2624 m
22 22 22 22 22 22 22 22 22 22 22 CP (    result;) K
398 2591 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 2558 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ctlData = ValueSet::controlData\( ISize\( 0, 0 \) \);) K
398 2525 m
22 22 22 22 22 22 22 22 22 22 22 CP (  WNDPARAMS) K
398 2492 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    parms = { WPM_CTLDATA,) K
398 2458 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 2425 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 2392 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 2359 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 2326 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              \(\(VSCDATA*\)\(char*\)ctlData\)->cbSize,) K
398 2292 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              \(char*\)ctlData };) K
398 2259 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( sendEvent\( WM_QUERYWINDOWPARAMS, &parms \) != 0 \)) K
398 2226 m
22 22 22 22 22 CP (    {) K
398 2193 m
22 22 22 22 22 22 22 22 22 22 22 CP (    VSCDATA) K
398 2160 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (     *p = \(VSCDATA*\)\( parms.pCtlData \);) K
398 2126 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    result = ISize\( p->usColumnCount, p->usRowCount \);) K
398 2093 m
22 22 22 22 22 CP (    }) K
398 2060 m
22 22 22 22 22 22 CP (  else) K
398 2027 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ITHROWGUIERROR\( "WM_QUERYWINDOWPARAMS" \);) K
398 1993 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return result;) K
398 1960 m
22 22 22 CP (  }) K
398 1894 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet &ValueSet :: setDimensions \( const ISize &dimensions \)) K
398 1861 m
22 22 22 CP (  {) K
398 1827 m
22 22 22 22 22 22 22 22 22 CP (  IString) K
398 1794 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ctlData = ValueSet::controlData\( dimensions \);) K
398 1761 m
22 22 22 22 22 22 22 22 22 22 22 CP (  WNDPARAMS) K
398 1728 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    parms = { WPM_CTLDATA,) K
398 1695 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 1661 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 1628 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 1595 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 1562 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              0,) K
398 1529 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (              \(char*\)ctlData };) K
398 1495 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( sendEvent\( WM_SETWINDOWPARAMS, &parms \) == 0 \)) K
398 1462 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ITHROWGUIERROR\( "WM_SETWINDOWPARAMS" \);) K
398 1429 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 1396 m
22 22 22 CP (  }) K
42 /Times-Roman SF
323 1334 m
23 14 23 23 21 11 23 14 23 23 23 18 11 23 23 23 11 12 18 14 23 21 23 21 11 16 21 23 21 23 21 39 11 23 23 14 14 21 14 23 21 18 21 16 25 11 18 23 23 14 16 21 23 11 21 23 14 11 16 23 16 12 14 16 23 23 23 23 18 12 21 14 18 21 23 12 21 23 14 12 23 14 12 23 23 14 14 14 23 23 21 12 23 16 CP (In addition to the basic support for the various Presentation Manager events, you should apply) K
323 1285 m
18 14 23 16 14 23 23 21 12 35 23 14 18 23 21 12 16 23 23 23 12 23 23 14 35 35 21 16 23 23 16 23 12 21 23 21 35 12 23 14 12 18 21 23 23 14 23 23 21 21 14 12 23 23 14 18 21 23 13 23 16 21 16 23 14 14 13 18 18 21 14 21 13 26 26 30 13 14 21 23 23 14 14 23 21 23 23 23 21 CP (conventional C++ class library design techniques to make programming your custom controls) K
323 1235 m
16 14 21 23 23 14 14 14 23 23 21 16 23 21 16 23 21 23 23 21 16 21 23 21 23 16 21 32 16 12 21 14 23 35 21 23 21 16 23 21 16 18 32 14 16 12 14 21 14 18 21 21 CP (easier.  As an example, we have added an additional ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 CP (hasSelection) K
42 /Times-Roman SF
16 23 23 15 23 14 16 23 23 14 14 21 23 23 16 16 16 21 23 35 21 35 16 CP ( member function to our) K
[37 0 0 42 0 0] /Courier MF
323 1185 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
16 21 16 18 23 16 23 14 21 16 16 23 23 14 14 21 23 23 16 16 18 14 23 28 15 17 12 14 23 16 14 23 23 21 17 CP ( control.  This function returns a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (Boolean) K
42 /Times-Roman SF
21 16 18 21 23 16 14 21 18 16 21 23 14 21 23 16 21 23 14 16 16 21 23 14 21 23 32 16 16 23 16 16 23 14 21 21 14 23 23 14 16 CP ( indicator of whether the value set has a) K
323 1135 m
17 21 14 18 21 23 17 21 23 14 18 23 23 14 18 23 18 16 23 18 23 21 21 14 18 23 14 18 23 23 14 14 21 23 23 16 18 18 14 23 14 18 14 14 21 21 18 23 21 21 18 18 16 21 18 32 18 18 12 35 21 14 14 18 23 21 14 21 21 14 21 18 18 23 14 14 23 21 16 16 23 21 CP (currently selected item.  Users can call this function instead of using the basic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (selection) K
42 /Times-Roman SF
323 1085 m
17 18 14 21 23 23 21 17 14 14 17 16 14 17 21 21 18 17 23 14 17 21 23 14 21 23 17 23 16 23 14 21 16 18 18 14 14 18 23 23 14 14 18 21 14 18 23 23 21 18 12 23 23 14 14 21 23 23 16 CP (function, and testing its return value to see if it equals ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (IPoint\(0,0\)) K
42 /Times-Roman SF
21 18 23 17 23 18 14 21 17 23 14 23 23 23 18 17 23 23 28 15 17 12 CP (.  You should also use) K
323 1036 m
14 23 16 14 23 23 21 13 35 23 14 18 23 21 14 16 23 23 23 14 16 23 14 21 18 23 14 23 16 14 14 23 35 14 18 14 23 14 14 12 21 14 23 21 21 14 14 23 23 21 14 21 16 21 23 32 14 12 18 14 23 21 35 23 23 15 21 14 14 14 23 21 16 21 23 14 23 23 21 14 23 23 14 23 21 23 14 16 21 23 23 CP (overloading and default arguments, where applicable, to simplify use of your custom control) K
323 986 m
12 18 18 21 14 21 CP (class.) K
[37 0 0 42 0 0] /Courier MF
323 909 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
16 23 19 21 23 14 14 21 21 14 23 23 19 21 23 32 19 19 12 23 21 14 21 21 14 14 23 35 23 21 19 21 16 23 35 19 21 14 14 14 14 14 19 21 19 21 16 21 20 18 23 23 14 14 21 23 23 16 20 14 21 18 20 23 23 21 20 23 16 21 23 23 20 35 21 14 14 20 18 CP (s item query and set functions are a little more complicated.  One objective of) K
323 859 m
23 14 12 18 23 12 18 21 16 14 23 23 21 16 12 18 14 23 28 11 12 12 23 23 14 14 21 21 16 14 18 23 21 13 16 23 13 14 21 23 21 14 13 21 23 14 13 21 18 14 21 16 13 23 14 13 18 14 13 18 14 21 21 14 23 23 13 26 26 30 13 18 21 13 18 32 23 23 23 14 32 13 23 23 14 14 21 14 23 18 23 21 21 23 21 CP (encapsulating windows as C++ objects is to raise the level of abstraction.  This requires us to) K
323 809 m
18 14 21 21 14 23 23 19 21 18 21 23 14 19 21 23 14 23 19 21 32 20 12 20 16 21 18 18 21 21 21 23 20 23 21 23 32 20 12 23 23 21 20 12 18 14 21 21 14 23 23 20 35 16 23 16 20 23 14 20 21 14 21 23 20 23 21 14 21 14 21 16 20 16 23 20 18 14 21 18 20 21 23 14 23 35 23 21 CP (combine sets of related data to form objects, and, when necessary, we give these objects) K
323 760 m
15 16 23 23 15 16 23 25 15 15 12 21 14 21 23 15 21 23 14 15 23 14 15 23 14 23 23 21 15 23 21 21 15 23 23 23 15 23 14 14 14 21 23 23 14 14 21 23 23 16 CP (functionality you can apply to the data.  For our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
21 14 21 16 21 23 21 18 14 21 23 14 14 21 23 14 23 35 23 21 14 21 32 15 12 14 23 16 14 23 23 21 15 CP ( control, we combine the separate) K
323 710 m
14 23 16 14 23 23 21 24 16 21 23 21 23 21 39 24 23 23 14 14 21 14 23 21 18 21 16 25 24 21 23 14 24 23 21 14 23 32 24 12 18 21 14 14 18 14 16 21 14 21 21 16 21 23 21 24 21 14 23 23 14 16 14 14 21 24 35 21 14 14 24 23 23 21 25 14 23 21 14 23 23 21 25 35 21 14 14 CP (item content and item attribute characteristics, which the Presentation Manager control) K
323 660 m
10 18 18 21 14 21 10 23 21 14 18 21 23 10 21 23 14 10 23 14 23 14 10 12 18 14 16 23 23 23 23 18 CP (supports, into the nested class ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::Item) K
42 /Times-Roman SF
12 CP (.) K
323 583 m
17 21 23 14 17 23 23 17 23 21 23 14 23 23 16 23 17 12 23 23 14 14 21 21 16 14 18 23 21 17 14 21 23 23 14 14 14 23 23 21 17 21 23 14 17 16 23 18 21 21 23 21 23 23 21 18 23 23 21 18 21 18 18 32 CP (As a consequence of the additional abstraction, provided by the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSet::Item) K
42 /Times-Roman SF
21 23 14 17 12 18 18 21 14 21 17 CP ( class, the) K
[37 0 0 42 0 0] /Courier MF
323 533 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
16 21 23 21 23 21 39 18 23 23 14 14 21 14 23 21 18 21 16 25 18 21 23 14 18 23 21 14 21 35 18 14 23 23 18 23 23 18 18 35 21 14 14 19 21 14 21 14 23 23 14 23 21 35 19 14 21 23 14 19 18 23 23 14 14 21 23 23 16 19 16 21 23 35 21 35 19 CP ( member functions that manipulate items do not match the Presentation Manager) K
323 484 m
20 16 21 14 23 35 14 18 20 21 23 14 20 23 23 20 18 21 20 23 14 21 18 23 14 21 20 18 21 21 21 14 14 23 23 21 18 14 23 21 23 21 CP (events quite as closely as do the simpler ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
20 21 23 14 20 12 21 14 23 35 21 23 21 20 16 23 25 20 20 12 18 23 23 14 14 21 23 23 16 20 CP ( functions.  For example, the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (setItem) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (786) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 17 17
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
12 18 23 23 14 16 21 23 12 21 23 28 11 12 12 21 14 23 14 18 12 35 21 14 14 12 21 23 14 12 23 23 21 12 18 14 23 21 14 23 23 21 12 35 21 14 14 12 21 23 14 12 23 14 23 23 13 14 21 18 13 14 14 14 32 13 23 23 14 14 21 23 23 16 13 16 21 23 35 21 35 CP (member function will set both the item contents and the item style.  The various ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP (setContents) K
42 /Times-Roman SF
323 2660 m
23 14 14 14 21 18 14 21 23 14 14 18 16 14 16 14 14 18 23 35 14 21 14 23 23 14 16 14 14 21 14 21 23 28 13 14 12 21 14 23 23 14 16 14 14 21 14 35 21 14 14 14 21 23 14 14 23 23 14 14 14 21 18 21 16 15 16 23 15 21 16 21 21 15 21 23 21 14 15 18 23 23 14 14 21 23 23 16 15 16 21 23 35 21 35 CP (member functions take care of resetting the item attribute.  The attribute must first be set to) K
323 2610 m
12 23 23 14 18 18 21 10 14 14 14 32 10 21 32 10 18 14 23 21 14 23 23 21 10 16 23 10 21 23 23 14 10 21 23 14 10 21 14 21 21 14 23 23 14 CP (indicate the type of contents we will assign.) K
323 2533 m
12 21 23 14 12 16 23 12 23 23 14 14 21 14 23 21 35 21 14 23 35 14 12 21 23 14 12 18 14 12 32 23 14 21 30 CP (Below is the implementation of the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
21 12 23 14 12 35 21 14 14 12 23 21 12 16 23 12 18 14 23 21 14 23 23 21 12 21 23 14 12 14 21 18 12 23 21 14 23 32 12 12 18 23 23 14 14 21 23 23 16 12 CP ( functions, which set the contents of an item to a) K
323 2483 m
26 26 30 12 21 23 14 13 23 23 13 23 21 23 14 23 23 16 23 13 21 23 14 21 23 13 21 23 14 13 21 21 18 13 23 14 13 21 14 23 21 13 21 23 13 23 14 23 23 23 18 13 23 23 28 11 13 12 21 14 14 16 13 21 21 16 23 23 18 21 16 13 21 13 35 23 16 16 13 23 21 23 21 23 14 13 23 21 35 14 14 23 CP (bitmap loaded from a resource file.  You should be able to see the value provided by the C++) K
323 2433 m
16 21 23 21 23 21 39 12 23 23 14 14 21 14 23 21 18 21 16 25 12 23 14 21 14 23 12 23 14 12 23 23 14 14 21 16 21 23 23 12 14 23 21 14 21 23 14 23 23 21 13 21 23 14 13 23 23 14 35 35 21 16 23 23 16 23 13 23 14 13 23 21 16 21 23 35 23 21 13 18 21 13 16 21 23 23 21 16 32 CP (wrapper as compared to programming the equivalent operation in plain Presentation Manager) K
323 2384 m
14 18 23 23 14 14 21 23 23 16 CP (functions:) K
[37 0 0 33 0 0] /Courier MF
398 2335 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
398 2302 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &ValueSet :: setItemContents \( unsigned long      row,) K
398 2268 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                unsigned long      column,) K
398 2235 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                const IResourceId &resId,) K
398 2202 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                ItemType           type \)) K
398 2169 m
22 22 22 CP (  {) K
398 2136 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  const IResourceLibrary) K
398 2102 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (   &resLib = resId.resourceLibrary\(\);) K
398 2069 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  switch \( type \)) K
398 2036 m
22 22 22 22 22 CP (    {) K
398 2003 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case bitmapItem:) K
398 1970 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      setItemContents\( row,) K
398 1936 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       column,) K
398 1903 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       resLib.loadBitmap\( resId.id\(\) \) \);) K
398 1870 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1837 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case iconItem:) K
398 1804 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      setItemContents\( row,) K
398 1770 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       column,) K
398 1737 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       resLib.loadIcon\( resId.id\(\) \) \);) K
398 1704 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1671 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    case textItem:) K
398 1638 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (      setItemContents\( row,) K
398 1604 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       column,) K
398 1571 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                       resLib.loadString\( resId.id\(\) \) \);) K
398 1538 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (      break;) K
398 1505 m
22 22 22 22 22 CP (    }) K
398 1471 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 1438 m
22 22 22 CP (  }) K
398 1372 m
22 22 22 22 22 22 22 22 CP (ValueSet) K
398 1339 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &ValueSet :: setItemContents \( unsigned long row,) K
398 1305 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                unsigned long column,) K
398 1272 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                                const IBitmapHandle &bmp \)) K
398 1239 m
22 22 22 CP (  {) K
398 1206 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  setItemAttributes\( row,) K
398 1173 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                     column,) K
398 1139 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                     IEventParameter2\( VIA_BITMAP, true \) \);) K
398 1106 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  setItem\( row,) K
398 1073 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (           column,) K
398 1040 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (           IEventParameter2\( bmp \) \);) K
398 1007 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  return *this;) K
398 973 m
22 22 22 22 CP (  } ) K
398 907 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (void ValueSet :: setItemAttributes) K
398 874 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                   \( unsigned long           row,) K
398 841 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                     unsigned long           column,) K
398 807 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                     const IEventParameter2 &attr \)) K
398 774 m
22 22 22 CP (  {) K
398 741 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IEventParameter1) K
398 708 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    coord\( row, column \);) K
398 674 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( sendEvent\( VM_SETITEMATTR,) K
398 641 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  coord,) K
398 608 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  attr \) == 0 \)) K
398 575 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ITHROWGUIERROR\( "VM_SETITEMATTR" \);) K
398 542 m
22 22 22 CP (  }) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (787) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 18 18
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
[37 0 0 33 0 0] /Courier MF
398 2724 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (void ValueSet :: setItem \( unsigned long           row,) K
398 2691 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           unsigned long           column,) K
398 2658 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                           const IEventParameter2 &contents \)) K
398 2624 m
22 22 22 CP (  {) K
398 2591 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  IEventParameter1) K
398 2558 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    coord\( row, column \);) K
398 2525 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  if \( sendEvent\( VM_SETITEM,) K
398 2492 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  coord,) K
398 2458 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (                  contents \) == 0 \)) K
398 2425 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    ITHROWGUIERROR\( "VM_SETITEM" \);) K
398 2392 m
22 22 22 CP (  }) K
42 /Times-Roman SF
323 2331 m
22 21 18 23 22 23 14 22 23 23 23 22 21 14 23 21 23 21 22 23 14 22 23 16 21 18 18 21 21 21 23 22 18 14 22 21 23 23 21 22 23 23 14 14 21 14 23 21 35 21 14 23 35 14 22 18 14 23 14 22 14 14 32 CP (All this implementation code is necessary to enable you to use ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
42 /Times-Roman SF
21 16 23 35 22 18 14 23 16 14 23 23 21 22 CP ( controls more) K
323 2281 m
14 14 23 21 35 21 14 21 14 18 10 21 14 23 35 14 18 10 21 23 14 10 23 23 14 18 23 10 23 21 35 14 14 23 10 21 10 14 21 18 10 23 14 10 23 23 23 10 18 14 14 35 16 21 23 10 14 16 10 10 12 20 14 14 23 21 14 23 21 23 23 23 21 CP (conveniently.  It permits you to set a bitmap using the simple statement:) K
[37 0 0 33 0 0] /Courier MF
398 2232 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (valueSet.setItemContents\( BITMAP_ID, ValueSet::bitmapItem \);) K
42 /Times-Roman SF
323 2176 m
12 14 18 21 23 23 21 16 10 21 14 23 35 14 18 10 18 14 23 14 10 18 21 23 18 14 14 23 35 23 21 21 21 10 14 21 18 10 21 23 14 21 23 10 21 23 14 10 32 23 23 10 32 23 23 23 10 23 14 10 21 23 21 23 10 14 23 23 10 23 14 23 23 32 10 23 23 23 10 12 14 21 18 23 10 21 10 18 32 CP (As a user, you would not have to know how the value set accomplishes this simple request.) K
79 /Times-Bold SF
323 2018 m
31 35 35 22 44 44 39 61 20 66 39 26 31 44 57 CP (Custom Handlers) K
42 /Times-Roman SF
323 1926 m
23 14 11 21 18 23 23 23 18 21 16 11 23 14 12 18 14 23 21 23 21 12 23 23 14 14 21 21 14 16 14 14 23 23 12 21 14 16 14 21 21 23 18 16 14 23 16 14 23 23 21 12 16 23 12 14 21 18 12 21 12 23 23 21 18 12 23 14 14 21 21 14 23 23 14 12 14 14 14 32 12 18 14 23 16 14 23 23 21 12 35 23 14 18 23 30 CP (Custom controls will typically send a set of control-specific notification events in response to) K
323 1876 m
23 23 23 14 32 23 23 14 21 23 14 16 21 18 21 23 14 14 14 14 32 14 23 23 14 14 21 21 18 14 18 14 23 28 13 14 12 23 23 14 23 18 15 23 23 21 15 12 18 21 18 18 21 16 23 15 23 21 23 15 12 18 23 21 14 14 21 15 21 18 23 23 35 15 18 21 15 23 21 23 18 15 14 23 23 23 14 15 16 21 18 23 CP (user input such as mouse clicks, key presses, and so on.  This section will describe how you) K
323 1826 m
23 23 14 14 21 21 14 16 14 14 23 23 20 21 18 23 23 14 20 21 14 21 14 23 18 23 21 21 23 21 20 23 14 20 18 21 18 18 21 14 21 20 14 23 21 23 21 20 23 23 21 20 16 21 14 23 23 21 23 20 35 23 14 18 23 21 21 14 23 21 35 21 14 23 35 14 21 23 23 21 21 23 23 14 18 21 23 CP (design and implement custom handler and event classes to encapsulate those notification) K
323 1777 m
16 21 14 23 23 21 23 14 35 23 14 18 23 21 14 21 18 21 23 14 14 35 23 16 16 14 21 23 14 16 21 23 14 23 21 23 14 14 23 21 21 14 18 16 21 35 35 21 16 23 23 16 25 14 14 12 35 21 23 14 14 16 23 14 23 23 14 18 18 21 21 23 16 23 15 21 23 14 15 23 23 21 15 18 14 23 21 23 21 CP (events and the processing of them.  Programmers can then derive from these custom handler) K
323 1727 m
21 23 14 14 16 23 14 21 18 23 14 16 23 14 14 21 14 14 23 14 14 18 14 23 21 23 21 14 14 23 16 14 23 23 21 14 35 23 14 18 23 21 14 21 23 14 14 18 18 21 21 23 16 23 14 23 23 21 15 12 18 23 23 14 14 21 23 23 16 15 14 21 23 14 16 14 23 15 21 23 14 16 16 21 23 23 15 12 18 21 18 18 21 14 21 CP (classes, override virtual functions, and process the custom control events to tailor use of the) K
323 1677 m
12 18 23 23 14 14 21 21 14 14 23 23 21 10 16 14 21 23 14 10 16 23 16 10 18 14 23 16 14 23 23 21 10 16 21 35 23 14 18 23 21 CP (customer controls for their applications.) K
323 1600 m
18 14 10 12 18 32 23 23 23 14 32 10 14 23 16 14 23 23 21 11 35 23 14 18 23 21 11 16 23 23 23 11 16 23 16 11 18 14 23 21 23 21 11 23 23 21 11 18 16 21 14 23 23 21 23 11 35 23 14 18 23 21 11 21 23 14 11 23 23 14 23 23 14 18 21 23 11 23 14 11 23 21 14 18 11 14 18 16 14 16 11 21 23 28 CP (The first step in designing the custom handlers and events for your custom control windows, is) K
323 1550 m
18 14 23 14 20 16 21 14 16 32 18 20 12 18 14 18 21 21 23 21 23 16 23 20 14 23 16 14 23 23 21 20 21 23 14 20 14 21 23 14 20 18 21 23 21 18 18 21 35 20 23 23 14 14 21 21 14 16 14 14 23 23 20 16 21 23 32 23 20 16 23 20 14 21 18 20 21 23 14 21 21 21 23 14 21 23 21 21 23 14 CP (to analyze the set of owner notification messages that the control broadcasts.  After this) K
323 1500 m
12 18 21 14 16 23 23 21 14 21 21 10 23 32 14 10 16 23 10 21 23 23 10 23 14 23 14 10 14 23 21 23 21 10 23 21 21 21 10 21 21 21 14 23 10 23 14 10 21 14 23 21 10 21 23 10 23 14 23 23 23 18 10 23 23 23 10 12 18 14 18 23 14 21 23 21 CP (analysis, you should be able to place each event into one of two categories.) K
361 1424 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 1424 m
23 21 14 23 32 14 12 18 14 23 21 23 21 14 16 21 14 14 35 14 18 15 23 14 15 12 14 21 14 14 35 14 18 15 23 16 21 23 15 14 18 21 21 14 15 14 21 15 16 23 15 12 14 21 21 14 14 23 21 23 14 15 21 16 21 15 14 21 23 14 15 18 14 23 21 23 21 15 23 23 14 14 21 21 14 16 14 14 23 32 CP (Notification events that are identical, or at least very similar, to similar events, which) K
436 1374 m
12 18 14 23 16 14 23 23 21 10 16 21 23 14 23 10 16 23 16 10 16 23 21 21 23 CP (occur for other controls.) K
361 1297 m
17 CP (\007) K
436 1297 m
12 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 14 10 21 14 16 14 21 21 23 18 10 18 14 23 21 23 21 10 23 23 14 14 21 21 14 16 14 14 23 32 CP (Notification events specific to your custom control.) K
323 1220 m
16 21 14 23 23 21 23 15 23 23 14 14 18 14 23 21 15 21 23 14 15 23 23 14 23 23 21 14 23 21 15 23 23 15 23 14 14 32 15 14 14 21 21 23 15 21 23 15 23 14 23 23 23 18 15 23 16 23 23 21 14 21 21 16 14 18 16 14 16 16 21 23 14 16 23 14 23 14 16 23 23 14 14 14 21 16 16 18 14 23 21 23 28 CP (Events falling into the first category should be dealt with by extending the existing handler) K
323 1170 m
21 23 28 19 20 12 18 14 23 16 14 23 23 21 20 23 23 14 14 18 14 23 21 20 21 23 14 20 16 23 16 20 18 14 23 21 23 21 20 21 18 23 23 14 20 21 14 21 14 23 18 23 21 21 23 21 20 23 23 21 21 16 14 21 20 23 21 14 23 32 20 12 18 21 18 18 21 14 21 21 14 23 21 23 21 21 23 23 21 CP (and event classes, which already encapsulate those events for the existing controls.  The) K
323 1121 m
12 35 23 16 16 12 18 18 21 14 21 12 32 21 23 12 21 12 21 23 14 16 21 23 12 23 14 12 23 23 23 13 21 16 14 23 23 21 16 13 14 14 14 32 13 14 21 18 13 23 23 23 21 21 18 CP (second set will require you to derive a new class from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 21 16 23 35 12 16 23 12 12 21 23 23 12 21 23 14 16 21 23 12 23 18 14 21 12 23 23 21 12 CP ( and also derive one, or more,) K
323 1071 m
10 35 23 16 16 10 16 18 21 16 18 18 21 14 21 10 32 21 23 CP (new class\(es\) from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 CP (IEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
323 994 m
18 14 14 19 16 23 19 18 14 18 23 14 21 23 21 19 23 16 21 23 14 35 14 14 21 16 23 19 21 23 14 19 35 16 23 16 16 21 23 19 23 23 21 19 18 21 23 21 18 18 21 35 19 14 23 16 14 23 23 21 19 14 21 18 19 21 23 14 21 23 19 21 23 14 19 14 21 19 23 23 23 14 20 18 23 20 14 21 28 CP (Let us look at the value set control messages and perform the preliminary analysis of its) K
323 944 m
23 14 11 23 23 23 11 14 14 35 16 21 23 11 14 14 14 32 11 14 21 23 14 11 18 21 18 18 21 14 21 11 14 23 21 23 21 11 23 23 21 11 16 21 14 23 23 21 23 11 16 23 11 14 21 18 11 21 11 14 21 11 21 23 14 16 16 21 12 14 14 14 32 12 21 39 11 12 12 18 14 23 21 23 21 12 23 23 14 14 21 21 14 16 14 14 23 23 CP (notification events.  We will arrive at a set of handler and event classes that will permit you to) K
323 894 m
14 21 18 12 21 23 14 21 23 12 21 12 14 21 23 14 12 18 14 23 21 23 21 13 23 23 14 14 21 21 14 16 14 14 23 23 13 21 14 21 16 21 23 21 18 13 23 21 14 13 21 16 21 13 21 16 21 23 28 12 13 12 18 14 23 21 23 21 13 21 18 21 23 14 13 16 23 13 23 23 14 14 23 23 21 23 13 21 23 14 13 16 23 14 14 21 14 CP (tailor the handling of these events.  There are ten separate notification events that a value set) K
323 845 m
23 14 23 21 18 23 23 14 23 16 21 23 23 21 23 14 14 14 32 23 21 39 22 23 12 23 23 14 14 21 14 23 23 14 23 21 35 23 14 21 21 16 14 23 23 23 14 14 32 23 14 21 21 23 23 21 18 21 23 14 23 16 23 23 16 14 21 23 23 12 14 21 23 21 32 23 32 24 24 12 18 21 23 18 18 14 CP (issues.  However, half of these deal with direct manipulation.  We will cover those in) K
323 795 m
23 23 18 16 21 14 23 21 23 30 CP (Chapter 21) K
18 12 CP (, ) K
42 /Times-Roman SF
21 CP CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\223) K
42 /Font300 SF
12 23 23 14 14 21 14 23 23 14 23 21 39 18 14 21 21 16 14 32 CP (Direct Manipulation.) K
42 /Font500 SF
21 CP (\224) K
42 /Font300 SF
18 18 CP (  ) K
23 16 23 23 18 21 14 23 21 25 CP (Table 30-3) K
17 21 23 14 17 23 23 17 23 21 18 21 23 17 12 18 14 23 21 23 21 18 21 23 14 16 18 18 14 18 14 14 18 CP ( lists five events, based on the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 CP (notifyCode) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
323 745 m
21 23 14 10 16 23 10 16 21 14 21 35 21 16 21 23 CP (parameter of the) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 CP ( WM_CONTROL) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 14 23 16 14 23 23 21 10 14 21 18 10 21 23 14 21 23 10 23 14 10 23 14 23 23 21 10 23 21 14 23 32 10 12 14 23 21 23 21 10 CP ( event, which apply to value set controls.) K
323 668 m
14 23 21 21 23 21 12 12 18 14 23 21 23 21 12 21 18 21 23 14 12 16 23 12 23 23 21 12 16 23 16 12 18 21 18 18 21 14 21 12 14 23 21 23 21 12 16 23 12 16 21 14 23 23 21 23 12 14 21 14 21 21 23 18 12 23 21 21 23 12 14 23 23 12 23 23 12 21 32 12 14 21 23 14 12 18 23 21 23 23 21 23 12 14 16 CP (It happens that we do not need special handler or event classes for any of these events, except) K
323 618 m
14 21 23 14 14 16 23 16 CP (for the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (VN_HELP) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 23 23 16 23 13 14 23 23 14 18 21 23 23 14 23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 14 16 21 18 32 14 21 23 14 14 23 23 23 23 23 14 14 23 21 23 28 14 14 12 14 23 21 23 21 14 23 23 14 14 21 21 14 16 14 14 23 23 14 CP ( notification event.  Even though the User Interface Library does not provide) K
323 569 m
11 18 14 14 11 12 18 18 21 14 21 11 14 23 16 14 23 23 21 11 14 21 18 11 21 23 14 21 23 11 23 32 23 11 18 14 14 CP (its own value set control class, its ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ISelectHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
11 23 23 21 11 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IFocusHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 21 21 14 21 23 11 23 14 16 21 23 23 16 23 11 18 14 21 21 14 23 23 11 CP ( objects properly detect) K
323 519 m
21 18 21 23 14 12 16 23 12 21 23 23 12 23 21 21 14 14 21 12 23 23 23 12 16 16 12 13 12 18 14 23 21 23 21 13 23 23 14 14 21 21 14 16 14 14 23 23 13 21 23 23 21 23 21 13 18 23 21 23 16 13 23 23 21 13 12 14 21 14 23 21 13 12 14 21 21 14 21 18 13 21 23 14 13 18 18 21 21 23 16 23 13 23 23 21 CP (and process the select, enter, and focus change notification events.  If you attach one of these) K
323 469 m
12 18 14 23 21 23 21 10 21 18 21 23 14 10 18 18 21 21 23 16 23 10 23 21 21 10 23 23 23 10 12 29 23 23 23 14 32 10 14 23 16 14 23 23 21 10 14 21 18 10 21 23 14 21 23 10 21 10 23 14 10 18 16 21 14 23 23 21 23 CP (handlers to a value set control window, you can process these events.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (788) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 19 19
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2163 m
2085 2163 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
n
690 2564 m
690 2564 2085 2654 box
cp
0.89801 g
e
0 g
n
323 2564 m
323 2564 693 2654 box
cp
0.89801 g
e
0 g
42 /Times-Bold SF
338 2686 m
18 16 25 21 23 30 10 25 23 14 16 23 21 14 16 14 16 23 32 10 16 21 25 10 21 25 14 23 28 9 10 12 23 16 23 23 10 21 14 25 23 26 CP (Table 30-3.  Value Set Notification Events) K
46 /Times-Bold SF
338 2596 m
22 28 25 35 11 25 17 15 17 25 35 CP (Notify Code) K
705 2596 m
28 25 15 17 28 15 22 22 20 22 35 CP (Description) K
[37 0 0 33 0 0] /Courier MF
338 2536 m
22 22 22 22 22 22 22 22 CP (VN_ENTER) K
37 /Times-Roman SF
705 2519 m
11 16 20 18 20 14 9 12 20 20 20 12 9 18 20 12 9 20 18 20 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 18 12 12 20 29 9 20 18 20 9 14 18 12 20 25 9 18 20 12 9 20 18 16 16 18 14 20 9 16 18 20 9 14 18 16 20 9 18 20 25 CP (The user has pressed the Enter key while the value set had the input focus.) K
[37 0 0 33 0 0] /Courier MF
338 2467 m
22 22 22 22 22 22 22 22 22 CP (VN_SELECT) K
37 /Times-Roman SF
705 2450 m
11 16 31 18 12 12 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 14 20 9 18 20 20 9 20 18 12 18 18 12 18 16 9 16 18 20 9 14 18 16 20 9 18 20 25 CP (The user has selected one of the value set items.) K
[37 0 0 33 0 0] /Courier MF
338 2398 m
22 22 22 22 22 22 22 22 22 22 22 22 CP (VN_KILLFOCUS) K
37 /Times-Roman SF
705 2381 m
11 27 20 20 20 12 29 9 14 18 20 12 20 20 18 9 20 12 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 31 20 14 14 9 16 20 18 20 14 9 12 20 20 20 12 9 18 20 12 9 20 18 20 18 12 12 29 16 9 16 18 20 9 14 18 16 20 9 18 20 25 CP (The user has switched the input focus from the value set to another window.) K
[37 0 0 33 0 0] /Courier MF
338 2329 m
22 22 22 22 22 22 22 22 22 22 22 CP (VN_SETFOCUS) K
37 /Times-Roman SF
705 2312 m
11 27 20 20 20 12 29 9 14 18 20 12 20 20 18 9 31 20 14 14 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 20 12 9 16 20 18 20 14 9 12 20 20 20 12 9 18 20 12 9 20 18 20 18 12 12 29 16 9 16 18 20 9 14 18 16 20 9 18 20 25 CP (The user has switched the input focus to the value set from another window.) K
[37 0 0 33 0 0] /Courier MF
338 2260 m
22 22 22 22 22 22 22 CP (VN_HELP) K
37 /Times-Roman SF
705 2243 m
11 16 20 18 20 14 9 12 20 20 20 12 9 18 20 12 9 20 18 20 9 12 18 16 9 18 20 12 18 20 9 18 20 12 9 18 12 12 20 29 9 14 20 23 14 9 20 18 20 9 20 12 18 29 9 18 20 12 9 20 18 16 16 18 14 20 9 16 18 20 9 14 18 16 20 9 18 20 25 CP (The user has pressed the Help key \(F1\) while the value set had the input focus.) K
n
323 2219 m
323 2219 2085 2222 box
cp
e
n
323 2288 m
323 2288 2085 2291 box
cp
e
n
323 2357 m
323 2357 2085 2360 box
cp
e
n
323 2426 m
323 2426 2085 2429 box
cp
e
n
323 2495 m
323 2495 2085 2498 box
cp
e
n
2081 2219 m
2081 2219 2084 2654 box
cp
e
n
323 2564 m
323 2564 2085 2567 box
cp
e
n
690 2219 m
690 2219 693 2654 box
cp
e
n
323 2219 m
323 2219 326 2654 box
cp
e
n
323 2655 m
323 2655 2085 2658 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2162 l
323 2162 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2123 m
21 14 23 23 14 14 14 16 40 13 14 12 18 14 23 21 23 21 14 23 23 14 14 21 21 14 16 14 14 23 23 14 23 14 21 23 14 18 18 21 21 23 16 23 14 23 14 14 23 23 23 14 21 14 23 21 23 21 14 23 14 15 16 21 14 23 23 21 23 15 21 15 23 23 14 18 21 23 15 23 14 15 23 21 21 23 15 23 23 15 21 39 CP (We do need to design a handler to enable you to process help notification events.  Writing a) K
323 2073 m
12 18 23 21 14 18 10 23 23 14 32 23 14 14 23 16 10 21 23 14 10 18 21 23 14 23 23 23 14 10 18 14 23 21 23 21 10 16 23 10 14 21 18 10 21 35 23 18 10 18 18 21 21 23 16 23 10 23 14 10 16 21 14 23 23 21 23 10 35 23 14 18 23 21 CP (custom handler to process some set of events involves the following steps.) K
361 1996 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 1996 m
10 21 14 21 14 16 23 23 16 23 23 21 10 21 23 14 10 35 23 16 16 10 23 23 14 23 14 16 21 32 CP (Deriving from the appropriate ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 14 23 23 14 21 16 14 18 10 21 23 14 16 21 23 10 23 23 23 10 12 20 14 14 21 23 18 32 10 10 12 18 18 21 14 21 10 21 18 21 23 10 CP ( base class.  Usually, you derive straight ) K
436 1947 m
12 35 23 16 16 CP (from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
11 21 11 21 14 21 21 16 21 12 14 14 14 32 12 21 32 12 12 21 14 23 35 21 23 21 12 18 14 23 14 12 23 16 12 12 12 CP (.  In this example, we will create a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
11 23 14 14 32 11 18 18 21 14 21 11 CP ( class with ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
436 1897 m
12 18 18 21 14 21 10 21 18 21 23 10 21 14 14 23 23 23 10 21 10 18 21 CP (as a public base class.) K
361 1820 m
17 CP (\007) K
436 1820 m
21 16 23 21 23 23 14 18 16 21 23 22 23 21 23 21 23 14 16 21 23 23 22 23 21 22 23 23 32 CP (Add an overloaded version of ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (startHandlingEventsFor) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 21 14 23 21 35 23 23 15 21 21 18 21 21 18 14 23 21 21 21 21 21 14 21 23 14 21 CP ( that accepts as argument a) K
436 1770 m
23 23 23 12 12 23 23 14 14 14 23 23 21 12 23 16 12 12 12 23 21 23 21 21 14 14 21 12 21 23 12 23 21 21 12 16 21 14 23 23 21 23 12 16 23 23 23 12 23 21 14 23 32 12 23 14 12 14 23 16 14 23 23 21 12 16 23 12 21 23 23 14 13 21 23 14 13 23 14 13 21 21 23 21 16 21 16 21 16 CP (reference to the type of control to which your handler can be attached.  In addition, you) K
436 1720 m
21 18 23 14 18 16 21 14 23 23 21 23 19 21 23 14 19 18 21 23 21 21 14 14 21 19 23 21 14 23 32 19 12 23 23 14 14 21 23 23 16 19 21 23 14 19 16 23 19 23 23 14 18 16 21 23 19 21 14 16 21 23 21 23 19 21 23 14 19 21 23 14 16 16 21 23 23 19 23 14 23 23 23 18 CP (should override the generic version of the function, which attaches the handler to a) K
436 1671 m
15 21 14 16 21 23 21 23 CP (generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 16 23 23 14 23 14 14 21 14 21 23 14 16 23 14 23 23 14 14 21 23 23 16 14 18 14 23 14 14 21 23 21 35 14 21 39 14 15 12 14 14 15 21 14 23 21 18 14 23 15 23 14 15 12 CP (, to disable it.  We make this function private in our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
436 1621 m
23 21 23 14 11 16 21 23 14 23 11 23 23 14 23 14 21 35 23 18 11 23 14 11 16 21 14 23 23 21 23 11 16 23 23 11 23 21 21 14 14 21 11 23 14 11 23 23 23 23 21 35 23 18 11 16 23 16 11 16 21 23 16 21 23 11 23 21 23 21 11 14 14 11 21 23 21 35 11 23 14 12 12 18 18 21 14 21 CP (class, to make it even harder for somebody to attach our handler to something other than) K
436 1571 m
10 21 CP (a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 14 23 16 14 23 23 21 10 CP ( control.) K
361 1494 m
17 CP (\007) K
436 1494 m
10 21 10 18 21 23 21 14 10 14 21 23 14 11 16 23 14 21 23 16 14 18 23 23 21 11 21 11 23 23 21 11 23 18 14 21 11 21 32 11 12 21 21 23 21 14 23 21 23 23 23 21 11 16 23 25 CP (For convenience, we also add a constructor that takes a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 23 14 10 21 21 23 14 25 10 10 12 14 23 21 35 23 23 15 21 10 18 21 10 CP ( as argument.  Since the) K
436 1444 m
11 21 11 16 23 11 21 18 23 11 23 23 35 35 23 21 11 14 18 23 35 CP (most common use of a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 21 14 14 21 10 23 14 21 14 21 14 23 21 35 35 14 10 23 23 21 10 12 21 23 23 10 21 14 21 21 16 21 10 23 14 10 23 23 23 10 16 23 16 10 18 14 11 CP ( is for you to create one, and immediately attach) K
436 1395 m
10 21 10 23 14 10 14 14 CP (it to a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 23 21 14 18 10 21 23 23 10 23 14 10 18 23 23 14 23 14 10 21 18 23 23 14 10 16 23 10 23 14 23 23 10 23 23 10 23 14 10 21 14 23 14 18 18 23 23 10 14 14 10 18 21 23 21 35 10 16 23 14 21 23 16 14 18 23 23 21 10 18 14 23 14 10 12 CP (, this constructor makes it possible to do both of those things in one step.) K
361 1318 m
17 CP (\007) K
436 1318 m
23 14 18 23 18 14 32 18 18 16 21 35 35 21 16 23 23 16 23 18 23 21 23 42 17 18 12 23 21 14 23 23 21 23 19 21 23 19 23 14 19 14 23 21 23 21 19 23 21 21 21 19 16 23 16 19 18 23 23 14 14 21 23 23 16 19 14 21 23 14 16 14 23 19 21 23 14 23 23 16 25 CP (Provide virtual functions for each event to be handled.  When programmers wish to) K
436 1268 m
21 18 21 23 14 30 21 23 14 16 16 21 23 23 31 23 14 23 35 14 18 31 23 21 23 14 31 12 23 23 14 14 23 23 21 23 31 14 23 21 23 21 31 21 14 16 14 21 21 23 18 16 23 23 14 14 21 21 14 14 23 23 21 31 16 14 21 23 14 31 14 23 21 35 21 14 23 35 14 CP (implement their application-specific event handling, they simply override these) K
436 1218 m
12 18 23 23 14 14 21 23 23 16 CP (functions.) K
361 1141 m
17 CP (\007) K
436 1141 m
11 21 23 14 11 21 23 14 16 16 21 23 23 11 14 18 23 35 11 23 23 23 11 12 20 14 14 23 21 14 16 23 23 35 14 11 14 18 23 39 CP (Most importantly, you must override the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (dispatchHandlerEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 23 32 10 14 21 21 14 21 23 10 23 14 10 23 23 14 14 21 23 23 16 10 CP ( function to detect when) K
436 1092 m
21 14 21 23 14 14 14 14 23 14 14 21 14 23 23 23 14 14 14 14 14 32 14 23 23 14 14 21 23 23 16 14 18 14 23 14 14 16 23 14 23 23 14 14 21 14 23 21 35 21 14 23 35 14 14 21 23 28 13 14 12 14 23 21 21 23 14 14 18 21 16 21 14 23 14 14 16 23 14 18 14 23 21 23 21 15 21 23 14 CP (the events of interest occur.  The implementation of this function will look a lot like a) K
436 1042 m
14 14 14 23 21 23 14 12 14 23 21 23 21 12 21 23 14 13 23 23 13 23 21 14 14 32 18 13 23 23 28 11 13 12 21 16 23 23 21 21 23 16 23 13 32 23 23 23 14 32 13 16 21 23 21 23 21 39 13 23 23 14 14 21 14 23 21 18 21 16 25 13 14 21 23 23 14 14 23 21 23 23 23 21 CP (conventional Presentation Manager window procedure.  You switch on the event identi-) K
436 992 m
15 21 15 18 14 15 14 14 15 16 14 15 12 21 23 23 21 15 23 23 14 14 21 21 14 16 14 14 23 23 15 21 23 14 15 23 23 21 15 12 14 21 14 16 CP (fier, and the notification code, if it is a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 CP (WM_CONTROL) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 21 21 14 23 16 14 15 12 14 23 21 23 21 15 23 23 14 14 21 21 14 16 14 14 23 23 15 16 21 23 32 23 15 CP ( owner notification event.  In each) K
436 942 m
21 14 21 14 16 23 23 16 23 23 21 16 21 23 14 16 23 21 14 21 23 18 14 23 16 23 23 21 16 14 23 21 23 21 16 16 23 16 21 23 23 14 16 21 14 16 14 21 21 23 18 16 21 16 23 35 16 21 16 21 14 21 21 16 21 16 23 23 23 17 12 14 23 21 35 21 14 21 14 18 17 21 18 21 21 CP (case statement, you create a more specific type of event and dispatch the appropriate) K
436 892 m
12 14 21 14 21 14 10 14 14 21 14 21 23 10 21 16 23 35 10 23 14 10 23 21 18 18 23 21 18 14 23 10 21 23 10 14 14 14 32 10 18 14 23 21 23 21 10 35 23 14 18 23 30 10 10 12 23 23 14 14 21 23 23 16 10 14 21 23 14 16 14 23 CP (virtual function.  Custom events will be discussed in more detail later.) K
323 815 m
16 21 18 32 17 23 16 21 23 23 21 14 18 18 23 23 14 18 23 18 18 14 23 21 23 21 18 23 23 14 14 21 21 14 16 14 14 23 23 18 14 21 18 18 21 23 14 21 23 18 21 23 14 18 16 23 18 14 18 23 35 18 21 14 23 23 21 23 18 23 21 21 18 23 23 23 18 23 23 23 23 23 14 18 23 21 23 28 CP (Even though you can handle most of the value set notification events using standard User) K
323 766 m
23 23 14 14 21 21 14 16 14 14 23 23 14 14 21 18 14 21 23 14 21 23 14 16 23 14 14 21 18 14 21 14 21 14 23 35 23 21 14 21 23 14 14 16 23 16 14 14 16 23 23 23 23 18 14 23 23 21 14 14 14 14 14 18 14 21 32 14 12 18 16 21 14 23 23 21 23 14 23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 CP (Interface Library handlers, we still add support for the complete set of value set notification) K
323 716 m
10 23 14 10 18 14 23 21 23 21 CP (events to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 14 23 14 10 16 23 16 10 18 23 23 18 21 21 16 10 23 32 14 10 21 16 21 10 21 16 21 23 28 9 10 12 CP (.  There are two reasons for this.) K
323 639 m
14 21 16 21 23 21 23 17 23 14 14 23 23 18 14 14 14 32 18 23 21 23 28 17 18 12 18 16 21 14 23 23 21 23 18 16 23 18 18 23 23 14 23 18 23 32 14 18 21 21 23 23 23 16 23 18 23 14 14 21 16 21 23 21 23 18 14 14 14 32 18 18 16 21 35 35 21 16 23 23 16 23 18 12 14 18 16 14 25 CP (First, programmers will generally produce two kinds of handlers.  They will build general) K
323 589 m
23 16 21 16 23 14 28 15 21 21 21 16 16 21 14 23 16 15 16 21 18 32 15 21 23 28 14 16 12 18 14 23 16 14 23 23 21 16 16 23 16 18 23 23 14 23 16 14 23 21 16 21 16 15 14 23 16 23 23 21 35 16 16 23 16 16 23 16 23 32 16 23 21 14 23 32 16 12 18 21 23 23 16 21 18 23 23 16 23 23 CP (purpose ones, which work for many different kinds of controls.  The User Interface Library) K
323 539 m
18 14 23 16 14 23 23 21 18 35 23 14 18 23 21 18 23 14 14 23 23 18 14 14 14 32 18 23 18 14 21 18 23 21 23 28 17 18 12 21 18 21 23 14 18 16 23 18 18 21 14 23 35 21 23 21 19 21 16 21 19 18 16 21 14 23 23 21 23 19 23 23 14 14 21 14 23 23 14 23 21 35 19 14 21 21 16 14 23 CP (direct manipulation handlers are examples of these.  They also will build custom controls) K
323 490 m
16 23 15 14 23 21 35 23 23 14 21 23 21 23 15 21 14 21 14 14 14 14 21 21 16 15 23 25 14 15 12 14 21 14 23 23 21 23 15 21 14 23 23 14 18 15 21 15 23 14 15 23 23 14 16 23 14 14 21 14 15 21 23 14 15 14 14 21 15 21 23 14 23 23 16 23 15 23 14 16 26 26 30 16 14 18 23 14 16 23 23 14 18 23 CP (using just C++ to provide all the tailoring in a single handler.  To facilitate development of) K
323 440 m
12 21 21 21 14 23 10 21 23 23 10 23 14 10 18 23 23 14 14 21 21 14 16 14 14 23 23 10 14 21 18 10 21 23 14 21 23 10 21 23 14 10 14 14 21 10 21 14 23 23 21 23 10 23 23 23 10 14 21 14 10 21 32 10 12 18 14 21 18 10 21 23 14 21 23 10 23 21 21 14 14 21 14 21 21 23 18 CP (specialized value sets, we let you handle all the value set notifications in one place.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (789) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 20 20
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
16 14 21 23 14 15 23 23 15 23 23 14 23 23 21 23 21 23 16 12 18 14 23 21 23 21 16 23 23 14 14 21 21 14 16 14 14 23 23 16 23 21 21 32 14 21 23 16 18 21 21 23 21 16 21 16 15 14 23 16 21 14 14 23 23 18 16 23 21 14 16 23 16 21 16 21 16 21 16 21 23 14 16 12 20 14 23 23 23 21 21 25 CP (Secondly, there are often subtle differences between notification events, depending on their) K
323 2660 m
14 21 18 17 21 23 14 21 23 17 21 23 14 17 12 21 14 23 35 21 23 21 17 16 23 25 17 17 12 21 21 16 23 23 18 CP (source.  For example, the value set) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
17 18 CP (s ) K
42 /Font500 SF
21 CP (\223) K
42 /Times-Roman SF
16 21 14 23 21 CP (enter) K
42 /Font500 SF
21 CP (\224) K
42 /Times-Roman SF
17 23 23 21 17 CP ( and ) K
42 /Font500 SF
21 CP (\223) K
42 /Times-Roman SF
14 21 21 14 21 18 CP (select) K
42 /Font500 SF
21 CP (\224) K
42 /Times-Roman SF
23 23 21 16 32 23 16 16 21 23 14 16 21 23 14 23 23 16 23 16 23 14 23 23 17 18 14 23 21 23 21 17 CP ( events both provide the row and) K
323 2610 m
21 18 21 23 14 11 23 14 21 14 23 23 11 23 21 21 11 23 23 23 11 23 21 32 11 23 14 23 23 11 21 23 28 10 11 12 14 21 14 21 35 21 16 21 23 11 14 23 21 23 21 11 23 23 23 21 21 18 11 21 23 14 11 23 14 11 35 21 14 14 11 23 21 14 21 21 14 21 18 11 21 23 14 11 16 23 11 23 35 23 14 23 21 CP (column of the selected item in the second event parameter.  The only way you can obtain these) K
323 2560 m
11 21 14 16 21 23 21 23 11 21 23 14 11 35 23 16 16 CP (from the generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (IControlEvent) K
42 /Times-Roman SF
11 21 14 16 21 23 21 23 11 21 23 14 11 23 14 11 14 21 21 14 23 23 11 CP ( object in the generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (enter) K
42 /Times-Roman SF
11 16 23 11 12 CP (, or ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (selected) K
42 /Times-Roman SF
18 14 11 12 18 23 23 14 14 21 23 23 16 11 16 21 14 23 23 21 23 11 CP ( handler functions, is) K
323 2510 m
12 23 21 12 18 21 12 16 21 14 21 35 21 16 21 23 12 18 14 23 14 12 14 21 21 16 14 23 21 12 23 14 CP (to extract this parameter as an ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (unsigned) K
42 /Times-Roman SF
12 CP ( ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (long) K
42 /Times-Roman SF
16 21 14 14 21 23 11 23 23 11 23 21 21 11 21 39 10 11 12 14 14 11 35 23 16 16 11 18 21 23 14 21 23 11 21 23 14 12 14 21 21 16 14 23 21 12 23 23 21 12 CP ( and extract the values from it.  We can do better) K
323 2460 m
13 21 13 23 14 CP (in a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetEvent) K
42 /Times-Roman SF
21 18 21 23 14 12 14 23 23 12 23 25 11 12 12 18 23 23 14 14 21 23 23 16 13 16 21 23 35 21 35 13 23 35 23 14 23 21 13 23 23 21 13 32 23 16 13 14 14 21 14 14 23 23 21 13 23 23 14 23 23 21 13 23 23 13 18 18 21 14 21 13 CP ( class by adding explicit row and column member functions.  To put these) K
323 2411 m
16 21 14 21 21 16 21 16 23 14 16 18 23 16 18 21 16 14 23 23 21 16 16 12 21 18 23 16 23 23 21 16 23 14 16 18 14 23 21 23 21 CP (events to any use, requires us to create ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetEvent) K
42 /Times-Roman SF
16 23 15 18 23 23 14 18 16 21 23 15 23 21 23 21 23 14 16 21 23 23 15 21 23 14 23 23 16 23 15 23 23 21 16 18 CP (s and provide overloaded versions of) K
[37 0 0 42 0 0] /Courier MF
323 2361 m
22 22 22 22 22 CP (enter) K
42 /Times-Roman SF
10 23 23 21 10 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (selected) K
42 /Times-Roman SF
10 21 10 14 21 23 10 23 21 14 23 32 10 12 CP (, which get a ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetEvent) K
42 /Times-Roman SF
12 14 23 21 35 23 23 15 21 10 18 21 10 CP ( as argument.) K
323 2284 m
21 16 23 23 21 12 23 25 CP (So, our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
42 /Times-Roman SF
16 23 23 23 16 20 21 23 14 16 20 21 23 14 20 23 14 20 23 23 14 23 23 23 23 18 21 16 16 23 21 20 18 23 23 14 14 21 23 23 16 20 14 21 23 14 16 14 23 21 21 23 14 16 21 18 21 23 21 18 18 21 14 21 21 CP ( class has five virtual functions corresponding to the five \(non-) K
323 2234 m
12 18 14 23 21 23 21 10 23 23 14 14 21 21 14 16 14 14 23 23 10 16 21 23 32 23 10 14 21 18 10 21 23 14 21 23 10 16 23 23 16 23 14 23 21 16 23 CP (drag/drop\) value set owner notification events.) K
62 /Times-Bold SF
323 2107 m
24 21 34 28 31 41 15 52 31 21 24 34 45 CP (Custom Events) K
42 /Times-Roman SF
323 2019 m
12 21 16 21 16 18 21 18 18 21 14 21 16 14 23 21 23 21 16 14 14 32 14 16 12 14 14 21 14 21 23 16 21 16 23 35 16 21 14 14 14 14 14 16 21 16 23 14 17 18 21 23 14 21 18 35 21 23 14 17 18 14 23 21 23 21 17 21 18 23 23 14 17 18 18 23 21 18 14 23 17 14 14 14 32 17 21 32 17 32 23 32 CP (Now we will discuss those events themselves in a little more detail.  All event classes are,) K
323 1970 m
12 14 23 21 23 21 14 23 16 21 16 23 14 28 14 21 21 21 16 16 21 14 23 16 14 16 21 18 32 14 21 14 23 23 14 21 23 21 35 14 14 21 23 14 14 21 14 21 23 14 16 23 14 18 21 21 21 14 23 14 21 23 14 16 14 21 23 14 14 16 23 16 14 18 16 21 23 23 21 16 32 14 12 20 14 14 21 14 14 23 21 18 18 21 CP (essentially, wrappers for the five pieces of data that make up a User Interface Library event.) K
323 1920 m
14 21 16 21 10 23 21 23 28 CP (They are:) K
361 1843 m
17 CP CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 1843 m
10 21 14 16 21 23 21 23 10 21 10 23 14 10 23 21 14 21 14 18 23 21 16 14 10 21 23 10 23 21 21 10 21 14 21 23 10 18 14 23 28 9 10 12 21 14 23 23 21 23 10 32 23 23 23 14 32 10 21 21 16 23 23 18 10 30 CP (A source window handle.  This data can be translated to a generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 CP (IWindow) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 14 21 14 23 14 23 23 10 CP ( pointer.) K
361 1766 m
17 CP (\007) K
436 1766 m
12 14 21 14 16 14 14 23 21 23 14 10 14 23 21 23 21 10 23 32 CP (An event identifier.) K
361 1689 m
17 CP (\007) K
436 1689 m
12 14 23 21 23 21 11 21 14 16 14 21 21 23 18 11 21 23 14 12 23 23 12 23 23 21 23 21 23 12 23 21 14 23 32 12 16 23 12 23 23 14 23 21 21 35 12 23 23 21 12 21 23 14 21 23 12 21 23 14 12 14 18 16 21 14 21 35 21 16 21 23 12 21 23 21 18 18 21 35 12 23 32 25 CP (Two message parameters; the value and meaning of which depend on the specific event.) K
436 1640 m
10 21 16 21 10 23 14 23 35 14 18 10 21 18 21 23 28 CP (These simply are ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (unsigned) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 CP ( ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (long) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 16 23 16 10 18 CP (s \(or ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (void) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
10 CP ( ) K
[37 0 0 42 0 0] /Courier MF
22 CP (*) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 14 14 23 21 16 21 23 10 23 23 10 16 18 16 21 14 23 14 23 23 10 CP ( pointers\) by default.) K
361 1563 m
17 CP (\007) K
436 1563 m
12 14 23 21 23 21 10 21 23 14 10 16 23 10 16 21 23 23 21 18 10 21 23 14 10 23 14 10 23 21 21 23 10 23 21 18 18 21 23 10 21 23 10 23 14 10 14 14 23 18 21 16 10 14 23 21 23 21 10 21 23 28 CP (The event result to be passed back to the sender of the event.) K
323 1486 m
19 21 14 16 21 23 21 23 19 21 19 12 18 14 21 21 14 23 23 19 14 23 21 23 21 19 14 14 21 19 16 23 19 21 14 21 23 19 21 14 21 14 18 19 21 23 14 20 21 18 14 16 23 35 23 21 20 21 18 21 23 14 20 21 21 23 14 25 CP (Since these comprise the state data of all event objects, a generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 CP (IEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 14 19 23 21 18 23 19 21 23 19 23 21 21 19 CP ( can be used to) K
323 1436 m
12 23 21 23 14 16 21 23 12 21 14 21 21 16 21 12 23 14 12 14 23 21 32 12 14 14 14 32 12 23 23 23 12 12 20 14 14 21 16 21 23 21 32 12 12 12 14 23 21 23 21 12 23 23 21 12 14 23 21 18 21 16 23 21 16 CP (represent any event.  Generally, you will want to create derived ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 CP (IEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 23 23 11 16 21 23 21 23 21 23 32 11 12 18 21 18 18 21 14 21 12 CP ( classes, whenever you) K
323 1386 m
21 16 23 35 27 23 23 14 23 14 21 35 23 18 27 23 14 23 14 27 18 21 14 23 23 14 16 14 14 21 27 14 23 21 23 21 28 21 14 16 21 23 21 23 28 21 23 14 28 21 14 21 14 18 23 21 16 14 28 23 14 28 16 21 14 18 21 21 28 14 14 28 21 23 21 35 28 23 14 28 23 21 21 23 CP (need to make it easier to translate the generic event attributes into something more) K
323 1337 m
16 23 21 21 23 21 23 23 21 16 23 21 16 21 14 21 21 16 21 16 21 32 16 12 14 23 16 14 23 23 21 16 35 23 14 18 23 21 16 14 21 18 16 21 23 14 21 23 17 16 23 23 17 16 23 25 17 17 12 14 23 16 23 23 14 23 21 21 35 CP (meaningful.  For our value set custom control, we create an enhanced ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
18 18 21 14 21 16 CP ( class) K
323 1287 m
14 14 21 23 14 CP (that:) K
361 1220 m
17 CP (\007) K
436 1220 m
10 21 23 23 14 10 18 21 10 16 21 14 23 14 23 23 10 32 23 23 23 14 32 10 14 23 16 14 23 23 21 10 21 23 14 10 18 23 16 23 14 21 30 CP (Returns the control window pointer as type ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (ValueSet*) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 CP (.) K
361 1165 m
17 CP (\007) K
436 1165 m
12 14 21 23 35 23 23 10 23 35 23 14 23 21 10 23 23 21 10 32 23 16 10 18 21 10 16 21 14 21 35 21 16 21 23 10 14 23 21 23 21 10 23 23 23 21 21 18 10 21 23 14 10 18 21 14 21 14 18 23 21 16 27 CP (Translates the second event parameter as row and column number.) K
323 1098 m
11 16 23 23 11 16 23 11 23 23 14 14 21 16 21 14 21 21 23 11 14 14 23 16 11 21 23 14 11 18 21 23 11 16 21 14 23 21 23 21 11 18 14 23 14 11 16 23 11 23 23 21 11 21 23 14 12 14 21 12 23 23 14 14 18 14 14 12 21 23 23 21 12 21 23 28 CP (The code listing at the end of this chapter has the full declaration of our ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 23 21 11 CP ( and) K
[37 0 0 42 0 0] /Courier MF
323 1049 m
22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
12 18 21 18 18 21 14 21 10 CP ( classes.) K
54 /Times-Bold SF
323 928 m
21 18 15 30 21 24 39 13 18 30 24 27 36 CP (Event Results) K
54 /Font300 SF
42 /Font300 SF
323 842 m
10 21 14 23 35 21 18 10 21 23 14 11 16 23 11 23 23 14 14 21 14 23 21 35 21 14 23 35 14 11 21 23 14 11 23 14 11 23 23 11 21 35 23 21 11 14 23 23 11 18 21 23 23 11 14 14 11 21 14 14 23 42 CP (While it does not come up in the implementation of the sample ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (ValueSet) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 16 21 23 14 10 12 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 CP ( custom control, there) K
323 792 m
23 21 14 21 14 21 23 18 18 21 12 21 23 14 21 23 12 14 14 23 18 21 16 12 21 23 14 12 23 14 14 32 12 23 23 14 14 21 21 23 13 23 21 23 32 13 21 16 21 32 21 13 21 23 13 23 14 23 23 23 18 13 23 23 23 13 18 21 23 18 18 14 13 14 21 23 23 14 14 14 23 23 21 13 21 35 23 18 13 21 16 21 CP (are some additional issues you should be aware when dealing with the result value associated) K
323 742 m
12 18 14 23 21 23 21 10 23 14 21 14 16 21 21 10 16 23 10 23 23 14 14 23 23 21 23 10 21 23 14 10 23 14 14 32 CP (with the handling of certain events.) K
323 666 m
16 23 11 18 35 16 21 14 11 23 16 11 11 12 14 14 23 18 21 16 11 21 11 23 16 23 14 21 16 11 14 23 21 23 21 11 21 23 14 11 16 23 11 16 21 14 23 23 21 23 11 21 23 14 11 21 16 14 23 23 21 16 11 18 14 23 21 23 21 11 16 21 23 21 23 21 39 11 23 23 14 14 21 14 23 21 18 21 16 25 11 21 35 23 25 CP (Some Presentation Manager events require the handler of the event return a result.  In terms of) K
323 616 m
14 14 23 18 21 16 13 21 23 14 13 14 21 18 13 14 18 23 35 13 14 23 21 23 21 13 21 23 14 13 18 21 18 18 21 21 23 16 23 13 14 21 23 14 13 16 21 14 23 23 21 23 13 21 23 14 13 18 23 21 21 35 13 18 14 23 14 13 12 20 16 21 16 23 14 28 13 21 21 21 16 16 21 14 23 16 13 16 21 18 32 13 21 23 14 CP (the User Interface Library, this means the handler that processes the event must set the result) K
323 566 m
21 21 23 14 21 16 23 21 21 14 23 23 14 16 14 14 21 CP (attribute of the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 CP (IEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
16 21 14 23 23 21 23 20 21 23 14 20 23 14 20 23 21 18 18 21 23 20 18 14 21 23 20 23 21 14 23 32 20 12 14 21 21 14 23 23 20 CP ( object, which gets passed to the handler) K
42 /Font500 SF
16 CP (\222) K
42 /Font300 SF
20 18 CP (s ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (dispatchHandlerEvent) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
323 516 m
12 18 21 18 18 21 14 21 10 14 23 21 23 21 10 23 23 21 10 16 21 14 23 23 21 23 10 35 23 14 18 23 21 10 16 23 23 23 10 23 23 10 18 14 23 21 35 21 16 14 23 23 21 16 10 23 32 14 10 18 21 18 23 23 35 14 10 18 14 23 28 9 10 12 23 23 14 14 21 23 23 16 CP (function.  This imposes two requirements on your custom handler and event classes.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (790) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 21 21
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
323 2710 m
14 23 21 23 21 12 35 23 14 18 23 21 12 16 23 23 23 12 16 23 12 21 14 23 23 14 16 14 14 21 12 14 23 21 23 21 12 21 23 14 12 14 21 18 12 23 14 12 18 23 23 14 14 21 23 23 16 12 23 21 21 14 14 21 14 21 21 23 18 13 21 23 14 23 23 16 23 13 23 14 23 23 23 18 13 23 23 23 13 12 14 18 16 14 25 CP (First, you should provide specialized functions to set the event attribute of your custom event) K
323 2660 m
19 21 14 16 21 23 21 23 19 21 23 14 19 14 14 21 21 19 18 23 21 32 14 21 19 23 21 21 19 16 21 35 35 21 16 23 23 16 23 19 21 19 21 14 14 23 42 18 19 12 18 21 18 18 21 14 21 CP (classes.  While a programmer can always call the generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (setResult) K
42 /Times-Roman SF
23 14 18 23 21 16 21 14 21 21 23 18 23 23 14 14 21 23 23 16 18 CP ( function declared in) K
[37 0 0 42 0 0] /Courier MF
323 2610 m
22 22 22 22 22 22 CP (IEvent) K
42 /Times-Roman SF
23 18 21 23 23 11 23 23 14 14 21 23 23 16 11 18 14 14 11 12 CP (, its function doesn) K
42 /Times-Roman SF
16 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Times-Roman SF
21 14 21 21 14 23 23 14 10 16 23 10 12 14 14 10 14 14 21 21 10 14 18 23 35 10 23 21 23 14 10 14 23 23 10 16 23 10 16 21 23 14 21 23 32 10 23 14 10 18 21 10 18 21 23 14 21 10 23 23 21 11 21 23 14 23 23 16 23 11 14 CP (t provide any clues as to whether or not they must call it, or indicate) K
323 2560 m
21 30 21 23 14 16 21 23 31 23 14 31 21 16 21 32 31 21 32 31 16 14 31 12 21 14 23 35 21 23 21 31 23 21 31 18 32 29 31 12 23 14 31 14 21 18 31 21 23 31 23 14 23 23 23 18 31 14 14 23 18 21 16 31 21 23 14 31 21 23 14 21 23 31 14 21 23 32 CP (what value the result should be set to.  As an example, if we were to define a) K
[37 0 0 42 0 0] /Courier MF
323 2510 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetDrawEvent) K
42 /Times-Roman SF
21 23 14 14 21 23 21 23 15 23 14 23 23 32 15 21 32 15 12 18 14 21 18 15 21 23 14 21 23 15 16 23 16 15 18 14 23 21 23 21 15 32 21 16 23 15 16 21 23 32 23 15 14 23 21 18 21 16 23 21 16 15 23 14 15 12 18 18 21 14 21 15 CP ( class, to represent owner draw events for value sets, we would have the) K
323 2460 m
14 21 23 14 14 10 18 23 23 14 14 21 23 23 16 10 21 23 14 23 23 16 23 10 18 18 21 14 21 CP (class provide functions like:) K
[37 0 0 33 0 0] /Courier MF
398 2378 m
22 22 22 22 22 22 22 CP (Boolean) K
398 2345 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  hasItemBeenDrawn \( \) const;) K
398 2312 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetDrawEvent) K
398 2279 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP ( &itemDrawn \( Boolean drawn = true \);) K
42 /Times-Roman SF
323 2184 m
12 23 23 14 14 21 23 23 16 14 14 21 23 14 16 14 23 14 23 21 23 23 14 16 16 21 23 23 14 23 21 14 23 14 14 18 14 23 21 23 21 14 14 18 23 35 14 21 14 23 23 21 23 14 23 23 23 14 12 14 21 14 23 21 23 21 14 18 14 23 14 15 23 14 15 32 21 18 15 21 32 15 18 21 15 12 23 23 23 21 21 25 CP (Second, as we saw in this chapter, you handle most events in an overridden virtual function,) K
323 2135 m
16 21 14 23 23 21 23 10 21 23 14 10 23 21 14 23 32 CP (which the handler) K
42 /Font500 SF
16 CP (\222) K
42 /Times-Roman SF
10 18 CP (s ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (dispatchHandlerEvent) K
42 /Times-Roman SF
14 35 16 23 16 10 21 23 14 10 18 21 23 10 23 14 16 21 23 21 21 18 10 14 21 23 18 23 10 21 23 28 9 10 12 18 14 14 21 21 10 CP ( calls.  The usual scenario has the form:) K
[37 0 0 33 0 0] /Courier MF
398 2053 m
22 22 22 CP (...) K
398 2019 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (case WM_DRAWITEM:) K
398 1986 m
22 22 22 CP (  {) K
398 1953 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // Construct specialized event from generic one and) K
398 1920 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  // dispatch handler function:) K
398 1887 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  ValueSetDrawEvent) K
398 1853 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (    customEvent\( event \);) K
398 1820 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (  this -> draw\( customEvent \);) K
398 1787 m
22 22 22 22 22 22 22 22 CP (  break;) K
398 1754 m
22 22 22 CP (  }) K
398 1721 m
22 22 22 CP (...) K
42 /Times-Roman SF
323 1626 m
13 12 21 14 23 35 21 23 21 13 18 14 23 14 13 23 16 CP (In this example, ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetDrawEvent) K
42 /Times-Roman SF
13 23 23 21 13 18 18 21 14 21 13 14 23 21 23 21 13 35 23 14 18 23 21 13 21 23 14 13 18 14 13 CP ( is the custom event class and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (draw) K
42 /Times-Roman SF
14 21 23 14 16 14 23 13 16 21 14 23 23 21 23 13 21 23 14 13 18 14 13 CP ( is the handler virtual) K
323 1576 m
12 14 23 21 23 21 10 21 23 14 10 18 21 18 18 21 21 23 16 23 10 14 21 23 14 10 23 23 14 14 21 23 23 16 CP (function that processes the event.) K
323 1499 m
11 21 23 14 16 16 21 23 23 12 21 32 12 16 14 12 14 21 23 32 12 23 25 CP (So what if we override ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 CP (draw) K
42 /Times-Roman SF
21 23 14 11 23 14 11 23 21 21 23 11 14 21 23 11 23 14 11 14 21 21 16 11 18 14 23 14 11 23 21 21 23 11 21 32 11 12 29 23 23 21 35 23 25 11 11 21 35 21 14 14 11 21 23 14 11 32 21 16 23 11 23 23 21 11 CP ( and draw the item?  Somehow, we need this fact to get back to the) K
323 1450 m
32 23 23 23 10 23 21 23 14 10 23 18 10 12 16 14 21 18 14 14 10 14 21 18 10 21 23 14 21 23 10 16 21 23 21 23 21 39 10 23 23 14 14 21 14 23 21 18 21 16 25 10 21 23 14 10 23 14 10 23 21 21 23 10 23 23 21 10 12 23 14 21 23 21 11 21 23 14 11 23 14 11 18 16 21 14 23 23 21 23 11 16 21 23 14 23 CP (other handlers in the chain, and back to the Presentation Manager value set itself, so they know) K
323 1400 m
14 21 23 14 14 23 23 21 14 23 14 14 18 14 14 23 21 14 18 14 14 18 16 14 16 14 21 23 28 13 14 12 14 14 14 32 21 16 23 14 23 14 14 14 23 23 CP (not to draw it.  The first step is to add the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (itemDrawn) K
42 /Times-Roman SF
14 23 21 23 21 13 21 23 14 13 23 14 13 23 23 14 14 21 23 23 16 14 CP ( function to the event) K
42 /Font500 SF
44 CP (\227) K
42 /Times-Roman SF
23 21 23 14 16 21 18 21 23 13 21 32 13 18 21 CP (as we described) K
323 1350 m
21 23 23 23 21 CP (above) K
42 /Font500 SF
44 CP (\227) K
42 /Times-Roman SF
12 21 23 23 23 14 21 23 14 23 14 14 18 23 21 21 23 14 21 16 23 35 14 12 14 21 23 21 32 23 32 14 14 12 35 21 14 14 14 21 23 14 14 32 21 16 23 14 23 23 23 14 23 21 23 32 15 23 23 14 14 21 23 23 16 15 14 21 23 14 15 14 14 21 21 15 23 14 15 23 23 21 CP (and to call that function when you draw the item.  However, more needs to be done.) K
323 1300 m
21 23 14 25 23 14 25 23 21 21 21 14 23 25 21 23 21 23 25 14 23 23 14 35 25 23 23 23 25 14 14 23 18 21 16 25 23 23 21 26 18 23 16 21 21 18 14 23 26 14 14 26 18 21 26 12 23 16 23 32 26 14 23 23 23 21 21 26 21 23 23 21 26 21 23 23 23 21 26 21 23 28 CP (The above code cannot work, as it discards any result you might have placed in the) K
[37 0 0 42 0 0] /Courier MF
323 1250 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (ValueSetDrawEvent) K
42 /Times-Roman SF
12 CP (.) K
323 1174 m
13 21 14 16 21 23 21 23 14 21 23 14 14 23 14 14 23 21 21 23 14 14 14 23 18 21 16 14 14 23 21 23 21 14 21 23 14 14 16 21 16 18 23 21 16 14 14 23 14 14 18 14 14 23 23 14 14 23 14 23 18 14 21 23 28 CP (The solution is to transfer the event result back to the generic ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 CP (IEvent) K
42 /Times-Roman SF
16 21 18 32 13 21 23 14 13 23 21 14 23 32 13 12 14 21 21 14 23 23 13 CP ( object, which the User) K
323 1124 m
18 23 14 18 23 21 18 18 21 23 19 23 16 21 16 23 14 28 19 21 21 21 16 16 21 14 23 16 CP (Interface Library passed to ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (dispatchHandlerEvent) K
42 /Times-Roman SF
23 14 18 21 23 23 21 18 16 23 18 21 23 14 14 18 21 14 23 23 14 18 18 21 18 18 21 16 14 23 23 21 16 18 18 14 23 28 17 18 12 CP (.  This requires a single line of code to) K
323 1074 m
12 14 23 21 23 21 10 23 21 21 14 14 21 14 21 21 23 18 10 21 23 14 10 23 23 14 18 18 21 21 23 16 23 10 16 21 14 16 21 10 12 14 14 23 18 21 16 10 14 23 21 23 21 10 21 14 16 21 23 21 23 10 21 23 14 10 23 14 10 23 23 14 18 18 21 CP (assign to the generic event result, after processing the specialized event.) K
[37 0 0 33 0 0] /Courier MF
398 992 m
22 22 22 CP (...) K
398 959 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (this -> draw\( customEvent \);) K
[37 0 0 33 0 0] /Courier-Bold MF
398 926 m
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (event.setResult\( customEvent.result \);) K
[37 0 0 33 0 0] /Courier MF
398 892 m
22 22 22 CP (...) K
79 /Times-Bold SF
323 717 m
39 35 39 66 66 44 44 CP (Summary) K
42 /Times-Roman SF
323 625 m
16 21 18 32 15 21 23 14 15 23 14 23 14 15 18 14 23 16 14 23 23 21 15 35 23 14 18 23 21 15 21 14 21 16 23 23 16 23 21 23 14 15 23 14 15 21 18 23 15 23 23 23 15 18 18 21 21 23 16 23 15 21 23 14 15 23 21 23 14 16 21 18 21 23 16 18 21 23 16 16 21 14 23 21 23 21 16 18 14 23 28 CP (This chapter has described the process you use to incorporate custom controls into the User) K
323 575 m
14 21 16 21 10 18 23 21 14 18 10 21 14 18 21 23 10 21 23 28 9 10 12 20 16 21 16 23 14 28 10 21 21 21 16 16 21 14 23 16 CP (Interface Library.  The basic steps are:) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
1936 2794 m
2085 2794 l
2085 2861 l
1936 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
2011 2819 m
25 25 25 CP (791) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
1935 2794 l
1935 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-BoldItalic SF
1021 2819 m
25 25 11 20 22 15 25 25 28 33 CP (Chapter 30) K
46 /Times-Bold SF
20 22 22 15 28 28 25 38 11 28 28 25 11 20 15 25 21 17 28 25 35 11 40 25 17 20 28 35 11 11 CP (  Custom Controls and Handlers) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
SavedState0 restore
eject
%%Page: 22 22
/SavedState0 save def
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
n
-126 232 m
-126 232 23 235 box
cp
e
n
94 12 m
94 12 97 161 box
cp
e
n
2386 232 m
2386 232 2534 235 box
cp
e
n
2311 12 m
2311 12 2314 161 box
cp
e
n
-126 3011 m
-126 3011 23 3015 box
cp
e
n
94 3086 m
94 3086 97 3235 box
cp
e
n
2386 3011 m
2386 3011 2534 3015 box
cp
e
n
2311 3086 m
2311 3086 2314 3235 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 643 m
2085 643 l
2085 1367 l
323 1367 l cp
clip n msbeforeclp SM
n
1198 1183 m
1198 1183 1962 1274 box
cp
0.89801 g
e
0 g
n
434 1183 m
434 1183 1201 1274 box
cp
0.89801 g
e
0 g
42 /Times-Bold SF
449 1305 m
18 16 25 21 25 23 25 37 23 32 10 16 21 25 10 21 25 14 23 28 9 10 12 23 16 23 23 10 21 14 25 23 26 CP (Table 30-4.  Value Set Components) K
46 /Times-Bold SF
449 1215 m
17 28 22 28 25 28 40 25 35 CP (Component) K
1212 1215 m
28 25 15 17 25 22 25 33 11 22 15 28 40 25 25 33 CP (Example Location) K
37 /Times-Roman SF
449 1138 m
18 18 18 14 14 18 12 20 14 9 12 18 23 18 20 12 18 25 CP (ValueSet Interface) K
1212 1138 m
20 20 20 11 12 18 16 18 20 12 18 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\valueset.hpp) K
449 1069 m
20 20 12 12 18 12 20 18 31 18 12 20 31 14 9 12 18 23 18 20 12 18 25 CP (ValueSet Implementation) K
1212 1069 m
20 20 18 11 12 18 16 18 20 12 18 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\valueset.cpp) K
449 1000 m
18 18 18 14 14 18 12 20 14 9 14 18 12 20 20 18 29 12 18 23 18 20 12 18 25 CP (ValueSetHandler Interface) K
1212 1000 m
20 20 20 11 12 20 20 12 18 16 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\vsethdr.hpp) K
449 931 m
20 20 12 12 18 12 20 18 31 18 12 20 31 14 9 14 18 12 20 20 18 29 12 18 23 18 20 12 18 25 CP (ValueSetHandler Implementation) K
1212 931 m
20 20 18 11 12 20 20 12 18 16 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\vsethdr.cpp) K
449 862 m
18 18 18 14 14 18 12 20 14 9 12 20 18 20 25 12 18 23 18 20 12 18 25 CP (ValueSetEvent Interface) K
1212 862 m
20 20 20 11 12 20 18 12 18 16 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\vsetevt.hpp) K
449 793 m
20 20 12 12 18 12 20 18 31 18 12 20 31 14 9 12 20 18 20 25 12 18 23 18 20 12 18 25 CP (ValueSetEvent Implementation) K
1212 793 m
20 20 18 11 12 20 18 12 18 16 20 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\vsetevt.cpp) K
449 724 m
31 18 14 20 20 14 23 9 12 16 18 22 8 12 18 23 18 20 12 18 25 CP (ValueSet Test Program) K
1212 724 m
20 20 18 11 12 18 16 20 12 16 18 12 12 12 18 16 18 20 12 18 20 12 20 12 12 12 20 18 CP (extlib\\valueset\\testvset.cpp) K
n
434 700 m
434 700 1962 703 box
cp
e
n
434 769 m
434 769 1962 772 box
cp
e
n
434 838 m
434 838 1962 841 box
cp
e
n
434 907 m
434 907 1962 910 box
cp
e
n
434 976 m
434 976 1962 979 box
cp
e
n
434 1045 m
434 1045 1962 1048 box
cp
e
n
434 1114 m
434 1114 1962 1117 box
cp
e
n
1959 700 m
1959 700 1962 1274 box
cp
e
n
434 1183 m
434 1183 1962 1186 box
cp
e
n
1198 700 m
1198 700 1201 1274 box
cp
e
n
434 700 m
434 700 437 1274 box
cp
e
n
434 1275 m
434 1275 1962 1278 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2786 m
2085 2786 l
2085 2793 l
323 2793 l cp
clip n msbeforeclp SM
n
323 2786 m
323 2786 2085 2793 box
cp
e
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 424 m
2085 424 l
2085 642 l
323 642 l cp
323 1368 m
2085 1368 l
2085 2748 l
323 2748 l cp
clip n msbeforeclp SM
42 /Times-Roman SF
361 2710 m
17 CP /redefine { findfont begin currentdict dup length dict begin {
1 index /FID ne {def} {pop pop} ifelse } forall /FontName exch def
dup length 0 ne { /Encoding Encoding 256 array copy def 0 exch {
dup type /nametype eq { Encoding 2 index 2 index put pop 1 add
}{ exch pop } ifelse } forall } if pop currentdict dup end end
/FontName get exch definefont pop } bind def
CP850 /Font300 /Times-Roman redefine
42 /Font300 SF
(\007) K
436 2710 m
23 14 14 21 21 16 14 23 11 23 21 23 14 16 21 23 11 23 14 14 21 23 18 23 11 12 20 23 21 16 21 16 21 14 23 11 18 18 21 14 21 11 32 23 23 23 14 32 11 21 23 14 11 23 14 11 21 16 21 23 32 21 35 23 18 11 18 18 21 14 21 11 32 21 23 11 21 12 21 14 21 21 16 21 12 23 25 CP (To create a new class somewhere in the window class hierarchy, usually derived directly) K
436 2660 m
10 35 23 16 16 CP (from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IControl) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 21 23 14 23 23 16 23 10 23 14 23 23 23 18 10 18 18 21 14 21 10 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 28 8 10 12 CP (.  Your custom control class should provide:) K
473 2583 m
16 CP (-) K
548 2583 m
23 23 14 14 18 14 23 21 13 23 23 21 13 12 23 21 14 21 21 16 21 13 21 23 13 23 14 13 18 32 23 23 23 14 32 13 14 23 16 14 23 23 21 14 35 23 14 18 23 21 14 32 21 23 14 14 14 35 16 21 23 14 14 21 23 14 14 18 16 23 14 21 23 16 14 18 23 23 30 CP (Constructors that permit new custom control windows to be created, and existing) K
548 2533 m
12 18 14 21 21 14 23 23 10 26 26 30 10 18 21 10 23 21 14 21 14 23 18 23 21 21 23 21 10 21 23 10 23 14 10 18 32 23 23 23 14 32 CP (windows to be encapsulated as C++ objects.) K
473 2456 m
16 CP (-) K
548 2456 m
23 23 21 14 18 21 23 23 30 CP (A nested ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (Style) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
14 23 16 14 23 23 21 22 35 23 14 18 23 21 22 16 23 23 23 23 16 23 23 18 21 14 23 23 14 16 14 14 21 23 21 14 23 14 18 23 21 23 14 23 21 23 14 16 21 18 21 23 23 23 14 23 18 18 21 14 21 23 CP ( class to describe the style attributes of your custom control) K
548 2407 m
14 21 18 14 23 23 21 14 23 16 21 23 23 14 23 14 14 16 21 35 35 21 16 23 23 16 23 14 21 14 32 23 14 14 21 14 23 14 14 18 23 23 14 14 21 23 23 16 14 16 21 23 35 21 35 15 16 23 15 14 21 18 15 21 15 23 23 21 15 12 18 32 23 23 23 14 32 CP (windows, and a set of member functions to allow a programmer to query and set) K
548 2357 m
12 18 21 14 23 23 14 16 14 14 21 10 18 23 23 14 16 21 23 10 21 23 14 CP (the various attributes.) K
473 2280 m
16 CP (-) K
548 2280 m
12 30 CP (A ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 CP (ColorArea) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
16 23 23 23 11 16 23 12 18 14 23 21 23 23 23 35 23 21 12 23 23 14 32 21 16 23 12 18 23 23 14 16 21 23 12 21 23 14 12 18 21 23 14 16 21 23 12 23 21 14 23 32 12 12 23 23 14 14 21 16 21 35 23 23 21 12 CP ( enumeration, which defines the various drawing components of your) K
548 2230 m
14 18 23 23 14 14 21 23 23 16 14 16 21 23 35 21 35 14 23 23 21 14 12 14 23 16 14 23 23 21 CP (control, and member functions ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 CP (color) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
13 23 23 21 13 CP ( and ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (setColor) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 21 18 23 13 18 16 23 14 23 21 13 21 23 14 13 14 21 18 13 23 23 21 13 14 21 23 13 23 14 13 CP ( to get and set the colors used) K
548 2180 m
12 18 14 23 21 23 23 23 35 23 21 10 21 18 21 23 14 10 32 21 16 23 10 23 14 CP (to draw these components.) K
473 2103 m
16 CP (-) K
548 2103 m
12 21 23 14 12 16 23 12 21 23 14 16 16 21 23 23 12 23 32 CP (An override of the ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 CP (calcMinimumSize) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
21 21 14 18 11 35 23 35 14 23 14 35 11 21 23 14 12 18 21 14 21 14 23 21 14 21 21 12 23 21 14 23 32 12 12 23 23 14 14 21 23 23 16 12 CP ( function, which calculates the minimum size) K
548 2054 m
12 18 14 23 21 14 23 23 21 10 18 14 14 10 23 21 14 23 18 14 23 10 23 14 10 18 23 21 21 23 10 14 23 16 14 23 23 21 10 16 23 23 23 CP (your control needs to display its contents.) K
473 1977 m
16 CP (-) K
548 1977 m
16 21 23 21 23 21 39 18 23 23 14 14 21 14 23 21 18 21 16 25 18 14 21 23 23 14 14 14 23 23 21 18 16 23 18 14 21 18 19 21 23 14 19 23 14 19 23 23 14 23 23 23 23 18 21 16 16 23 21 19 18 23 23 14 14 21 23 23 16 19 16 21 23 35 21 39 CP (Member functions corresponding to the set of additional Presentation Manager) K
548 1927 m
12 23 23 23 23 18 21 16 10 18 14 23 16 14 23 23 21 10 35 23 14 18 23 21 10 16 23 23 23 10 23 21 14 23 32 10 23 14 10 18 14 23 21 23 21 10 32 23 23 23 14 32 CP (window events to which your custom controls respond.) K
361 1850 m
17 CP (\007) K
436 1850 m
17 35 23 16 16 17 23 21 23 14 16 21 23 17 18 18 21 14 21 17 16 21 14 23 23 21 23 17 35 23 14 18 23 21 17 30 CP (A custom handler class derived from ) K
[37 0 0 42 0 0] /Courier MF
22 22 22 22 22 22 22 22 CP (IHandler) K
[37 0 0 42 0 0] /Font300 MF
42 /Font300 SF
23 23 14 14 21 21 14 16 14 14 23 23 16 16 21 23 32 23 16 21 23 14 17 18 21 14 23 23 21 23 17 23 21 14 23 32 17 12 CP (, which handles the owner notification) K
436 1800 m
16 21 14 23 23 21 23 26 14 21 23 14 16 14 23 26 21 14 21 16 21 23 21 18 26 21 23 23 23 23 14 26 14 14 14 32 26 16 21 14 23 23 21 23 26 21 23 28 25 26 12 18 21 14 21 16 21 23 21 23 26 14 23 16 14 23 23 21 26 16 23 23 23 27 18 14 23 21 23 21 CP (events your control generates.  The handler will invoke separate virtual handler) K
436 1751 m
12 14 23 21 23 21 10 23 21 21 21 10 16 23 16 10 18 23 23 14 14 21 23 23 16 CP (functions for each event.) K
361 1674 m
17 CP (\007) K
436 1674 m
16 23 21 12 18 16 21 14 21 35 21 16 21 23 21 14 23 21 23 21 21 14 21 14 21 21 23 18 21 23 23 21 21 21 14 21 14 23 18 23 21 21 23 21 21 23 14 22 18 21 18 18 21 14 21 22 14 23 21 23 21 22 35 23 14 18 23 21 22 21 16 23 35 22 16 23 22 21 23 32 CP (One or more custom event classes to encapsulate any special event parameters, or) K
436 1624 m
14 23 16 14 23 23 21 10 16 23 23 23 10 23 21 14 23 32 10 12 18 14 14 23 18 21 16 CP (results, which your control) K
42 /Times-Roman SF
16 CP CP1004 /Font500 /Times-Roman redefine
42 /Font500 SF
(\222) K
42 /Font300 SF
12 21 16 14 23 23 21 16 10 18 14 23 21 23 21 10 23 23 14 14 21 21 14 16 14 14 23 23 10 18 CP (s notification events require.) K
323 1547 m
12 35 21 16 23 23 16 23 10 14 18 21 14 10 21 10 23 23 21 10 12 14 23 16 14 23 23 21 10 14 21 18 10 21 23 14 21 23 10 21 23 14 10 14 23 21 35 21 14 23 35 14 10 14 21 23 14 10 18 21 18 18 21 14 21 10 21 23 14 10 16 23 10 23 23 14 14 14 23 14 16 21 23 10 21 14 21 14 23 35 23 21 11 21 23 28 CP (The complete definition of the classes that implement the value set control, and a test program,) K
323 1497 m
12 12 12 23 18 14 23 12 35 21 16 23 23 16 23 12 21 14 23 35 21 23 21 12 21 23 14 12 23 23 12 23 21 23 14 21 14 23 23 21 12 21 16 21 CP (are contained on the example program disk.  ) K
23 16 23 23 12 21 14 23 21 25 CP (Table 30-4) K
14 21 18 12 21 23 14 21 23 12 21 23 14 12 16 23 12 23 23 14 14 21 21 23 14 12 21 23 14 12 18 21 14 21 21 14 23 23 14 12 CP ( indicates the location of the value set) K
323 1448 m
12 18 35 21 16 23 23 16 23 10 21 18 21 23 14 10 14 14 21 14 18 23 14 10 23 23 23 10 16 21 14 16 21 10 12 18 14 23 21 23 23 23 35 23 21 CP (components, after you install these programs.) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
323 2794 m
472 2794 l
472 2861 l
323 2861 l cp
clip n msbeforeclp SM
46 /Times-Bold SF
323 2819 m
25 25 25 CP (792) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
473 2794 m
2085 2794 l
2085 2861 l
473 2861 l cp
clip n msbeforeclp SM
473 2819 m
28 28 35 11 21 25 17 11 22 25 35 15 25 28 20 15 33 10 28 17 15 35 11 25 28 15 40 40 25 22 25 25 21 30 11 20 35 38 11 21 22 35 25 30 CP (Power GUI Programming with VisualAge for C++) K
ic
/msbeforeclp mx cm def n [1 0 0 1 0 0] setmx
0 0 m
2394 0 l
2394 3232 l
0 3232 l cp
clip n msbeforeclp SM
%%Trailer
end
showpage
